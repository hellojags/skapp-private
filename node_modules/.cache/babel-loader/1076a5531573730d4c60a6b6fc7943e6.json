{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.loadMySky = loadMySky;\nObject.defineProperty(exports, \"DacLibrary\", {\n  enumerable: true,\n  get: function () {\n    return _dac.DacLibrary;\n  }\n});\nexports.MySky = exports.mySkyDevDomain = exports.mySkyDomain = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _dac = require(\"./dac\");\n\nvar _postMe = require(\"post-me\");\n\nvar _skynetMyskyUtils = require(\"skynet-mysky-utils\");\n\nvar _connector = require(\"./connector\");\n\nvar _registry = require(\"../registry\");\n\nvar _skydb = require(\"../skydb\");\n\nvar _string = require(\"../utils/string\");\n\nvar _tweak = require(\"./tweak\");\n\nvar _utils = require(\"./utils\");\n\nvar _validation = require(\"../utils/validation\");\n\nvar _options = require(\"../utils/options\");\n\nasync function loadMySky(skappDomain, customOptions) {\n  const mySky = await MySky.New(this, skappDomain, customOptions);\n  return mySky;\n}\n\nconst mySkyDomain = \"skynet-mysky.hns\";\nexports.mySkyDomain = mySkyDomain;\nconst mySkyDevDomain = \"sandbridge.hns\";\nexports.mySkyDevDomain = mySkyDevDomain;\nconst mySkyUiRelativeUrl = \"ui.html\";\nconst mySkyUiTitle = \"MySky UI\";\nconst [mySkyUiW, mySkyUiH] = [500, 500];\n\nclass MySky {\n  // ============\n  // Constructors\n  // ============\n  constructor(connector, permissions, hostDomain) {\n    this.connector = connector;\n    this.hostDomain = hostDomain;\n    (0, _defineProperty2.default)(this, \"dacs\", []);\n    (0, _defineProperty2.default)(this, \"grantedPermissions\", []);\n    (0, _defineProperty2.default)(this, \"pendingPermissions\", void 0);\n    this.pendingPermissions = permissions;\n  }\n\n  static async New(client, skappDomain, customOptions) {\n    const opts = { ..._connector.defaultConnectorOptions,\n      ...customOptions\n    }; // Enforce singleton.\n\n    if (MySky.instance) {\n      return MySky.instance;\n    }\n\n    let domain = mySkyDomain;\n\n    if (opts.dev) {\n      domain = mySkyDevDomain;\n    }\n\n    const connector = await _connector.Connector.init(client, domain, customOptions);\n    const hostDomain = await client.extractDomain(window.location.hostname);\n    const permissions = [];\n\n    if (skappDomain) {\n      // TODO: Are these permissions correct?\n      const perm1 = new _skynetMyskyUtils.Permission(hostDomain, skappDomain, _skynetMyskyUtils.PermCategory.Hidden, _skynetMyskyUtils.PermType.Read);\n      const perm2 = new _skynetMyskyUtils.Permission(hostDomain, skappDomain, _skynetMyskyUtils.PermCategory.Hidden, _skynetMyskyUtils.PermType.Write);\n      permissions.push(perm1, perm2);\n    }\n\n    MySky.instance = new MySky(connector, permissions, hostDomain);\n    return MySky.instance;\n  } // ==========\n  // Public API\n  // ==========\n\n  /**\n   * Loads the given DACs.\n   */\n\n\n  async loadDacs(...dacs) {\n    const promises = [];\n\n    for (const dac of dacs) {\n      promises.push(this.loadDac(dac));\n    }\n\n    this.dacs.push(...dacs);\n    await Promise.all(promises);\n  }\n\n  async addPermissions(...permissions) {\n    this.pendingPermissions.push(...permissions);\n  }\n\n  async checkLogin() {\n    const [seedFound, permissionsResponse] = await this.connector.connection.remoteHandle().call(\"checkLogin\", this.pendingPermissions); // Save granted and failed permissions.\n\n    const {\n      grantedPermissions,\n      failedPermissions\n    } = permissionsResponse;\n    this.grantedPermissions = grantedPermissions;\n    this.pendingPermissions = failedPermissions;\n    const loggedIn = seedFound && failedPermissions.length === 0;\n    this.handleLogin(loggedIn);\n    return loggedIn;\n  }\n  /**\n   * Destroys the mysky connection by:\n   *\n   * 1. Destroying the connected DACs,\n   *\n   * 2. Closing the connection,\n   *\n   * 3. Closing the child iframe\n   */\n\n\n  async destroy() {\n    // TODO: For all connected dacs, send a destroy call.\n    // TODO: Delete all connected dacs.\n    // Close the connection.\n    this.connector.connection.close(); // Close the child iframe.\n\n    if (this.connector.childFrame) {\n      this.connector.childFrame.parentNode.removeChild(this.connector.childFrame);\n    }\n  }\n\n  async logout() {\n    return await this.connector.connection.remoteHandle().call(\"logout\");\n  }\n\n  async requestLoginAccess() {\n    let uiWindow;\n    let uiConnection;\n    let seedFound = false; // Add error listener.\n\n    const {\n      promise: promiseError,\n      controller: controllerError\n    } = (0, _skynetMyskyUtils.monitorWindowError)(); // eslint-disable-next-line no-async-promise-executor\n\n    const promise = new Promise(async (resolve, reject) => {\n      // Make this promise run in the background and reject on window close or any errors.\n      promiseError.catch(err => {\n        if (err === _skynetMyskyUtils.errorWindowClosed) {\n          // Resolve without updating the pending permissions.\n          resolve();\n          return;\n        }\n\n        reject(err);\n      });\n\n      try {\n        // Launch the UI.\n        uiWindow = await this.launchUI();\n        uiConnection = await this.connectUi(uiWindow); // Send the UI the list of required permissions.\n        // TODO: This should be a dual-promise that also calls ping() on an interval and rejects if no response was found in a given amount of time.\n\n        const [seedFoundResponse, permissionsResponse] = await uiConnection.remoteHandle().call(\"requestLoginAccess\", this.pendingPermissions);\n        seedFound = seedFoundResponse; // Save failed permissions.\n\n        const {\n          grantedPermissions,\n          failedPermissions\n        } = permissionsResponse;\n        this.grantedPermissions = grantedPermissions;\n        this.pendingPermissions = failedPermissions;\n        resolve();\n      } catch (err) {\n        reject(err);\n      }\n    });\n    await promise.catch(err => {\n      throw err;\n    }).finally(() => {\n      // Close the window.\n      if (uiWindow) {\n        uiWindow.close();\n      } // Close the connection.\n\n\n      if (uiConnection) {\n        uiConnection.close();\n      } // Clean up the event listeners and promises.\n\n\n      controllerError.cleanup();\n    });\n    const loggedIn = seedFound && this.pendingPermissions.length === 0;\n    this.handleLogin(loggedIn);\n    return loggedIn;\n  }\n\n  async userID() {\n    return await this.connector.connection.remoteHandle().call(\"userID\");\n  }\n  /**\n   * Gets Discoverable JSON at the given path through MySky, if the user has given permissions to do so.\n   *\n   * @param path - The data path.\n   * @param [customOptions] - Additional settings that can optionally be set.\n   * @returns - An object containing the json data as well as the skylink for the data.\n   */\n\n\n  async getJSON(path, customOptions) {\n    (0, _validation.validateString)(\"path\", path, \"parameter\");\n    (0, _validation.validateOptionalObject)(\"customOptions\", customOptions, \"parameter\", _skydb.defaultGetJSONOptions);\n    const opts = { ..._skydb.defaultGetJSONOptions,\n      ...this.connector.client.customOptions,\n      ...customOptions\n    };\n    const publicKey = await this.userID();\n    const dataKey = (0, _tweak.deriveDiscoverableTweak)(path);\n    opts.hashedDataKeyHex = true; // Do not hash the tweak anymore.\n\n    return await this.connector.client.db.getJSON(publicKey, dataKey, opts);\n  }\n  /**\n   * Sets Discoverable JSON at the given path through MySky, if the user has given permissions to do so.\n   *\n   * @param path - The data path.\n   * @param json - The json to set.\n   * @param [customOptions] - Additional settings that can optionally be set.\n   * @returns - An object containing the json data as well as the skylink for the data.\n   */\n\n\n  async setJSON(path, json, customOptions) {\n    (0, _validation.validateString)(\"path\", path, \"parameter\");\n    (0, _validation.validateObject)(\"json\", json, \"parameter\");\n    (0, _validation.validateOptionalObject)(\"customOptions\", customOptions, \"parameter\", _skydb.defaultSetJSONOptions);\n    const opts = { ..._skydb.defaultSetJSONOptions,\n      ...this.connector.client.customOptions,\n      ...customOptions\n    };\n    const publicKey = await this.userID();\n    const dataKey = (0, _tweak.deriveDiscoverableTweak)(path);\n    opts.hashedDataKeyHex = true; // Do not hash the tweak anymore.\n\n    const [entry, skylink] = await (0, _skydb.getOrCreateRegistryEntry)(this.connector.client, (0, _string.hexToUint8Array)(publicKey), dataKey, json, opts);\n    const signature = await this.signRegistryEntry(entry, path);\n    const setEntryOpts = (0, _options.extractOptions)(opts, _registry.defaultSetEntryOptions);\n    await this.connector.client.registry.postSignedEntry(publicKey, entry, signature, setEntryOpts);\n    return {\n      data: json,\n      skylink\n    };\n  } // ================\n  // Internal Methods\n  // ================\n\n\n  async catchError(errorMsg) {\n    const event = new CustomEvent(_skynetMyskyUtils.dispatchedErrorEvent, {\n      detail: errorMsg\n    });\n    window.dispatchEvent(event);\n  }\n\n  async launchUI() {\n    const mySkyUrl = new URL(this.connector.url);\n    mySkyUrl.pathname = mySkyUiRelativeUrl;\n    const uiUrl = mySkyUrl.toString(); // Open the window.\n\n    const childWindow = (0, _utils.popupCenter)(uiUrl, mySkyUiTitle, mySkyUiW, mySkyUiH);\n\n    if (!childWindow) {\n      throw new Error(\"Could not open window at '\".concat(uiUrl, \"'\"));\n    }\n\n    return childWindow;\n  }\n\n  async connectUi(childWindow) {\n    const options = this.connector.options; // Complete handshake with UI window.\n\n    const messenger = new _postMe.WindowMessenger({\n      localWindow: window,\n      remoteWindow: childWindow,\n      remoteOrigin: \"*\"\n    });\n    const methods = {\n      catchError: this.catchError\n    };\n    const connection = await (0, _postMe.ParentHandshake)(messenger, methods, options.handshakeMaxAttempts, options.handshakeAttemptsInterval);\n    return connection;\n  }\n\n  async loadDac(dac) {\n    // Initialize DAC.\n    await dac.init(this.connector.client, this.connector.options); // Add DAC permissions.\n\n    const perms = dac.getPermissions();\n    this.addPermissions(...perms);\n  }\n\n  handleLogin(loggedIn) {\n    if (loggedIn) {\n      for (const dac of this.dacs) {\n        dac.onUserLogin();\n      }\n    }\n  }\n\n  async signRegistryEntry(entry, path) {\n    return await this.connector.connection.remoteHandle().call(\"signRegistryEntry\", entry, path);\n  }\n\n}\n\nexports.MySky = MySky;\n(0, _defineProperty2.default)(MySky, \"instance\", null);","map":{"version":3,"sources":["C:/Users/Usama_Sadiq/Documents/React App/2/skapp-private/node_modules/skynet-js/dist/mysky/index.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","loadMySky","enumerable","get","_dac","DacLibrary","MySky","mySkyDevDomain","mySkyDomain","_defineProperty2","_postMe","_skynetMyskyUtils","_connector","_registry","_skydb","_string","_tweak","_utils","_validation","_options","skappDomain","customOptions","mySky","New","mySkyUiRelativeUrl","mySkyUiTitle","mySkyUiW","mySkyUiH","constructor","connector","permissions","hostDomain","default","pendingPermissions","client","opts","defaultConnectorOptions","instance","domain","dev","Connector","init","extractDomain","window","location","hostname","perm1","Permission","PermCategory","Hidden","PermType","Read","perm2","Write","push","loadDacs","dacs","promises","dac","loadDac","Promise","all","addPermissions","checkLogin","seedFound","permissionsResponse","connection","remoteHandle","call","grantedPermissions","failedPermissions","loggedIn","length","handleLogin","destroy","close","childFrame","parentNode","removeChild","logout","requestLoginAccess","uiWindow","uiConnection","promise","promiseError","controller","controllerError","monitorWindowError","resolve","reject","catch","err","errorWindowClosed","launchUI","connectUi","seedFoundResponse","finally","cleanup","userID","getJSON","path","validateString","validateOptionalObject","defaultGetJSONOptions","publicKey","dataKey","deriveDiscoverableTweak","hashedDataKeyHex","db","setJSON","json","validateObject","defaultSetJSONOptions","entry","skylink","getOrCreateRegistryEntry","hexToUint8Array","signature","signRegistryEntry","setEntryOpts","extractOptions","defaultSetEntryOptions","registry","postSignedEntry","data","catchError","errorMsg","event","CustomEvent","dispatchedErrorEvent","detail","dispatchEvent","mySkyUrl","URL","url","pathname","uiUrl","toString","childWindow","popupCenter","Error","concat","options","messenger","WindowMessenger","localWindow","remoteWindow","remoteOrigin","methods","ParentHandshake","handshakeMaxAttempts","handshakeAttemptsInterval","perms","getPermissions","onUserLogin"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.loadMySky = loadMySky;\nObject.defineProperty(exports, \"DacLibrary\", {\n  enumerable: true,\n  get: function () {\n    return _dac.DacLibrary;\n  }\n});\nexports.MySky = exports.mySkyDevDomain = exports.mySkyDomain = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _dac = require(\"./dac\");\n\nvar _postMe = require(\"post-me\");\n\nvar _skynetMyskyUtils = require(\"skynet-mysky-utils\");\n\nvar _connector = require(\"./connector\");\n\nvar _registry = require(\"../registry\");\n\nvar _skydb = require(\"../skydb\");\n\nvar _string = require(\"../utils/string\");\n\nvar _tweak = require(\"./tweak\");\n\nvar _utils = require(\"./utils\");\n\nvar _validation = require(\"../utils/validation\");\n\nvar _options = require(\"../utils/options\");\n\nasync function loadMySky(skappDomain, customOptions) {\n  const mySky = await MySky.New(this, skappDomain, customOptions);\n  return mySky;\n}\n\nconst mySkyDomain = \"skynet-mysky.hns\";\nexports.mySkyDomain = mySkyDomain;\nconst mySkyDevDomain = \"sandbridge.hns\";\nexports.mySkyDevDomain = mySkyDevDomain;\nconst mySkyUiRelativeUrl = \"ui.html\";\nconst mySkyUiTitle = \"MySky UI\";\nconst [mySkyUiW, mySkyUiH] = [500, 500];\n\nclass MySky {\n  // ============\n  // Constructors\n  // ============\n  constructor(connector, permissions, hostDomain) {\n    this.connector = connector;\n    this.hostDomain = hostDomain;\n    (0, _defineProperty2.default)(this, \"dacs\", []);\n    (0, _defineProperty2.default)(this, \"grantedPermissions\", []);\n    (0, _defineProperty2.default)(this, \"pendingPermissions\", void 0);\n    this.pendingPermissions = permissions;\n  }\n\n  static async New(client, skappDomain, customOptions) {\n    const opts = { ..._connector.defaultConnectorOptions,\n      ...customOptions\n    }; // Enforce singleton.\n\n    if (MySky.instance) {\n      return MySky.instance;\n    }\n\n    let domain = mySkyDomain;\n\n    if (opts.dev) {\n      domain = mySkyDevDomain;\n    }\n\n    const connector = await _connector.Connector.init(client, domain, customOptions);\n    const hostDomain = await client.extractDomain(window.location.hostname);\n    const permissions = [];\n\n    if (skappDomain) {\n      // TODO: Are these permissions correct?\n      const perm1 = new _skynetMyskyUtils.Permission(hostDomain, skappDomain, _skynetMyskyUtils.PermCategory.Hidden, _skynetMyskyUtils.PermType.Read);\n      const perm2 = new _skynetMyskyUtils.Permission(hostDomain, skappDomain, _skynetMyskyUtils.PermCategory.Hidden, _skynetMyskyUtils.PermType.Write);\n      permissions.push(perm1, perm2);\n    }\n\n    MySky.instance = new MySky(connector, permissions, hostDomain);\n    return MySky.instance;\n  } // ==========\n  // Public API\n  // ==========\n\n  /**\n   * Loads the given DACs.\n   */\n\n\n  async loadDacs(...dacs) {\n    const promises = [];\n\n    for (const dac of dacs) {\n      promises.push(this.loadDac(dac));\n    }\n\n    this.dacs.push(...dacs);\n    await Promise.all(promises);\n  }\n\n  async addPermissions(...permissions) {\n    this.pendingPermissions.push(...permissions);\n  }\n\n  async checkLogin() {\n    const [seedFound, permissionsResponse] = await this.connector.connection.remoteHandle().call(\"checkLogin\", this.pendingPermissions); // Save granted and failed permissions.\n\n    const {\n      grantedPermissions,\n      failedPermissions\n    } = permissionsResponse;\n    this.grantedPermissions = grantedPermissions;\n    this.pendingPermissions = failedPermissions;\n    const loggedIn = seedFound && failedPermissions.length === 0;\n    this.handleLogin(loggedIn);\n    return loggedIn;\n  }\n  /**\n   * Destroys the mysky connection by:\n   *\n   * 1. Destroying the connected DACs,\n   *\n   * 2. Closing the connection,\n   *\n   * 3. Closing the child iframe\n   */\n\n\n  async destroy() {\n    // TODO: For all connected dacs, send a destroy call.\n    // TODO: Delete all connected dacs.\n    // Close the connection.\n    this.connector.connection.close(); // Close the child iframe.\n\n    if (this.connector.childFrame) {\n      this.connector.childFrame.parentNode.removeChild(this.connector.childFrame);\n    }\n  }\n\n  async logout() {\n    return await this.connector.connection.remoteHandle().call(\"logout\");\n  }\n\n  async requestLoginAccess() {\n    let uiWindow;\n    let uiConnection;\n    let seedFound = false; // Add error listener.\n\n    const {\n      promise: promiseError,\n      controller: controllerError\n    } = (0, _skynetMyskyUtils.monitorWindowError)(); // eslint-disable-next-line no-async-promise-executor\n\n    const promise = new Promise(async (resolve, reject) => {\n      // Make this promise run in the background and reject on window close or any errors.\n      promiseError.catch(err => {\n        if (err === _skynetMyskyUtils.errorWindowClosed) {\n          // Resolve without updating the pending permissions.\n          resolve();\n          return;\n        }\n\n        reject(err);\n      });\n\n      try {\n        // Launch the UI.\n        uiWindow = await this.launchUI();\n        uiConnection = await this.connectUi(uiWindow); // Send the UI the list of required permissions.\n        // TODO: This should be a dual-promise that also calls ping() on an interval and rejects if no response was found in a given amount of time.\n\n        const [seedFoundResponse, permissionsResponse] = await uiConnection.remoteHandle().call(\"requestLoginAccess\", this.pendingPermissions);\n        seedFound = seedFoundResponse; // Save failed permissions.\n\n        const {\n          grantedPermissions,\n          failedPermissions\n        } = permissionsResponse;\n        this.grantedPermissions = grantedPermissions;\n        this.pendingPermissions = failedPermissions;\n        resolve();\n      } catch (err) {\n        reject(err);\n      }\n    });\n    await promise.catch(err => {\n      throw err;\n    }).finally(() => {\n      // Close the window.\n      if (uiWindow) {\n        uiWindow.close();\n      } // Close the connection.\n\n\n      if (uiConnection) {\n        uiConnection.close();\n      } // Clean up the event listeners and promises.\n\n\n      controllerError.cleanup();\n    });\n    const loggedIn = seedFound && this.pendingPermissions.length === 0;\n    this.handleLogin(loggedIn);\n    return loggedIn;\n  }\n\n  async userID() {\n    return await this.connector.connection.remoteHandle().call(\"userID\");\n  }\n  /**\n   * Gets Discoverable JSON at the given path through MySky, if the user has given permissions to do so.\n   *\n   * @param path - The data path.\n   * @param [customOptions] - Additional settings that can optionally be set.\n   * @returns - An object containing the json data as well as the skylink for the data.\n   */\n\n\n  async getJSON(path, customOptions) {\n    (0, _validation.validateString)(\"path\", path, \"parameter\");\n    (0, _validation.validateOptionalObject)(\"customOptions\", customOptions, \"parameter\", _skydb.defaultGetJSONOptions);\n    const opts = { ..._skydb.defaultGetJSONOptions,\n      ...this.connector.client.customOptions,\n      ...customOptions\n    };\n    const publicKey = await this.userID();\n    const dataKey = (0, _tweak.deriveDiscoverableTweak)(path);\n    opts.hashedDataKeyHex = true; // Do not hash the tweak anymore.\n\n    return await this.connector.client.db.getJSON(publicKey, dataKey, opts);\n  }\n  /**\n   * Sets Discoverable JSON at the given path through MySky, if the user has given permissions to do so.\n   *\n   * @param path - The data path.\n   * @param json - The json to set.\n   * @param [customOptions] - Additional settings that can optionally be set.\n   * @returns - An object containing the json data as well as the skylink for the data.\n   */\n\n\n  async setJSON(path, json, customOptions) {\n    (0, _validation.validateString)(\"path\", path, \"parameter\");\n    (0, _validation.validateObject)(\"json\", json, \"parameter\");\n    (0, _validation.validateOptionalObject)(\"customOptions\", customOptions, \"parameter\", _skydb.defaultSetJSONOptions);\n    const opts = { ..._skydb.defaultSetJSONOptions,\n      ...this.connector.client.customOptions,\n      ...customOptions\n    };\n    const publicKey = await this.userID();\n    const dataKey = (0, _tweak.deriveDiscoverableTweak)(path);\n    opts.hashedDataKeyHex = true; // Do not hash the tweak anymore.\n\n    const [entry, skylink] = await (0, _skydb.getOrCreateRegistryEntry)(this.connector.client, (0, _string.hexToUint8Array)(publicKey), dataKey, json, opts);\n    const signature = await this.signRegistryEntry(entry, path);\n    const setEntryOpts = (0, _options.extractOptions)(opts, _registry.defaultSetEntryOptions);\n    await this.connector.client.registry.postSignedEntry(publicKey, entry, signature, setEntryOpts);\n    return {\n      data: json,\n      skylink\n    };\n  } // ================\n  // Internal Methods\n  // ================\n\n\n  async catchError(errorMsg) {\n    const event = new CustomEvent(_skynetMyskyUtils.dispatchedErrorEvent, {\n      detail: errorMsg\n    });\n    window.dispatchEvent(event);\n  }\n\n  async launchUI() {\n    const mySkyUrl = new URL(this.connector.url);\n    mySkyUrl.pathname = mySkyUiRelativeUrl;\n    const uiUrl = mySkyUrl.toString(); // Open the window.\n\n    const childWindow = (0, _utils.popupCenter)(uiUrl, mySkyUiTitle, mySkyUiW, mySkyUiH);\n\n    if (!childWindow) {\n      throw new Error(\"Could not open window at '\".concat(uiUrl, \"'\"));\n    }\n\n    return childWindow;\n  }\n\n  async connectUi(childWindow) {\n    const options = this.connector.options; // Complete handshake with UI window.\n\n    const messenger = new _postMe.WindowMessenger({\n      localWindow: window,\n      remoteWindow: childWindow,\n      remoteOrigin: \"*\"\n    });\n    const methods = {\n      catchError: this.catchError\n    };\n    const connection = await (0, _postMe.ParentHandshake)(messenger, methods, options.handshakeMaxAttempts, options.handshakeAttemptsInterval);\n    return connection;\n  }\n\n  async loadDac(dac) {\n    // Initialize DAC.\n    await dac.init(this.connector.client, this.connector.options); // Add DAC permissions.\n\n    const perms = dac.getPermissions();\n    this.addPermissions(...perms);\n  }\n\n  handleLogin(loggedIn) {\n    if (loggedIn) {\n      for (const dac of this.dacs) {\n        dac.onUserLogin();\n      }\n    }\n  }\n\n  async signRegistryEntry(entry, path) {\n    return await this.connector.connection.remoteHandle().call(\"signRegistryEntry\", entry, path);\n  }\n\n}\n\nexports.MySky = MySky;\n(0, _defineProperty2.default)(MySky, \"instance\", null);"]},"metadata":{},"sourceType":"script"}