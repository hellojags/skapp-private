{"ast":null,"code":"import imageCompression from \"browser-image-compression\";\nimport { BROWSER_STORAGE, STORAGE_USER_SESSION_KEY, DEFAULT_PORTAL, ID_PROVIDER_SKYID } from \"./SnConstants\";\nimport base64 from \"base64-js\";\nimport base32Encode from \"base32-encode\";\nexport function decodeBase64(input = \"\") {\n  return base64.toByteArray(input.padEnd(input.length + 4 - input.length % 4, \"=\"));\n}\nexport function encodeBase32(input) {\n  return base32Encode(input, \"RFC4648-HEX\", {\n    padding: false\n  }).toLowerCase();\n}\nexport function getBase32Skylink(skylink) {\n  return encodeBase32(decodeBase64(skylink));\n}\nexport const getCompatibleTags = resCategory => {\n  let category = [];\n\n  if (resCategory != null) {\n    if (Array.isArray(resCategory)) {\n      category = resCategory.map(cat => cat.toLowerCase());\n    } else {\n      category = [resCategory.toLowerCase()];\n    }\n  }\n\n  return JSON.parse(JSON.stringify(category));\n};\nexport const getSkyspaceListForCarousalMenu = snSkyspaceList => {\n  if (snSkyspaceList != null) {\n    const carousalMenuObj = {};\n    snSkyspaceList.forEach(skyspace => {\n      carousalMenuObj[skyspace] = {\n        label: skyspace\n      };\n    });\n    return carousalMenuObj;\n  }\n};\n/** Start : Skynet Methods * */\n\nexport const getPortal = () => {\n  // let skynetPortal = store.getState().snUserSetting?.setting?.portal\n  // skynetPortal =\n  //   skynetPortal && skynetPortal.trim() !== \"\" ? skynetPortal : DEFAULT_PORTAL\n  return \"https://siasky.net/\";\n}; // It will generate base32 url for any Skapp\n\nconst getbase32URlForSkapp = skylink => {\n  let base32URL = null;\n  return base32URL;\n}; // // I think we can use idp field in session object for this\n// export const getUserSessionType = (userSession) => {\n//   let idType = ID_PROVIDER_SKYID\n//   // ID_PROVIDER_BLOCKSTACK;\n//   if (userSession.skydbseed) {\n//     idType = ID_PROVIDER_SKYDB\n//   } else if (userSession.skyid) {\n//     idType = ID_PROVIDER_SKYID\n//   }\n//   return idType\n// }\n\n/**\r\n * Compresses Image file to Skyspace params. Returns an Object of type File\r\n * \r\n * @param {File} originalFile Original File.\r\n */\n\n\nexport const getCompressedImageFile = async originalFile => {\n  const compressedBlob = await imageCompression(originalFile, {\n    maxSizeMB: 1,\n    maxWidthOrHeight: 256,\n    useWebWorker: true\n  });\n  return new File([compressedBlob], compressedBlob.name);\n};\n/**\r\n * Generates thumbnail image file out of the first frame of the video file.\r\n * \r\n * @param {Object} Object\r\n * @param {string?} Object.url - The video source Url.\r\n * @param {string?} Object.file - Optional video file object reference. If the Url s not provided, \r\n * then this property must have a value. If the url does have a valu then this property will be ignored.\r\n */\n\nexport const generateThumbnailFromVideo = async ({\n  file,\n  url\n}) => {\n  let videoResolve = null;\n  const videoPromise = new Promise(resolve => {\n    videoResolve = resolve;\n  });\n  let video = document.createElement('video');\n  video.crossOrigin = \"anonymous\";\n  video.src = url ? url : URL.createObjectURL(file);\n  video.load();\n  await videoPromise;\n  const videoThumbnail = await videoToImg(video);\n  return videoThumbnail;\n};\n/**\r\n * Takes a video element and that has image already loaded and returns an image file which is a thumbnail\r\n * generated out of the first frame of the video \r\n * \r\n * @param {Element} video Video Element.\r\n */\n\nexport const videoToImg = async video => {\n  let canvas = document.createElement(\"canvas\");\n  let w = video.videoWidth;\n  let h = video.videoHeight;\n  canvas.width = w;\n  canvas.height = h;\n  let ctx = canvas.getContext(\"2d\");\n  ctx.drawImage(video, 0, 0, w, h);\n  let file = await imageCompression.canvasToFile(canvas, \"image/jpeg\");\n  return file;\n};\nexport const getPortalFromUserSetting = userSetting => {\n  // TODO : extract user selected portal from store . Returning default portal for now.\n  return DEFAULT_PORTAL;\n};\nexport const skylinkToUrl = (skyLink, userSetting) => {\n  let link = \"\";\n  const portal = userSetting ? getPortalFromUserSetting(userSetting) : DEFAULT_PORTAL;\n\n  if (skyLink.indexOf(\"http://\") === 0 || skyLink.indexOf(\"https://\") === 0) {\n    link = skyLink;\n  } else if (skyLink.indexOf(\"sia://\") === 0) {\n    link = skyLink.replace(\"sia://\", portal);\n  } else if (skyLink.indexOf(\"sia:\") === 0) {\n    link = skyLink.replace(\"sia:\", getPortalFromUserSetting(userSetting));\n  } else if (skyLink.length === 46) {\n    link = portal + skyLink;\n  }\n\n  return link;\n};\nexport const hashFromSkylinkUploadResponse = response => response.skylink.replace(\"sia:\", \"\");\nexport const launchSkyLink = (skyLink, userSetting) => {\n  const link = skylinkToUrl(skyLink, userSetting);\n\n  if (link !== \"\") {\n    window.open(link, \"_blank\");\n  }\n};\nexport const flattenObject = obj => {\n  const flattened = {};\n  Object.keys(obj).forEach(key => {\n    if (typeof obj[key] === 'object' && obj[key] !== null) {\n      Object.assign(flattened, flattenObject(obj[key]));\n    } else {\n      flattened[key] = obj[key];\n    }\n  });\n  return flattened;\n};\n/**\r\n * \r\n * @param {String} searchStr Required. The string to search for in the object\r\n * @param {Object} obj Required. The object in which the searchStr will be searched. \r\n * \r\n * @description Searches for the searchStr in the value of every leaf node of the object. \r\n * The method performs a case agnostic substring search. It returns true id searchStr in null.\r\n */\n\nexport const isStrInObj = (searchStr, obj) => {\n  if (obj) {\n    const flattenedObj = flattenObject(obj);\n    return searchStr == null || Object.keys(flattenedObj).some(key => flattenedObj[key] != null && flattenedObj[key].toString().toLowerCase().includes(searchStr.toLowerCase()));\n  } else {\n    return true;\n  }\n};\nexport const getUserSession = () => {\n  let session = null;\n\n  try {\n    session = JSON.parse(BROWSER_STORAGE.getItem(STORAGE_USER_SESSION_KEY));\n  } catch (e) {\n    return session;\n  }\n\n  return session;\n};\nexport const genHostedAppSkappUrl = hostedAppDetail => {\n  var _hostedAppDetail$cont, _hostedAppDetail$cont2;\n\n  return (hostedAppDetail === null || hostedAppDetail === void 0 ? void 0 : (_hostedAppDetail$cont = hostedAppDetail.content) === null || _hostedAppDetail$cont === void 0 ? void 0 : _hostedAppDetail$cont.hns) && (hostedAppDetail === null || hostedAppDetail === void 0 ? void 0 : (_hostedAppDetail$cont2 = hostedAppDetail.content) === null || _hostedAppDetail$cont2 === void 0 ? void 0 : _hostedAppDetail$cont2.storageGateway) && `https://${hostedAppDetail.content.hns}.hns.${hostedAppDetail.content.storageGateway}`;\n};","map":{"version":3,"sources":["C:/Users/Usama_Sadiq/Documents/React App/2/skapp-private/src/utils/SnUtility.js"],"names":["imageCompression","BROWSER_STORAGE","STORAGE_USER_SESSION_KEY","DEFAULT_PORTAL","ID_PROVIDER_SKYID","base64","base32Encode","decodeBase64","input","toByteArray","padEnd","length","encodeBase32","padding","toLowerCase","getBase32Skylink","skylink","getCompatibleTags","resCategory","category","Array","isArray","map","cat","JSON","parse","stringify","getSkyspaceListForCarousalMenu","snSkyspaceList","carousalMenuObj","forEach","skyspace","label","getPortal","getbase32URlForSkapp","base32URL","getCompressedImageFile","originalFile","compressedBlob","maxSizeMB","maxWidthOrHeight","useWebWorker","File","name","generateThumbnailFromVideo","file","url","videoResolve","videoPromise","Promise","resolve","video","document","createElement","crossOrigin","src","URL","createObjectURL","load","videoThumbnail","videoToImg","canvas","w","videoWidth","h","videoHeight","width","height","ctx","getContext","drawImage","canvasToFile","getPortalFromUserSetting","userSetting","skylinkToUrl","skyLink","link","portal","indexOf","replace","hashFromSkylinkUploadResponse","response","launchSkyLink","window","open","flattenObject","obj","flattened","Object","keys","key","assign","isStrInObj","searchStr","flattenedObj","some","toString","includes","getUserSession","session","getItem","e","genHostedAppSkappUrl","hostedAppDetail","content","hns","storageGateway"],"mappings":"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","sourcesContent":["import imageCompression from \"browser-image-compression\";\r\nimport { BROWSER_STORAGE, STORAGE_USER_SESSION_KEY , DEFAULT_PORTAL, ID_PROVIDER_SKYID} from \"./SnConstants\";\r\nimport base64 from \"base64-js\";\r\nimport base32Encode from \"base32-encode\";\r\n\r\nexport function decodeBase64(input = \"\") {\r\n  return base64.toByteArray(\r\n    input.padEnd(input.length + 4 - (input.length % 4), \"=\")\r\n  );\r\n}\r\n\r\nexport function encodeBase32(input) {\r\n  return base32Encode(input, \"RFC4648-HEX\", { padding: false }).toLowerCase();\r\n}\r\n\r\nexport function getBase32Skylink(skylink) {\r\n  return encodeBase32(decodeBase64(skylink));\r\n}\r\n\r\nexport const getCompatibleTags = (resCategory) => {\r\n    let category = []\r\n    if (resCategory != null) {\r\n      if (Array.isArray(resCategory)) {\r\n        category = resCategory.map((cat) => cat.toLowerCase())\r\n      } else {\r\n        category = [resCategory.toLowerCase()]\r\n      }\r\n    }\r\n    return JSON.parse(JSON.stringify(category))\r\n  }\r\n  \r\n  export const getSkyspaceListForCarousalMenu = (snSkyspaceList) => {\r\n    if (snSkyspaceList != null) {\r\n      const carousalMenuObj = {}\r\n      snSkyspaceList.forEach((skyspace) => {\r\n        carousalMenuObj[skyspace] = {\r\n          label: skyspace,\r\n        }\r\n      })\r\n      return carousalMenuObj\r\n    }\r\n  }\r\n/** Start : Skynet Methods * */\r\nexport const getPortal = () => {\r\n  // let skynetPortal = store.getState().snUserSetting?.setting?.portal\r\n  // skynetPortal =\r\n  //   skynetPortal && skynetPortal.trim() !== \"\" ? skynetPortal : DEFAULT_PORTAL\r\n   return \"https://siasky.net/\"\r\n}\r\n\r\n// It will generate base32 url for any Skapp\r\nconst getbase32URlForSkapp = (skylink) => {\r\n  let base32URL = null;\r\n  return base32URL;\r\n}\r\n\r\n// // I think we can use idp field in session object for this\r\n// export const getUserSessionType = (userSession) => {\r\n//   let idType = ID_PROVIDER_SKYID\r\n//   // ID_PROVIDER_BLOCKSTACK;\r\n//   if (userSession.skydbseed) {\r\n//     idType = ID_PROVIDER_SKYDB\r\n//   } else if (userSession.skyid) {\r\n//     idType = ID_PROVIDER_SKYID\r\n//   }\r\n//   return idType\r\n// }\r\n\r\n/**\r\n * Compresses Image file to Skyspace params. Returns an Object of type File\r\n * \r\n * @param {File} originalFile Original File.\r\n */\r\n\r\nexport const getCompressedImageFile = async(originalFile) => {\r\n  const compressedBlob = await imageCompression(originalFile, {\r\n    maxSizeMB: 1,\r\n    maxWidthOrHeight: 256,\r\n    useWebWorker: true,\r\n  });\r\n  return new File([compressedBlob], compressedBlob.name);\r\n};\r\n\r\n/**\r\n * Generates thumbnail image file out of the first frame of the video file.\r\n * \r\n * @param {Object} Object\r\n * @param {string?} Object.url - The video source Url.\r\n * @param {string?} Object.file - Optional video file object reference. If the Url s not provided, \r\n * then this property must have a value. If the url does have a valu then this property will be ignored.\r\n */\r\n\r\nexport const generateThumbnailFromVideo = async ({file, url}) => {\r\n  let videoResolve = null;\r\n  const videoPromise = new Promise((resolve) => {\r\n    videoResolve = resolve;\r\n  });\r\n  let video = document.createElement('video');\r\n  video.crossOrigin = \"anonymous\";\r\n  video.src = url ? url :  URL.createObjectURL(file);\r\n  video.load();\r\n  await videoPromise;\r\n  const videoThumbnail = await videoToImg(video);\r\n  return videoThumbnail;\r\n};\r\n\r\n/**\r\n * Takes a video element and that has image already loaded and returns an image file which is a thumbnail\r\n * generated out of the first frame of the video \r\n * \r\n * @param {Element} video Video Element.\r\n */\r\n\r\nexport const videoToImg = async (video) => {\r\n  let canvas = document.createElement(\"canvas\");\r\n  let w = video.videoWidth;\r\n  let h = video.videoHeight;\r\n  canvas.width = w;\r\n  canvas.height = h;\r\n  let ctx = canvas.getContext(\"2d\");\r\n  ctx.drawImage(video, 0, 0, w, h);\r\n  let file = await imageCompression.canvasToFile(canvas, \"image/jpeg\");\r\n  return file;\r\n};\r\n\r\nexport const getPortalFromUserSetting = (userSetting) => {\r\n  // TODO : extract user selected portal from store . Returning default portal for now.\r\n  return DEFAULT_PORTAL;\r\n};\r\n\r\nexport const skylinkToUrl = (skyLink, userSetting) => {\r\n  let link = \"\";\r\n  const portal = userSetting ? getPortalFromUserSetting(userSetting) : DEFAULT_PORTAL;\r\n  if (skyLink.indexOf(\"http://\") === 0 || skyLink.indexOf(\"https://\") === 0) {\r\n    link = skyLink;\r\n  } else if (skyLink.indexOf(\"sia://\") === 0) {\r\n    link = skyLink.replace(\"sia://\", portal);\r\n  } else if (skyLink.indexOf(\"sia:\") === 0) {\r\n    link = skyLink.replace(\"sia:\", getPortalFromUserSetting(userSetting));\r\n  } else if (skyLink.length === 46) {\r\n    link = portal + skyLink;\r\n  }\r\n  return link;\r\n};\r\n\r\nexport const hashFromSkylinkUploadResponse = (response) => response.skylink.replace(\"sia:\", \"\");\r\n\r\nexport const launchSkyLink = (skyLink, userSetting) => {\r\n  const link = skylinkToUrl(skyLink, userSetting);\r\n  if (link !== \"\") {\r\n    window.open(link, \"_blank\");\r\n  }\r\n};\r\n\r\nexport const flattenObject = (obj) => {\r\n  const flattened = {};\r\n  Object.keys(obj).forEach((key) => {\r\n    if (typeof obj[key] === 'object' && obj[key] !== null) {\r\n      Object.assign(flattened, flattenObject(obj[key]));\r\n    } else {\r\n      flattened[key] = obj[key]\r\n    }\r\n  });\r\n  return flattened;\r\n};\r\n\r\n/**\r\n * \r\n * @param {String} searchStr Required. The string to search for in the object\r\n * @param {Object} obj Required. The object in which the searchStr will be searched. \r\n * \r\n * @description Searches for the searchStr in the value of every leaf node of the object. \r\n * The method performs a case agnostic substring search. It returns true id searchStr in null.\r\n */\r\nexport const isStrInObj = (searchStr, obj) => {\r\n  if (obj) {\r\n    const flattenedObj = flattenObject(obj);\r\n    return (searchStr==null) || Object.keys(flattenedObj).some(key=>flattenedObj[key]!=null && flattenedObj[key].toString().toLowerCase().includes(searchStr.toLowerCase()));\r\n  } else {\r\n    return true;\r\n  }\r\n};\r\nexport const getUserSession = () => {\r\n  let session = null;\r\n  try {\r\n      session = JSON.parse(BROWSER_STORAGE.getItem(STORAGE_USER_SESSION_KEY))\r\n  }\r\n  catch (e) {\r\n      return session\r\n  }\r\n  return session\r\n}\r\nexport const genHostedAppSkappUrl = (hostedAppDetail) => hostedAppDetail?.content?.hns && hostedAppDetail?.content?.storageGateway && \r\n`https://${hostedAppDetail.content.hns}.hns.${hostedAppDetail.content.storageGateway}`;\r\n"]},"metadata":{},"sourceType":"module"}