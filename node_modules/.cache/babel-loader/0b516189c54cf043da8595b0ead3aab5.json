{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.splitPath = splitPath;\nexports.hashPathComponent = hashPathComponent;\nexports.deriveDiscoverableTweak = deriveDiscoverableTweak;\nexports.DiscoverableBucketTweak = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _crypto = require(\"../crypto\");\n\nvar _string = require(\"../utils/string\");\n\nconst discoverableBucketTweakVersion = 1;\n\nclass DiscoverableBucketTweak {\n  constructor(path) {\n    (0, _defineProperty2.default)(this, \"version\", void 0);\n    (0, _defineProperty2.default)(this, \"path\", void 0);\n    const paths = splitPath(path);\n    const pathHashes = paths.map(hashPathComponent);\n    this.version = discoverableBucketTweakVersion;\n    this.path = pathHashes;\n  }\n\n  encode() {\n    const size = 1 + 32 * this.path.length;\n    const buf = new Uint8Array(size);\n    buf.set([this.version]);\n    let offset = 1;\n\n    for (const pathLevel of this.path) {\n      buf.set(pathLevel, offset);\n      offset += 32;\n    }\n\n    return buf;\n  }\n\n  getHash() {\n    const encoding = this.encode();\n    return (0, _crypto.hashAll)(encoding);\n  }\n\n}\n\nexports.DiscoverableBucketTweak = DiscoverableBucketTweak;\n\nfunction splitPath(path) {\n  return path.split(\"/\");\n}\n\nfunction hashPathComponent(component) {\n  return (0, _crypto.hashAll)((0, _string.stringToUint8ArrayUtf8)(component));\n}\n\nfunction deriveDiscoverableTweak(path) {\n  const dbt = new DiscoverableBucketTweak(path);\n  const bytes = dbt.getHash();\n  return (0, _string.toHexString)(bytes);\n}","map":{"version":3,"sources":["C:/Users/Usama_Sadiq/Documents/React App/2/skapp-private/node_modules/skynet-js/dist/mysky/tweak.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","splitPath","hashPathComponent","deriveDiscoverableTweak","DiscoverableBucketTweak","_defineProperty2","_crypto","_string","discoverableBucketTweakVersion","constructor","path","default","paths","pathHashes","map","version","encode","size","length","buf","Uint8Array","set","offset","pathLevel","getHash","encoding","hashAll","split","component","stringToUint8ArrayUtf8","dbt","bytes","toHexString"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,SAAR,GAAoBA,SAApB;AACAF,OAAO,CAACG,iBAAR,GAA4BA,iBAA5B;AACAH,OAAO,CAACI,uBAAR,GAAkCA,uBAAlC;AACAJ,OAAO,CAACK,uBAAR,GAAkC,KAAK,CAAvC;;AAEA,IAAIC,gBAAgB,GAAGV,sBAAsB,CAACC,OAAO,CAAC,uCAAD,CAAR,CAA7C;;AAEA,IAAIU,OAAO,GAAGV,OAAO,CAAC,WAAD,CAArB;;AAEA,IAAIW,OAAO,GAAGX,OAAO,CAAC,iBAAD,CAArB;;AAEA,MAAMY,8BAA8B,GAAG,CAAvC;;AAEA,MAAMJ,uBAAN,CAA8B;AAC5BK,EAAAA,WAAW,CAACC,IAAD,EAAO;AAChB,KAAC,GAAGL,gBAAgB,CAACM,OAArB,EAA8B,IAA9B,EAAoC,SAApC,EAA+C,KAAK,CAApD;AACA,KAAC,GAAGN,gBAAgB,CAACM,OAArB,EAA8B,IAA9B,EAAoC,MAApC,EAA4C,KAAK,CAAjD;AACA,UAAMC,KAAK,GAAGX,SAAS,CAACS,IAAD,CAAvB;AACA,UAAMG,UAAU,GAAGD,KAAK,CAACE,GAAN,CAAUZ,iBAAV,CAAnB;AACA,SAAKa,OAAL,GAAeP,8BAAf;AACA,SAAKE,IAAL,GAAYG,UAAZ;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACP,UAAMC,IAAI,GAAG,IAAI,KAAK,KAAKP,IAAL,CAAUQ,MAAhC;AACA,UAAMC,GAAG,GAAG,IAAIC,UAAJ,CAAeH,IAAf,CAAZ;AACAE,IAAAA,GAAG,CAACE,GAAJ,CAAQ,CAAC,KAAKN,OAAN,CAAR;AACA,QAAIO,MAAM,GAAG,CAAb;;AAEA,SAAK,MAAMC,SAAX,IAAwB,KAAKb,IAA7B,EAAmC;AACjCS,MAAAA,GAAG,CAACE,GAAJ,CAAQE,SAAR,EAAmBD,MAAnB;AACAA,MAAAA,MAAM,IAAI,EAAV;AACD;;AAED,WAAOH,GAAP;AACD;;AAEDK,EAAAA,OAAO,GAAG;AACR,UAAMC,QAAQ,GAAG,KAAKT,MAAL,EAAjB;AACA,WAAO,CAAC,GAAGV,OAAO,CAACoB,OAAZ,EAAqBD,QAArB,CAAP;AACD;;AA3B2B;;AA+B9B1B,OAAO,CAACK,uBAAR,GAAkCA,uBAAlC;;AAEA,SAASH,SAAT,CAAmBS,IAAnB,EAAyB;AACvB,SAAOA,IAAI,CAACiB,KAAL,CAAW,GAAX,CAAP;AACD;;AAED,SAASzB,iBAAT,CAA2B0B,SAA3B,EAAsC;AACpC,SAAO,CAAC,GAAGtB,OAAO,CAACoB,OAAZ,EAAqB,CAAC,GAAGnB,OAAO,CAACsB,sBAAZ,EAAoCD,SAApC,CAArB,CAAP;AACD;;AAED,SAASzB,uBAAT,CAAiCO,IAAjC,EAAuC;AACrC,QAAMoB,GAAG,GAAG,IAAI1B,uBAAJ,CAA4BM,IAA5B,CAAZ;AACA,QAAMqB,KAAK,GAAGD,GAAG,CAACN,OAAJ,EAAd;AACA,SAAO,CAAC,GAAGjB,OAAO,CAACyB,WAAZ,EAAyBD,KAAzB,CAAP;AACD","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.splitPath = splitPath;\nexports.hashPathComponent = hashPathComponent;\nexports.deriveDiscoverableTweak = deriveDiscoverableTweak;\nexports.DiscoverableBucketTweak = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _crypto = require(\"../crypto\");\n\nvar _string = require(\"../utils/string\");\n\nconst discoverableBucketTweakVersion = 1;\n\nclass DiscoverableBucketTweak {\n  constructor(path) {\n    (0, _defineProperty2.default)(this, \"version\", void 0);\n    (0, _defineProperty2.default)(this, \"path\", void 0);\n    const paths = splitPath(path);\n    const pathHashes = paths.map(hashPathComponent);\n    this.version = discoverableBucketTweakVersion;\n    this.path = pathHashes;\n  }\n\n  encode() {\n    const size = 1 + 32 * this.path.length;\n    const buf = new Uint8Array(size);\n    buf.set([this.version]);\n    let offset = 1;\n\n    for (const pathLevel of this.path) {\n      buf.set(pathLevel, offset);\n      offset += 32;\n    }\n\n    return buf;\n  }\n\n  getHash() {\n    const encoding = this.encode();\n    return (0, _crypto.hashAll)(encoding);\n  }\n\n}\n\nexports.DiscoverableBucketTweak = DiscoverableBucketTweak;\n\nfunction splitPath(path) {\n  return path.split(\"/\");\n}\n\nfunction hashPathComponent(component) {\n  return (0, _crypto.hashAll)((0, _string.stringToUint8ArrayUtf8)(component));\n}\n\nfunction deriveDiscoverableTweak(path) {\n  const dbt = new DiscoverableBucketTweak(path);\n  const bytes = dbt.getHash();\n  return (0, _string.toHexString)(bytes);\n}"]},"metadata":{},"sourceType":"script"}