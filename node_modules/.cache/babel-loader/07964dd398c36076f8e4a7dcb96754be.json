{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usama_Sadiq\\\\Documents\\\\React App\\\\2\\\\skapp-private\\\\src\\\\components\\\\AppDetails\\\\AppDetailsPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport AppDetailsHeader from \"./AppDetailsHeader\";\nimport AppInfo from \"./AppInfo\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getMyPublishedAppsAction } from \"../../redux/action-reducers-epic/SnPublishAppAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AppDetailsPage = () => {\n  _s();\n\n  const {\n    appId\n  } = useParams();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getMyPublishedAppsAction());\n  }, []);\n  const {\n    publishedAppsStore\n  } = useSelector(state => state.snPublishedAppsStore);\n  const [data, setData] = useState();\n  useEffect(() => {\n    if (publishedAppsStore) {\n      let appJSON = publishedAppsStore.find(appData => appData.id === appId);\n\n      if (appJSON) {\n        setData(appJSON);\n      }\n    }\n  }, [publishedAppsStore, appId]); // if id or publishedAppsStore is changing run this method.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AppDetailsHeader, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppInfo, {\n      data: data,\n      appId: appId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AppDetailsPage, \"3Zqtcb10FbJbkx3LvEkPbuMFj3E=\", false, function () {\n  return [useParams, useDispatch, useSelector];\n});\n\n_c = AppDetailsPage;\nexport default AppDetailsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppDetailsPage\");","map":{"version":3,"sources":["C:/Users/Usama_Sadiq/Documents/React App/2/skapp-private/src/components/AppDetails/AppDetailsPage.js"],"names":["React","useEffect","useState","AppDetailsHeader","AppInfo","useParams","useSelector","useDispatch","getMyPublishedAppsAction","AppDetailsPage","appId","dispatch","publishedAppsStore","state","snPublishedAppsStore","data","setData","appJSON","find","appData","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,wBAAT,QAAyC,qDAAzC;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM;AAAEC,IAAAA;AAAF,MAAYL,SAAS,EAA3B;AAEA,QAAMM,QAAQ,GAAGJ,WAAW,EAA5B;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,QAAQ,CAACH,wBAAwB,EAAzB,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAM;AAAEI,IAAAA;AAAF,MAAyBN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,oBAAlB,CAA1C;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,EAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,kBAAJ,EAAwB;AACtB,UAAIK,OAAO,GAAGL,kBAAkB,CAACM,IAAnB,CAAwBC,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeV,KAAlD,CAAd;;AACA,UAAGO,OAAH,EACA;AACED,QAAAA,OAAO,CAACC,OAAD,CAAP;AACD;AACF;AACF,GARQ,EAQN,CAACL,kBAAD,EAAqBF,KAArB,CARM,CAAT,CAZ2B,CAoBM;;AAEjC,sBACE;AAAA,4BACE,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAEK;AAAxB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AAAS,MAAA,IAAI,EAAEA,IAAf;AAAqB,MAAA,KAAK,EAAEL;AAA5B;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA5BD;;GAAMD,c;UACcJ,S,EAEDE,W,EAMcD,W;;;KAT3BG,c;AA8BN,eAAeA,cAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport AppDetailsHeader from \"./AppDetailsHeader\";\r\nimport AppInfo from \"./AppInfo\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getMyPublishedAppsAction } from \"../../redux/action-reducers-epic/SnPublishAppAction\";\r\n\r\nconst AppDetailsPage = () => {\r\n  const { appId } = useParams();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getMyPublishedAppsAction()); \r\n  }, []);\r\n\r\n  const { publishedAppsStore } = useSelector((state) => state.snPublishedAppsStore);\r\n  const [data, setData] = useState();\r\n\r\n  useEffect(() => {\r\n    if (publishedAppsStore) {\r\n      let appJSON = publishedAppsStore.find(appData => appData.id === appId);\r\n      if(appJSON)\r\n      {\r\n        setData(appJSON);\r\n      }\r\n    }\r\n  }, [publishedAppsStore, appId]); // if id or publishedAppsStore is changing run this method.\r\n\r\n  return (\r\n    <div>\r\n      <AppDetailsHeader data={data} />\r\n      <AppInfo data={data} appId={appId}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppDetailsPage;\r\n"]},"metadata":{},"sourceType":"module"}