[{"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\index.js":"1","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\App.js":"2","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\index.js":"3","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\theme\\Theme.js":"4","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\router\\SnRouter.js":"5","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\Navbar\\Nav.js":"6","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\Utils\\SnLoader.js":"7","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\Navbar\\Navbar.js":"8","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\Sidebar\\Sidebar.js":"9","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnUploadListReducer.js":"10","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnLoaderReducer.js":"11","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnSelectedHostedAppReducer.js":"12","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnAllPublishAppReducer.js":"13","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnPublishAppReducer.js":"14","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnInstalledAppReducer.js":"15","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnAppStatsReducer.js":"16","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnAppStatsEpic.js":"17","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnAppCommentsReducer.js":"18","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnAllPublishAppEpic.js":"19","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnShowHostingLinksReducer.js":"20","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnUserSessionReducer.js":"21","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnPublishAppEpic.js":"22","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnInstalledAppEpic.js":"23","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnAppCommentsEpic.js":"24","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnLoaderAction.js":"25","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\Navbar\\LandingPageNavbar.js":"26","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnUserSessionAction.js":"27","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\AppsComp\\Apps.js":"28","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\AppsComp\\InstalledApps.js":"29","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\AppsComp\\AppStore.js":"30","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\ErrorPage\\Error.js":"31","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\Hosting\\Hosting.js":"32","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\Hosting\\SubmitNewSite.js":"33","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\NoApps\\NoApps.js":"34","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\SubmitApp\\EditPublishApp.js":"35","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\Hosting\\EditSite.js":"36","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\Hosting\\StorageGateway.js":"37","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\Hosting\\DeploySite.js":"38","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\Domain\\Domains.js":"39","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\Domain\\NoDomain.js":"40","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\AppDetails\\AppDetailsPage.js":"41","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\SubmitApp\\SubmitApp.js":"42","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\Setting\\Settings.js":"43","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\Hosting\\AddNewSite.js":"44","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\Auth\\Login.js":"45","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\DescoverDev\\DescoverDev.js":"46","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\utils\\SnConstants.js":"47","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\service\\SnIndexedDB.js":"48","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\hooks\\useWindowDimensions.js":"49","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\assets\\jss\\sidebar\\SidebarStyle.js":"50","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\SnActionConstants.js":"51","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\Setting\\Profile.js":"52","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnMyFollowingAction.js":"53","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnMyFollowerAction.js":"54","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\DescoverDev\\DevTable.js":"55","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\DescoverDev\\UserCard.js":"56","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\service\\skynet-api.js":"57","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\Utils\\SnDisclaimer.js":"58","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\service\\SnSkappService.js":"59","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnUploadListAction.js":"60","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\service\\SnFormikUtilService.js":"61","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\utils\\SnUtility.js":"62","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\utils\\SnNewObject.js":"63","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\Utils\\SnFormikControlls.js":"64","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\Hosting\\AddNewSiteStyles.js":"65","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\Hosting\\Switch.js":"66","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\uploadUtil\\SnUpload.js":"67","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\Modals\\SnInfoModal.js":"68","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\AppsComp\\Spiner.js":"69","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\service\\SnSkyMQEventEmitter.js":"70","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\service\\SnSkynet.js":"71","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\service\\SnEncryption.js":"72","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\uploadUtil\\UploadFile.js":"73","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\uploadUtil\\LoadingSpinner.js":"74","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\svg\\index.js":"75","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\svg\\Deco7.js":"76","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\svg\\Deco8.js":"77","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\svg\\Deco6.js":"78","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\svg\\Deco3.js":"79","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\svg\\Deco4.js":"80","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\svg\\Deco5.js":"81","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\svg\\Deco2.js":"82","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\svg\\Deco1.js":"83","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\svg\\Folder.js":"84","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\svg\\DownArrow.js":"85","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\svg\\Built.js":"86","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\svg\\FooterCube.js":"87","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\svg\\FooterOrb.js":"88","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\svg\\Copy.js":"89","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\svg\\FileError.js":"90","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\svg\\Loading.js":"91","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\svg\\FileCheck.js":"92","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\svg\\Skynet.js":"93","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\svg\\File.js":"94","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\svg\\LogoSolid.js":"95","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\svg\\Pyramid.js":"96","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\svg\\Cylinder.js":"97","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\svg\\SmallOrb.js":"98","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\svg\\Arrow.js":"99","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\svg\\Discord.js":"100","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\svg\\DoubleRight.js":"101","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\svg\\Download.js":"102","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\svg\\Github.js":"103","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\svg\\Logo.js":"104","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\svg\\Twitter.js":"105","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\hooks\\useLoadHostedAppFromUrl.js":"106","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnPublishAppAction.js":"107","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\AppDetails\\AppInfo.js":"108","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\hooks\\useShowHostingLinks.js":"109","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\AppDetails\\AppDetailsHeader.js":"110","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\Domain\\AddNewDomain.js":"111","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\Domain\\AddNewDomainTXT.js":"112","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\AppsComp\\SubmitBtn.js":"113","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\AppsComp\\UtilitiesItem.js":"114","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\Domain\\DomainTable.js":"115","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\Hosting\\StorageTable.js":"116","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\AppsComp\\ListFilter.js":"117","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\assets\\jss\\no-apps\\NoAppsStyle.js":"118","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\assets\\jss\\app-details\\SubmitAppStyles.js":"119","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\Hosting\\AddNewSiteBtn.js":"120","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\Hosting\\HostingItem.js":"121","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnAllPublishAppAction.js":"122","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnInstalledAppAction.js":"123","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\AppsComp\\SelectItem.js":"124","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\AppsComp\\AppCard.js":"125","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\AppsComp\\AppsList.js":"126","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\assets\\jss\\apps\\AppListStyle.js":"127","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\slickarrows\\SlickNextArrow.js":"128","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\slickarrows\\SlickPrevArrow.js":"129","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\Footer\\Footer.js":"130","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\assets\\jss\\error-page\\ErrorPageStyle.js":"131","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\AppsComp\\SelectedAppsHeader.js":"132","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\AppsComp\\CustomPagination.js":"133","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnShowHostingLinksAction.js":"134","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\AppDetails\\AppComments.js":"135","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnAppStatsAction.js":"136","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnSelectedHostedAppAction.js":"137","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\assets\\jss\\hosting\\AddNewSiteBtnStyle.js":"138","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\assets\\jss\\apps\\AppCardStyle.js":"139","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\assets\\jss\\hosting\\HostingItemStyle.js":"140","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\ShareApp\\ShareApp.js":"141","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\AppDetails\\CommentForm.js":"142","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\AppDetails\\AppComment.js":"143","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnAppCommentsAction.js":"144","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnUserProfileReducer.js":"145","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnUserPreferencesReducer.js":"146","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnUserProfileEpic.js":"147","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnUserPreferencesEpic.js":"148","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnUserPreferencesAction.js":"149","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnAggregatedAppStatsAction.js":"150","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\Setting\\globalPrefrences.js":"151","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnUserProfileAction.js":"152","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\service\\dac\\userprofile-api.js":"153"},{"size":311,"mtime":1619813863000,"results":"154","hashOfConfig":"155"},{"size":1478,"mtime":1620115959718,"results":"156","hashOfConfig":"155"},{"size":3347,"mtime":1619939310743,"results":"157","hashOfConfig":"155"},{"size":345,"mtime":1620084332938,"results":"158","hashOfConfig":"155"},{"size":3524,"mtime":1620116169413,"results":"159","hashOfConfig":"155"},{"size":733,"mtime":1620124268767,"results":"160","hashOfConfig":"155"},{"size":603,"mtime":1619362890000,"results":"161","hashOfConfig":"155"},{"size":20600,"mtime":1620116103717,"results":"162","hashOfConfig":"155"},{"size":15378,"mtime":1620126038054,"results":"163","hashOfConfig":"155"},{"size":270,"mtime":1619362890000,"results":"164","hashOfConfig":"155"},{"size":239,"mtime":1619362890000,"results":"165","hashOfConfig":"155"},{"size":449,"mtime":1619362890000,"results":"166","hashOfConfig":"155"},{"size":328,"mtime":1619362890000,"results":"167","hashOfConfig":"155"},{"size":323,"mtime":1619362890000,"results":"168","hashOfConfig":"155"},{"size":504,"mtime":1619362890000,"results":"169","hashOfConfig":"155"},{"size":223,"mtime":1619362890000,"results":"170","hashOfConfig":"155"},{"size":1571,"mtime":1619362890000,"results":"171","hashOfConfig":"155"},{"size":337,"mtime":1619362890000,"results":"172","hashOfConfig":"155"},{"size":1212,"mtime":1619362890000,"results":"173","hashOfConfig":"155"},{"size":264,"mtime":1619362890000,"results":"174","hashOfConfig":"155"},{"size":300,"mtime":1619939310738,"results":"175","hashOfConfig":"155"},{"size":2026,"mtime":1619362890000,"results":"176","hashOfConfig":"155"},{"size":2809,"mtime":1619362890000,"results":"177","hashOfConfig":"155"},{"size":1813,"mtime":1619362890000,"results":"178","hashOfConfig":"155"},{"size":188,"mtime":1619362890000,"results":"179","hashOfConfig":"155"},{"size":12953,"mtime":1620025608801,"results":"180","hashOfConfig":"155"},{"size":263,"mtime":1619939310736,"results":"181","hashOfConfig":"155"},{"size":8577,"mtime":1619362890000,"results":"182","hashOfConfig":"155"},{"size":9591,"mtime":1619362890000,"results":"183","hashOfConfig":"155"},{"size":19998,"mtime":1620134307409,"results":"184","hashOfConfig":"155"},{"size":832,"mtime":1619362890000,"results":"185","hashOfConfig":"155"},{"size":13310,"mtime":1619623164473,"results":"186","hashOfConfig":"155"},{"size":6180,"mtime":1619362890000,"results":"187","hashOfConfig":"155"},{"size":1880,"mtime":1619939309198,"results":"188","hashOfConfig":"155"},{"size":40035,"mtime":1619939309882,"results":"189","hashOfConfig":"155"},{"size":28145,"mtime":1619939309189,"results":"190","hashOfConfig":"155"},{"size":6725,"mtime":1620039383627,"results":"191","hashOfConfig":"155"},{"size":14853,"mtime":1619679782612,"results":"192","hashOfConfig":"155"},{"size":6918,"mtime":1620039436355,"results":"193","hashOfConfig":"155"},{"size":1130,"mtime":1619362890000,"results":"194","hashOfConfig":"155"},{"size":1077,"mtime":1619362890000,"results":"195","hashOfConfig":"155"},{"size":41096,"mtime":1620070501948,"results":"196","hashOfConfig":"155"},{"size":4224,"mtime":1620038304456,"results":"197","hashOfConfig":"155"},{"size":25285,"mtime":1619939309185,"results":"198","hashOfConfig":"155"},{"size":5837,"mtime":1619939309181,"results":"199","hashOfConfig":"155"},{"size":5083,"mtime":1619953062922,"results":"200","hashOfConfig":"155"},{"size":8234,"mtime":1619939311174,"results":"201","hashOfConfig":"155"},{"size":6801,"mtime":1619362890000,"results":"202","hashOfConfig":"155"},{"size":924,"mtime":1619362890000,"results":"203","hashOfConfig":"155"},{"size":1951,"mtime":1620125973985,"results":"204","hashOfConfig":"155"},{"size":5753,"mtime":1619939310719,"results":"205","hashOfConfig":"155"},{"size":22033,"mtime":1620037625435,"results":"206","hashOfConfig":"155"},{"size":438,"mtime":1619362890000,"results":"207","hashOfConfig":"155"},{"size":429,"mtime":1619362890000,"results":"208","hashOfConfig":"155"},{"size":10728,"mtime":1619674284936,"results":"209","hashOfConfig":"155"},{"size":6649,"mtime":1619952587246,"results":"210","hashOfConfig":"155"},{"size":7967,"mtime":1619939311172,"results":"211","hashOfConfig":"155"},{"size":943,"mtime":1619362890000,"results":"212","hashOfConfig":"155"},{"size":35469,"mtime":1619939310905,"results":"213","hashOfConfig":"155"},{"size":188,"mtime":1619362890000,"results":"214","hashOfConfig":"155"},{"size":402,"mtime":1619362890000,"results":"215","hashOfConfig":"155"},{"size":6106,"mtime":1619939311176,"results":"216","hashOfConfig":"155"},{"size":7680,"mtime":1619362890000,"results":"217","hashOfConfig":"155"},{"size":8818,"mtime":1620038179116,"results":"218","hashOfConfig":"155"},{"size":14687,"mtime":1619688271251,"results":"219","hashOfConfig":"155"},{"size":2164,"mtime":1619362890000,"results":"220","hashOfConfig":"155"},{"size":10733,"mtime":1619362890000,"results":"221","hashOfConfig":"155"},{"size":3415,"mtime":1619362890000,"results":"222","hashOfConfig":"155"},{"size":330,"mtime":1619362890000,"results":"223","hashOfConfig":"155"},{"size":5178,"mtime":1619939310907,"results":"224","hashOfConfig":"155"},{"size":15979,"mtime":1619939310909,"results":"225","hashOfConfig":"155"},{"size":11387,"mtime":1619362890000,"results":"226","hashOfConfig":"155"},{"size":2636,"mtime":1619362890000,"results":"227","hashOfConfig":"155"},{"size":223,"mtime":1619362890000,"results":"228","hashOfConfig":"155"},{"size":1298,"mtime":1619362890000,"results":"229","hashOfConfig":"155"},{"size":575,"mtime":1619362890000,"results":"230","hashOfConfig":"155"},{"size":877,"mtime":1619362890000,"results":"231","hashOfConfig":"155"},{"size":699,"mtime":1619362890000,"results":"232","hashOfConfig":"155"},{"size":823,"mtime":1619362890000,"results":"233","hashOfConfig":"155"},{"size":874,"mtime":1619362890000,"results":"234","hashOfConfig":"155"},{"size":2011,"mtime":1619362890000,"results":"235","hashOfConfig":"155"},{"size":788,"mtime":1619362890000,"results":"236","hashOfConfig":"155"},{"size":892,"mtime":1619362890000,"results":"237","hashOfConfig":"155"},{"size":411,"mtime":1619362890000,"results":"238","hashOfConfig":"155"},{"size":379,"mtime":1619362890000,"results":"239","hashOfConfig":"155"},{"size":9454,"mtime":1619362890000,"results":"240","hashOfConfig":"155"},{"size":621,"mtime":1619362890000,"results":"241","hashOfConfig":"155"},{"size":703,"mtime":1619362890000,"results":"242","hashOfConfig":"155"},{"size":411,"mtime":1619362890000,"results":"243","hashOfConfig":"155"},{"size":482,"mtime":1619362890000,"results":"244","hashOfConfig":"155"},{"size":379,"mtime":1619362890000,"results":"245","hashOfConfig":"155"},{"size":482,"mtime":1619362890000,"results":"246","hashOfConfig":"155"},{"size":2438,"mtime":1619362890000,"results":"247","hashOfConfig":"155"},{"size":460,"mtime":1619362890000,"results":"248","hashOfConfig":"155"},{"size":588,"mtime":1619362890000,"results":"249","hashOfConfig":"155"},{"size":605,"mtime":1619362890000,"results":"250","hashOfConfig":"155"},{"size":637,"mtime":1619362890000,"results":"251","hashOfConfig":"155"},{"size":584,"mtime":1619362890000,"results":"252","hashOfConfig":"155"},{"size":403,"mtime":1619362890000,"results":"253","hashOfConfig":"155"},{"size":1647,"mtime":1619362890000,"results":"254","hashOfConfig":"155"},{"size":507,"mtime":1619362890000,"results":"255","hashOfConfig":"155"},{"size":843,"mtime":1619362890000,"results":"256","hashOfConfig":"155"},{"size":1153,"mtime":1619362890000,"results":"257","hashOfConfig":"155"},{"size":645,"mtime":1619362890000,"results":"258","hashOfConfig":"155"},{"size":1011,"mtime":1619362890000,"results":"259","hashOfConfig":"155"},{"size":837,"mtime":1619362890000,"results":"260","hashOfConfig":"155"},{"size":496,"mtime":1619362890000,"results":"261","hashOfConfig":"155"},{"size":8785,"mtime":1619362890000,"results":"262","hashOfConfig":"155"},{"size":430,"mtime":1619362890000,"results":"263","hashOfConfig":"155"},{"size":10431,"mtime":1619939309159,"results":"264","hashOfConfig":"155"},{"size":4754,"mtime":1619681639648,"results":"265","hashOfConfig":"155"},{"size":7958,"mtime":1619693051735,"results":"266","hashOfConfig":"155"},{"size":1419,"mtime":1619362890000,"results":"267","hashOfConfig":"155"},{"size":3951,"mtime":1620040184243,"results":"268","hashOfConfig":"155"},{"size":7457,"mtime":1619692997526,"results":"269","hashOfConfig":"155"},{"size":7363,"mtime":1619681015128,"results":"270","hashOfConfig":"155"},{"size":6894,"mtime":1620130922859,"results":"271","hashOfConfig":"155"},{"size":1592,"mtime":1619622019377,"results":"272","hashOfConfig":"155"},{"size":17984,"mtime":1620072153952,"results":"273","hashOfConfig":"155"},{"size":406,"mtime":1619362890000,"results":"274","hashOfConfig":"155"},{"size":4452,"mtime":1619362890000,"results":"275","hashOfConfig":"155"},{"size":410,"mtime":1619362890000,"results":"276","hashOfConfig":"155"},{"size":751,"mtime":1619362890000,"results":"277","hashOfConfig":"155"},{"size":1657,"mtime":1619362890000,"results":"278","hashOfConfig":"155"},{"size":22601,"mtime":1620128258320,"results":"279","hashOfConfig":"155"},{"size":2418,"mtime":1620116458619,"results":"280","hashOfConfig":"155"},{"size":195,"mtime":1619362890000,"results":"281","hashOfConfig":"155"},{"size":352,"mtime":1619362890000,"results":"282","hashOfConfig":"155"},{"size":345,"mtime":1619362890000,"results":"283","hashOfConfig":"155"},{"size":3238,"mtime":1620134495112,"results":"284","hashOfConfig":"155"},{"size":1105,"mtime":1619621519965,"results":"285","hashOfConfig":"155"},{"size":3471,"mtime":1619362890000,"results":"286","hashOfConfig":"155"},{"size":2478,"mtime":1619362890000,"results":"287","hashOfConfig":"155"},{"size":216,"mtime":1619362890000,"results":"288","hashOfConfig":"155"},{"size":408,"mtime":1619362890000,"results":"289","hashOfConfig":"155"},{"size":450,"mtime":1619362890000,"results":"290","hashOfConfig":"155"},{"size":373,"mtime":1619362890000,"results":"291","hashOfConfig":"155"},{"size":476,"mtime":1619623010587,"results":"292","hashOfConfig":"155"},{"size":6324,"mtime":1620128095415,"results":"293","hashOfConfig":"155"},{"size":2933,"mtime":1619362890000,"results":"294","hashOfConfig":"155"},{"size":5151,"mtime":1619622678956,"results":"295","hashOfConfig":"155"},{"size":2612,"mtime":1619362890000,"results":"296","hashOfConfig":"155"},{"size":3850,"mtime":1619362890000,"results":"297","hashOfConfig":"155"},{"size":485,"mtime":1619362890000,"results":"298","hashOfConfig":"155"},{"size":500,"mtime":1619362890000,"results":"299","hashOfConfig":"155"},{"size":525,"mtime":1619939310728,"results":"300","hashOfConfig":"155"},{"size":873,"mtime":1619939310733,"results":"301","hashOfConfig":"155"},{"size":598,"mtime":1619939310726,"results":"302","hashOfConfig":"155"},{"size":1191,"mtime":1619939310724,"results":"303","hashOfConfig":"155"},{"size":563,"mtime":1619939310722,"results":"304","hashOfConfig":"155"},{"size":10572,"mtime":1620038618596,"results":"305","hashOfConfig":"155"},{"size":1261,"mtime":1619939310731,"results":"306","hashOfConfig":"155"},{"size":1852,"mtime":1619939311168,"results":"307","hashOfConfig":"155"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},"1ln4gpi",{"filePath":"311","messages":"312","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"310"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"310"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"310"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"310"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"310"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"310"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"310"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"310"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"310"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"310"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"310"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"354","usedDeprecatedRules":"310"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"310"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"360","usedDeprecatedRules":"310"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"310"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"310"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"369","usedDeprecatedRules":"310"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":3,"source":"372","usedDeprecatedRules":"310"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"375","usedDeprecatedRules":"310"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"310"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383","usedDeprecatedRules":"310"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386","usedDeprecatedRules":"310"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"310"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"310"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"310"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"310"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407","usedDeprecatedRules":"310"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"412","usedDeprecatedRules":"310"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"419","usedDeprecatedRules":"310"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"422","usedDeprecatedRules":"310"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"425","usedDeprecatedRules":"310"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"428","usedDeprecatedRules":"310"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"431","usedDeprecatedRules":"310"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"446","usedDeprecatedRules":"310"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"457","usedDeprecatedRules":"310"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"462","usedDeprecatedRules":"310"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"469","usedDeprecatedRules":"310"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"474","usedDeprecatedRules":"310"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"481","usedDeprecatedRules":"310"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"488","usedDeprecatedRules":"310"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"491","usedDeprecatedRules":"310"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"494","usedDeprecatedRules":"310"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"523","messages":"524","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"541","messages":"542","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"547","messages":"548","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"549","messages":"550","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"551","messages":"552","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"553","messages":"554","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"555","messages":"556","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"557","messages":"558","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"559","messages":"560","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"563","usedDeprecatedRules":"310"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"566","usedDeprecatedRules":"310"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"569","usedDeprecatedRules":"310"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"572","usedDeprecatedRules":"310"},{"filePath":"573","messages":"574","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"575","usedDeprecatedRules":"310"},{"filePath":"576","messages":"577","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"578","messages":"579","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"580","messages":"581","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"582","messages":"583","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"586","messages":"587","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"588","messages":"589","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"590","messages":"591","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"592","messages":"593","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"594","usedDeprecatedRules":"310"},{"filePath":"595","messages":"596","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"597","messages":"598","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"599","usedDeprecatedRules":"310"},{"filePath":"600","messages":"601","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"602","messages":"603","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"604","messages":"605","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"606","messages":"607","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"608","messages":"609","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"610","usedDeprecatedRules":"310"},{"filePath":"611","messages":"612","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"613","messages":"614","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"615","messages":"616","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"617","messages":"618","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"619","messages":"620","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"621","messages":"622","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"623","messages":"624","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"625","messages":"626","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"627","messages":"628","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"629","messages":"630","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"631","messages":"632","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"633","messages":"634","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"635","messages":"636","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"637","messages":"638","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"639","messages":"640","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"641","messages":"642","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"643","messages":"644","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"645","usedDeprecatedRules":"310"},{"filePath":"646","messages":"647","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"648","messages":"649","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"650","usedDeprecatedRules":"310"},{"filePath":"651","messages":"652","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"653","usedDeprecatedRules":"310"},{"filePath":"654","messages":"655","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"656","messages":"657","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"658","messages":"659","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"660","usedDeprecatedRules":"310"},{"filePath":"661","messages":"662","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"663","messages":"664","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"665","usedDeprecatedRules":"310"},{"filePath":"666","messages":"667","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"668","usedDeprecatedRules":"310"},{"filePath":"669","messages":"670","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\index.js",[],["671","672"],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\App.js",["673"],"import React, {useEffect, useState } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { ThemeProvider } from '@material-ui/core'\r\nimport Sidebar from './components/Sidebar/Sidebar'\r\nimport SnLoader from \"./components/Utils/SnLoader\"\r\nimport './index.css'\r\nimport { skappTheme } from './theme/Theme'\r\nimport SnRouter from './router/SnRouter'\r\nimport {\r\n  BrowserRouter as Router\r\n} from \"react-router-dom\";\r\nimport Nav from './components/Navbar/Nav'\r\nimport { initMySky } from \"./service/skynet-api\"\r\nimport { setUserSession } from \"./redux/action-reducers-epic/SnUserSessionAction\"\r\n\r\nfunction App() {\r\n  const [toggle, setToggle] = useState(false);\r\n\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    initMySky().then(({ loggedIn, userSession }) => {\r\n      if (loggedIn)// only if login is true set session\r\n        dispatch(setUserSession(userSession))\r\n      } \r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <Router>\r\n      <ThemeProvider theme={skappTheme}>\r\n        <SnLoader />\r\n        <div className=\"App\">\r\n          <Nav toggle={toggle} setToggle={setToggle} />\r\n          <section className=\"main-content\">\r\n            <aside className=\"app-sidebar\">\r\n              <Sidebar toggle={toggle} />\r\n            </aside>\r\n            <main className=\"app-content\" id=\"app-content\">\r\n              <SnRouter toggle={toggle} />\r\n            </main>\r\n          </section>\r\n        </div>\r\n      </ThemeProvider>\r\n    </Router>\r\n  )\r\n}\r\nexport default App\r\n","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\index.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\theme\\Theme.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\router\\SnRouter.js",["674","675","676"],"import Apps from '../components/AppsComp/Apps'\r\nimport SubmitApp from '../components/SubmitApp/SubmitApp'\r\nimport EditPublishApp from '../components/SubmitApp/EditPublishApp'\r\nimport Error from '../components/ErrorPage/Error'\r\nimport NoApps from '../components/NoApps/NoApps'\r\nimport InstalledApps from '../components/AppsComp/InstalledApps'\r\nimport Hosting from '../components/Hosting/Hosting'\r\nimport SubmitNewSite from '../components/Hosting/SubmitNewSite'\r\nimport NoDomain from '../components/Domain/NoDomain'\r\nimport Domains from '../components/Domain/Domains'\r\nimport StorageGateway from '../components/Hosting/StorageGateway'\r\nimport Settings from '../components/Setting/Settings'\r\nimport AppDetailsPage from '../components/AppDetails/AppDetailsPage'\r\nimport DeploySite from '../components/Hosting/DeploySite'\r\nimport DescoverDev from '../components/DescoverDev/DescoverDev'\r\nimport AppStore from '../components/AppsComp/AppStore'\r\nimport Login from '../components/Auth/Login'\r\nimport EditSite from '../components/Hosting/EditSite'\r\nimport {\r\n    Switch,\r\n    Route,\r\n    Redirect,\r\n} from \"react-router-dom\";\r\nimport { APPSTORE_PROVIDER_MASTER_PUBKEY } from \"../utils/SnConstants\";\r\nimport AddNewSite from '../components/Hosting/AddNewSite'\r\nconst SnRouter = ({toggle}) => (\r\n   \r\n        <Switch>\r\n            <Route exact path='/'>\r\n                  <AppStore toggle={toggle} />\r\n            </Route>\r\n            <Route exact path='/descoverdev'>\r\n                  <DescoverDev />\r\n            </Route>\r\n            {/* <Route exact path=\"/\">\r\n                <Redirect to={`/login`}/>\r\n                 <Redirect to={`/public-skapps/?provider=${APPSTORE_PROVIDER_MASTER_PUBKEY}`}/> */}\r\n            {/* </Route> */}\r\n            <Route exact path='/login'>\r\n                  <Login />\r\n            </Route>\r\n            <Route exact path='/appdetail/:appId'>\r\n                <AppDetailsPage />\r\n            </Route>\r\n            <Route path='/submitapp/:appId?'>\r\n                <SubmitApp />\r\n            </Route>\r\n            <Route path='/editpublishapp/:appId'>\r\n                <EditPublishApp />\r\n            </Route>\r\n            <Route exact path='/error'>\r\n                <Error />\r\n            </Route>\r\n            <Route exact path='/noapp'>\r\n                <NoApps />\r\n            </Route>\r\n            <Route exact path='/installedapps'>\r\n                <InstalledApps />\r\n            </Route>\r\n            <Route exact path='/hosting'>\r\n                <Hosting />\r\n            </Route>\r\n            <Route exact path='/submitsite'>\r\n                <AddNewSite />\r\n            </Route>\r\n            <Route exact path='/editsite/:appId'>\r\n                <EditSite />\r\n            </Route>\r\n            <Route exact path='/domains'>\r\n                <Domains />\r\n            </Route>\r\n            {/* <Route exact path='/addnewdomain'>\r\n  <AddNewDomain />\r\n</Route>\r\n<Route exact path='/adddomaintxt'>\r\n  <AddNewDomainTXT />\r\n</Route> */}\r\n            <Route exact path='/nodomain'>\r\n                <NoDomain />\r\n            </Route>\r\n            <Route exact path='/storagegateway'>\r\n                <StorageGateway />\r\n            </Route>\r\n            <Route exact path='/usersettings'>\r\n                <Settings />\r\n            </Route>\r\n            <Route exact path='/deploysite/:appId?'>\r\n                <DeploySite />\r\n            </Route>\r\n            <Route exact path='/apps'>\r\n                <Apps />\r\n            </Route>\r\n        </Switch>\r\n  \r\n)\r\nexport default SnRouter","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\Navbar\\Nav.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\Utils\\SnLoader.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\Navbar\\Navbar.js",["677","678","679","680","681","682"],"import React, { useState, useEffect, Fragment } from 'react'\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { fade, makeStyles } from '@material-ui/core/styles'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport InputBase from '@material-ui/core/InputBase'\r\nimport Badge from '@material-ui/core/Badge'\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport Menu from '@material-ui/core/Menu'\r\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline'\r\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown'\r\n// import MenuIcon from '@material-ui/icons/Menu'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\n// import Icon from '@material-ui/core/Icon'\r\n// import grey from '@material-ui/core/colors/grey'\r\n// import MailIcon from '@material-ui/icons/Mail'\r\n// import NotificationsIcon from '@material-ui/icons/Notifications'\r\nimport MoreIcon from '@material-ui/icons/MoreVert'\r\n// logo\r\nimport { ReactComponent as Logo } from '../../assets/img/icons/logo.svg'\r\nimport { ReactComponent as Logo1 } from '../../assets/img/icons/logo1.svg'\r\n\r\n// icons custom\r\nimport { ReactComponent as QuestionIcon } from '../../assets/img/icons/question.svg'\r\nimport { ReactComponent as SettingIcon } from '../../assets/img/icons/setting.svg'\r\nimport { ReactComponent as EditProfileIcon } from '../../assets/img/icons/edit-profile.svg'\r\nimport { ReactComponent as LogoutIcon } from '../../assets/img/icons/exit-log-out.2.svg'\r\nimport { ReactComponent as NotificationIcon } from '../../assets/img/icons/notification.svg'\r\nimport { ReactComponent as CustomMenuIcon } from '../../assets/img/icons/Icon ionic-ios-menu.svg'\r\nimport { Box, Button, Tooltip, Typography } from '@material-ui/core'\r\nimport Sidebar from '../Sidebar/Sidebar'\r\n// import { Translate } from '@material-ui/icons'\r\nimport useWindowDimensions from '../../hooks/useWindowDimensions'\r\nimport { setLoaderDisplay } from '../../redux/action-reducers-epic/SnLoaderAction'\r\nimport { clearAllfromIDB, IDB_STORE_SKAPP } from \"../../service/SnIndexedDB\"\r\nimport { BROWSER_STORAGE } from \"../../utils/SnConstants\"\r\nimport { setUserSession } from \"../../redux/action-reducers-epic/SnUserSessionAction\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { getProfile, getPreferences } from '../../service/SnSkappService';\r\nimport { setUserProfileAction } from '../../redux/action-reducers-epic/SnUserProfileAction';\r\nimport { setUserPreferencesAction } from '../../redux/action-reducers-epic/SnUserPreferencesAction';\r\nconst useStyles = makeStyles((theme) => ({\r\n    rootDark: {\r\n        // backgroundColor: '#fff',\r\n        backgroundColor: '#2A2C34',\r\n        background: \"#ffff 0 % 0 % no-repeat padding-box\",\r\n        boxShadow: '0px 1px 4px #15223214',\r\n\r\n    },\r\n    rootLight: {\r\n        backgroundColor: '#fff',\r\n        background: \"#ffff 0 % 0 % no-repeat padding-box\",\r\n        boxShadow: '0px 1px 4px #15223214',\r\n    },\r\n    toolBarRoot: {\r\n        justifyContent: 'space-between',\r\n        '@media only screen and (max-width: 890px)': {\r\n            justifyContent: 'space-between'\r\n        }\r\n    },\r\n    // grow: {\r\n    //     flexGrow: 1,\r\n    //     // background: 'red'\r\n    //     '@media only screen and (max-width: 890px)': {\r\n    //         flexGrow: 0,\r\n    //     }\r\n    // },\r\n    menuButton: {\r\n        display: 'none',\r\n        marginRight: theme.spacing(2),\r\n        '@media only screen and (max-width: 890px)': {\r\n            display: 'block'\r\n        }\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade('#F0F5F7', 1),\r\n        '&:hover': {\r\n            backgroundColor: fade(\"#F0F5F7\", 0.7),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n        color: '#8B9DA5',\r\n        '@media only screen and (max-width: 890px)': {\r\n            display: 'none'\r\n        }\r\n    },\r\n    searchIconDark: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        // color: '#B4C6CC'\r\n        color: '#ffffff!important',\r\n    },\r\n    searchIconLight: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: '#2A2C34',\r\n        opacity: '0.4'\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInputDark: {\r\n        background: '#1E2029',\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '30ch',\r\n        },\r\n        [theme.breakpoints.up('lg')]: {\r\n            width: '50ch',\r\n        },\r\n\r\n    },\r\n    inputInputLight: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '30ch',\r\n        },\r\n        [theme.breakpoints.up('lg')]: {\r\n            width: '50ch',\r\n        },\r\n\r\n    },\r\n    sectionDesktop: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'flex',\r\n        },\r\n    },\r\n    sectionMobile: {\r\n        display: 'flex',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    usrIcon: {\r\n\r\n        width: '28px',\r\n        height: '28px',\r\n        minWidth: 'auto',\r\n        backgroundColor: '#7e84a31c',\r\n        borderRadius: \"4px\",\r\n        padding: 0\r\n    },\r\n    userName: {\r\n        paddingLeft: \"10px\",\r\n        paddingRight: \"1rem\",\r\n        textTransform: 'capitalize',\r\n        maxWidth: 110,\r\n    },\r\n    helpText: {\r\n        paddingLeft: '.5rem'\r\n    },\r\n    pr_4: {\r\n        paddingRight: '2rem'\r\n    },\r\n    AngleDown: {\r\n        color: '#B4C6CC'\r\n    },\r\n    QuestionIcon: {\r\n        marginRight: '7px'\r\n    },\r\n    avatarIcon: {\r\n        color: '#7E84A3'\r\n    },\r\n    MenuRoot: {\r\n        marginTop: '40px',\r\n\r\n    },\r\n    MenuItem: {\r\n        borderBottom: \".3px solid #70707045\",\r\n        '@media(max-width: 991px)': {\r\n            fontSize: '12px'\r\n        }\r\n    },\r\n    /* darkMenuColor: {\r\n        color: '#fff',\r\n        background:'#2A2C34',\r\n    },\r\n    lightMenuColor: {\r\n        color: '#000',\r\n        background:'#fff',\r\n    }, */\r\n    menuIcon: {\r\n        marginRight: \".90rem\",\r\n        '@media(max-width: 1440px)': {\r\n            marginRight: \".70rem\",\r\n        }\r\n    },\r\n    logoutText: {\r\n        color: '#FF6060'\r\n    },\r\n    notifiText: {\r\n        paddingLeft: '10px'\r\n    },\r\n    mobileHelpItem: {\r\n        paddingLeft: \".5rem\"\r\n    },\r\n    darkLightTextWhite: {\r\n        color: '#fff'\r\n    },\r\n    darkLightTextDark: {\r\n        color: '#000'\r\n    },\r\n    switchButton: {\r\n        marginLeft: '5px',\r\n        marginRight: '5px'\r\n    }\r\n}))\r\n\r\nexport default function Navbar({toggle, setToggle}) {\r\n    \r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const { width } = useWindowDimensions()\r\n    const classes = useStyles()\r\n    const [anchorEl, setAnchorEl] = React.useState(null)\r\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null)\r\n  \r\n    const LightTheme = createMuiTheme({\r\n        palette:{\r\n            type: 'light',\r\n        }\r\n    }) \r\n\r\n    const DarkTheme = createMuiTheme({\r\n        palette:{\r\n            type: 'dark',\r\n        }\r\n    })\r\n\r\n    /* const handleChange = (e) => {\r\n        setLightMode(!lightMode);\r\n\r\n        if(lightMode) {\r\n            LightTheme();\r\n        } else {\r\n            DarkTheme();\r\n        }\r\n    } */\r\n\r\n    const isMenuOpen = Boolean(anchorEl)\r\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl)\r\n    const userSession = useSelector((state) => state.userSession)\r\n    // alert(\"NAV--userSession\"+userSession);\r\n    // alert(\"NAV--userSession:userID\"+userSession?.userID);\r\n    // alert(\"NAV--userSession:mysky\"+userSession?.mySky);\r\n    // alert(\"NAV--userSession:dac\"+userSession?.dacs.userProfileDAC);\r\n    const [person, setPerson] = useState({ username: \"MySky User\" })\r\n\r\n    const userProfile = useSelector((state) => state.snUserProfile)\r\n    const userPreferences = useSelector((state) => state.snUserPreferences)\r\n    useEffect(() => {\r\n        setPerson({ username: userProfile?.username })\r\n    }, [userProfile]);\r\n\r\n    useEffect(() => {\r\n        const reloadReduxState = async () => {\r\n            if (userSession?.mySky != null) {\r\n                console.log(\"#### On Refresh : Reload Redux State ####\");\r\n                if (!userProfile) {\r\n                    console.log(\"#### On Refresh : Reload Redux State #### [userProfile]\");\r\n                    const userProfile = await getProfile();\r\n                    setPerson({ username: userProfile?.username })\r\n                    dispatch(setUserProfileAction(userProfile));\r\n                }\r\n                if (!userPreferences) {\r\n                    console.log(\"#### On Refresh : Reload Redux State #### [userPrefrences]\");\r\n                    const userPrefrences = await getPreferences();\r\n                    dispatch(setUserPreferencesAction(userPrefrences));\r\n                }\r\n            }\r\n        }\r\n        reloadReduxState();\r\n    }, []);\r\n\r\n    const handleProfileMenuOpen = (event) => {\r\n        setAnchorEl(event.currentTarget)\r\n    }\r\n\r\n    const handleMobileMenuClose = () => {\r\n        setMobileMoreAnchorEl(null)\r\n    }\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null)\r\n        handleMobileMenuClose()\r\n    }\r\n    const handleSettings = () => {\r\n        setAnchorEl(null)\r\n        handleMobileMenuClose()\r\n        if (userSession != null) {\r\n            history.push('/usersettings')\r\n        }\r\n    }\r\n\r\n    const handleMobileMenuOpen = (event) => {\r\n        setMobileMoreAnchorEl(event.currentTarget)\r\n    }\r\n\r\n\r\n    const handleMySkyLogout = async () => {\r\n        try {\r\n            dispatch(setLoaderDisplay(true));\r\n            if (userSession?.mySky) {\r\n                try {\r\n                    await userSession.mySky.logout();\r\n                }\r\n                catch (e) {\r\n                    console.log(\"Error during logout process.\" + e)\r\n                }\r\n            }\r\n            await clearAllfromIDB({ store: IDB_STORE_SKAPP });\r\n            BROWSER_STORAGE.clear();\r\n            await dispatch(setUserSession(null));\r\n            dispatch(setLoaderDisplay(false));\r\n            window.location.href = window.location.origin\r\n\r\n        } catch (e) {\r\n            console.log(\"Error during logout process.\" + e)\r\n            dispatch(setLoaderDisplay(false))\r\n        }\r\n    }\r\n    const menuId = 'primary-search-account-menu'\r\n    const renderMenu = (\r\n        <Menu\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            id={menuId}\r\n            keepMounted\r\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            open={isMenuOpen}\r\n            onClose={handleMenuClose}\r\n            className=\"profile-dropdown\"\r\n            // className={`profile-dropdown ${toggle ? classes.darkMenuColor : classes.lightMenuColor}`}\r\n\r\n        >\r\n            <MenuItem onClick={handleSettings} className={classes.MenuItem}>\r\n                <SettingIcon className={classes.menuIcon} />\r\n                <span>Settings</span>\r\n            </MenuItem>\r\n            <MenuItem onClick={handleSettings} className={classes.MenuItem}>\r\n                <EditProfileIcon className={classes.menuIcon} />\r\n                <span>Edit Profile</span>\r\n            </MenuItem>\r\n            <MenuItem onClick={handleMySkyLogout} className={classes.MenuItem}>\r\n                <LogoutIcon className={classes.menuIcon} />\r\n                <span className={classes.logoutText}>Logout</span>\r\n            </MenuItem>\r\n        </Menu>\r\n    )\r\n\r\n    const mobileMenuId = 'primary-search-account-menu-mobile'\r\n    const renderMobileMenu = (\r\n        <Menu\r\n            anchorEl={mobileMoreAnchorEl}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            id={mobileMenuId}\r\n            keepMounted\r\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            open={isMobileMenuOpen}\r\n            onClose={handleMobileMenuClose}\r\n        >\r\n            {/* <MenuItem>\r\n                <Box display='flex' alignItems=\"center\" className={classes.mobileHelpItem} >\r\n                    <QuestionIcon />\r\n                    <p className={classes.helpText}>Help</p>\r\n                </Box>\r\n            </MenuItem> */}\r\n            <MenuItem>\r\n                <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\" style={{ width: '30px', height: \"28px\" }}>\r\n                    <Badge color=\"secondary\" variant=\"dot\">\r\n                        <NotificationIcon />\r\n                    </Badge>\r\n                </IconButton>\r\n                <p className={classes.notifiText}>Notifications</p>\r\n            </MenuItem>\r\n            <MenuItem onClick={handleProfileMenuOpen}>\r\n                <Button className={classes.usrIcon}>\r\n                    {/* <PersonOutlineIcon className={classes.avatarIcon} /> */}\r\n                    <img width=\"100%\" src=\"https://siasky.net/DACbyw6auUWhumhBTaJLUhoCmSW8ifK7muvKvkTcz7nYhA\"\r\n                        alt=\"\" />\r\n                </Button>\r\n                <Tooltip title={person.username} placement=\"top\" arrow >\r\n                    <Typography className={classes.userName} noWrap>{person.username}</Typography>\r\n                </Tooltip>\r\n                <KeyboardArrowDownIcon className={classes.AngleDown} />\r\n            </MenuItem>\r\n        </Menu>\r\n    )\r\n    const [menuIsOpen, setMenuIsOpen] = useState(false)\r\n\r\n    const menuButtonHandler = () => {\r\n        menuIsOpen ? setMenuIsOpen(false) : setMenuIsOpen(true)\r\n    }\r\n    return (\r\n        <Fragment>\r\n            {width <= 890 &&\r\n                <Sidebar style={{\r\n                    display: width <= 890 ? 'block' : undefined,\r\n                    zIndex: 99,\r\n                    height: '100vh',\r\n                    transition: '.5s ease',\r\n                    transform: menuIsOpen ? 'translateX(0)' : 'translateX(-100%)'\r\n                }} />}\r\n            {(menuIsOpen && width <= 890) && <div onClick={menuButtonHandler}\r\n                style={{\r\n                    idth: '100%',\r\n                    position: 'fixed',\r\n                    zIndex: '98',\r\n                    background: '#ebebeba6',\r\n                    top: 0,\r\n                    bottom: 0,\r\n                    left: 0,\r\n                    right: 0,\r\n                    display: width > 890 ? 'none' : undefined,\r\n                }}></div>}\r\n            <AppBar position=\"static\" className={toggle ?  classes.rootDark : classes.rootLight} color='default'>\r\n                <Toolbar className={classes.toolBarRoot} >\r\n                    <IconButton edge=\"start\" onClick={menuButtonHandler} className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                        <CustomMenuIcon />\r\n                    </IconButton>\r\n                    <div className=\"logo-top\" >\r\n                        {toggle ? <Logo1 /> : <Logo />} \r\n                    </div>\r\n                    <div className={classes.search}>\r\n                    \r\n                        \r\n                        {toggle ? \r\n                            <>\r\n                                <div className={classes.searchIconDark}>\r\n                                    <SearchIcon />\r\n                                    {/* <Icon style={{color: grey[50]}}>article</Icon> */}\r\n                                </div>\r\n                                <InputBase\r\n                                    placeholder=\"Search…\"\r\n                                    classes={{\r\n                                        root: classes.inputRoot,\r\n                                        input: classes.inputInputDark,\r\n                                    }}\r\n                                    inputProps={{ 'aria-label': 'search' }}\r\n                                />\r\n                            </> : \r\n                            <>\r\n                                <div className={classes.searchIconLight}>\r\n                                    <SearchIcon />\r\n                                    {/* <Icon style={{color: grey[50]}}>article</Icon> */}\r\n                                </div>\r\n                            \r\n                                <InputBase\r\n                                    placeholder=\"Search…\"\r\n                                    classes={{\r\n                                        root: classes.inputRoot,\r\n                                        input: classes.inputInputLight,\r\n                                    }}\r\n                                    inputProps={{ 'aria-label': 'search' }}\r\n                                />\r\n                            </>\r\n                        }\r\n                    </div>\r\n\r\n                    <div className={toggle ? classes.darkLightTextWhite : classes.darkLightTextDark}>\r\n                        Light\r\n                        <Switch color=\"primary\" checked={toggle} onChange={()=>setToggle(!toggle)} className={classes.switchButton} />\r\n                        Dark\r\n                        {/* <Switch color=\"primary\" checked={toggle} onChange={(e) => handleChange(e)}/> */}\r\n                    </div>\r\n\r\n                    <div className={classes.sectionDesktop}>\r\n                        {/* <Box display='flex' alignItems=\"center\" className={classes.pr_4}>\r\n                            <QuestionIcon className={classes.QuestionIcon} />\r\n                            <p className={classes.helpText}>Help</p>\r\n                        </Box> */}\r\n                        <Box display=\"flex\" alignItems=\"center\" className={classes.pr_4}>\r\n\r\n                            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\" style={{ width: '30px', height: \"28px\" }}>\r\n                                <Badge color=\"secondary\" variant=\"dot\">\r\n                                    <NotificationIcon />\r\n                                </Badge>\r\n                            </IconButton>\r\n                        </Box>\r\n\r\n                        <Box display=\"flex\" alignItems=\"center\" onClick={handleProfileMenuOpen}>\r\n                            <Button className={classes.usrIcon} >\r\n                                {/* <PersonOutlineIcon className={classes.avatarIcon} />\r\n                                 */}\r\n                                <img width=\"100%\" src=\"https://siasky.net/DACbyw6auUWhumhBTaJLUhoCmSW8ifK7muvKvkTcz7nYhA\"\r\n                                    alt=\"\" />\r\n                            </Button>\r\n                            <Tooltip title={person.username} placement=\"top\" arrow >\r\n                                <Typography className={classes.userName} noWrap>{person.username}</Typography>\r\n                            </Tooltip>\r\n                            <KeyboardArrowDownIcon className={classes.AngleDown} />\r\n                        </Box>\r\n                    </div>\r\n                    <div className={classes.sectionMobile}>\r\n                        <IconButton\r\n                            aria-label=\"show more\"\r\n                            aria-controls={mobileMenuId}\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleMobileMenuOpen}\r\n                            color=\"inherit\"\r\n                        >\r\n                            <MoreIcon />\r\n                        </IconButton>\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n            {renderMobileMenu}\r\n            {renderMenu}\r\n        </Fragment>\r\n    )\r\n}\r\n","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\Sidebar\\Sidebar.js",["683"],"import React from \"react\"\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\r\nimport \"react-perfect-scrollbar/dist/css/styles.css\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\"\r\nimport List from \"@material-ui/core/List\"\r\nimport ListItem from \"@material-ui/core/ListItem\"\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\"\r\nimport ListItemText from \"@material-ui/core/ListItemText\"\r\nimport Collapse from \"@material-ui/core/Collapse\"\r\nimport { useLocation } from 'react-router-dom'\r\n// Custom Icons Imports\r\nimport { ReactComponent as DashboardIcon } from \"../../assets/img/icons/dashboardIcon.svg\"\r\nimport { ReactComponent as SubmitAppIcon } from \"../../assets/img/icons/submitIcon.svg\"\r\nimport { ReactComponent as MyAppIcon } from \"../../assets/img/icons/grayMyApps.svg\"\r\nimport { ReactComponent as HostingIcon } from \"../../assets/img/icons/Cloud, Sync, Synchronize.6.svg\"\r\nimport { ReactComponent as DeployIcon } from \"../../assets/img/icons/deployIcon.svg\"\r\nimport { ReactComponent as FilesIcon } from \"../../assets/img/icons/filesIcon.svg\"\r\nimport { ReactComponent as DomainIcon } from \"../../assets/img/icons/domainIcon.svg\"\r\nimport { ReactComponent as StorageIcon } from \"../../assets/img/icons/StorageIcon.svg\"\r\nimport { ReactComponent as StatsIcon } from \"../../assets/img/icons/statsIcon.svg\"\r\nimport { ReactComponent as ActivityLogIcon } from \"../../assets/img/icons/starOutlinedIcon.svg\"\r\nimport { ReactComponent as KnowlBaseIcon } from \"../../assets/img/icons/knowledgeBaseIcon.svg\"\r\nimport { ReactComponent as ProductUpdateIcon } from \"../../assets/img/icons/productUpdateIcon.svg\"\r\nimport { ReactComponent as SettingNavLogIcon } from \"../../assets/img/icons/settingNavIcon.svg\"\r\nimport { ReactComponent as PersonIcon } from '../../assets/img/icons/interface-essential-311.svg'\r\nimport { ExpandLess, ExpandMore } from \"@material-ui/icons\"\r\n// sidebar styles\r\nimport style from \"../../assets/jss/sidebar/SidebarStyle\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport { useSelector } from \"react-redux\"\r\nconst useStyles = makeStyles(style)\r\n\r\nconst Sidebar = ({style, toggle}) => {\r\n  const classes = useStyles()\r\n  const [open, setOpen] = React.useState(true)\r\n\r\n  const snShowHostingLinks = useSelector(state => state.snShowHostingLinks)\r\n  let userSession = useSelector((state) => state.userSession)\r\n  const handleClick = () => {\r\n    setOpen(!open)\r\n  }\r\n\r\n  let location = useLocation()\r\n\r\n  let sidebar = (\r\n    <>\r\n    {toggle ? <div className={`${toggle ? classes.darkSidebar : classes.lightSidebar} darkSidebar`} style={style}>\r\n      <PerfectScrollbar>\r\n        <List\r\n          component=\"nav\"\r\n          aria-labelledby=\"nested-list-subheader\"\r\n          className={classes.root}\r\n        >\r\n          <NavLink exact to=\"/\">\r\n            <ListItem button>\r\n              <ListItemIcon className={classes.listIcon}>\r\n                <DashboardIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"App Store\" />\r\n            </ListItem>\r\n          </NavLink>\r\n          <NavLink to=\"/submitapp\">\r\n            <ListItem button>\r\n              <ListItemIcon className={classes.listIcon}>\r\n                <SubmitAppIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Publish App\" />\r\n            </ListItem>\r\n          </NavLink>\r\n          <NavLink exact to=\"/apps\">\r\n            <ListItem button>\r\n              <ListItemIcon className={classes.listIcon}>\r\n                <MyAppIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"My Published Apps\" />\r\n            </ListItem>\r\n          </NavLink>\r\n          <NavLink exact to=\"/installedapps\">\r\n            <ListItem button>\r\n              <ListItemIcon className={classes.listIcon}>\r\n                <MyAppIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"My Installed Apps\" />\r\n            </ListItem>\r\n          </NavLink>\r\n          {/* <NavLink exact to=\"/installedappps\">\r\n            <ListItem button>\r\n              <ListItemIcon className={classes.listIcon}>\r\n                <MyAppIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"My Apps\" />\r\n            </ListItem>\r\n          </NavLink> */}\r\n          <NavLink exact to='/descoverdev'>\r\n            <ListItem button>\r\n              <ListItemIcon className={classes.listIcon}>\r\n                <PersonIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Developer Discovery\" />\r\n            </ListItem>\r\n          </NavLink>\r\n          <NavLink exact to=\"/hosting\">\r\n            <ListItem button>\r\n              <ListItemIcon className={classes.listIcon}>\r\n                <HostingIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Hosting\" />\r\n              {snShowHostingLinks ? (\r\n                <ExpandLess className={classes.dropArrow} />\r\n              ) : (\r\n                <ExpandMore className={classes.dropArrow} />\r\n              )}\r\n            </ListItem>\r\n          </NavLink>\r\n          <Collapse in={snShowHostingLinks} timeout=\"auto\" unmountOnExit>\r\n            <List component=\"div\" disablePadding>\r\n              <NavLink to=\"/deploysite\">\r\n                <ListItem button className={classes.nested}>\r\n                  <ListItemIcon className={classes.listIcon}>\r\n                    <DeployIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"Deploy\" />\r\n                </ListItem>\r\n              </NavLink>\r\n              <ListItem button className={classes.nested}>\r\n                <ListItemIcon className={classes.listIcon}>\r\n                  <FilesIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Files\" />\r\n              </ListItem>\r\n              <NavLink exact to=\"/nodomain\">\r\n                <ListItem button className={classes.nested}>\r\n                  <ListItemIcon className={classes.listIcon}>\r\n                    <DomainIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"Domain\" />\r\n                </ListItem>\r\n              </NavLink>\r\n              <NavLink exact to=\"/storagegateway\">\r\n                <ListItem button className={classes.nested}>\r\n                  <ListItemIcon className={classes.listIcon}>\r\n                    <StorageIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"Storage\" />\r\n                </ListItem>\r\n              </NavLink>\r\n              <ListItem button className={classes.nested}>\r\n                <ListItemIcon className={classes.listIcon}>\r\n                  <StatsIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Usage Stats\" />\r\n              </ListItem>\r\n              <ListItem button className={classes.nested}>\r\n                <ListItemIcon className={classes.listIcon}>\r\n                  <ActivityLogIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Activity Log\" />\r\n              </ListItem>\r\n            </List>\r\n          </Collapse>\r\n        </List>\r\n        {/* Other Information section */}\r\n        <List\r\n          subheader={\r\n            <ListSubheader component=\"div\" id=\"nested-list-subheader\">\r\n              Other Information\r\n            </ListSubheader>\r\n          }\r\n          component=\"nav\"\r\n          aria-labelledby=\"nested-list-subheader\"\r\n          className={classes.root}\r\n        >\r\n          <ListItem button>\r\n            <ListItemIcon className={classes.listIcon}>\r\n              <KnowlBaseIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Knowledge Base\" />\r\n          </ListItem>\r\n\r\n          <ListItem button>\r\n            <ListItemIcon className={classes.listIcon}>\r\n              <ProductUpdateIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Product Updates\" />\r\n          </ListItem>\r\n        </List>\r\n        {/* Settings section */}\r\n        <List\r\n          subheader={\r\n            <ListSubheader component=\"div\" id=\"nested-list-subheader\">\r\n              Settings\r\n            </ListSubheader>\r\n          }\r\n          component=\"nav\"\r\n          aria-labelledby=\"nested-list-subheader\"\r\n          className={classes.root}\r\n        >\r\n          <NavLink exact to=\"/usersettings\">\r\n            <ListItem button>\r\n              <ListItemIcon className={classes.listIcon}>\r\n                <SettingNavLogIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Settings\" />\r\n            </ListItem>\r\n          </NavLink>\r\n        </List>\r\n        <div className={classes.promoCard}>\r\n          <h3 className={classes.promoTitle}>Promo Title</h3>\r\n          <p className={classes.promoText}>Explore our marketing solutions</p>\r\n        </div>\r\n      </PerfectScrollbar>\r\n    </div> : <div className={`${toggle ? classes.darkSidebar : classes.lightSidebar} lightSidebar`} style={style}>\r\n      <PerfectScrollbar>\r\n        <List\r\n          component=\"nav\"\r\n          aria-labelledby=\"nested-list-subheader\"\r\n          className={classes.root}\r\n        >\r\n          <NavLink exact to=\"/\">\r\n            <ListItem button>\r\n              <ListItemIcon className={classes.listIcon}>\r\n                <DashboardIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"App Store\" />\r\n            </ListItem>\r\n          </NavLink>\r\n          <NavLink to=\"/submitapp\">\r\n            <ListItem button>\r\n              <ListItemIcon className={classes.listIcon}>\r\n                <SubmitAppIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Publish App\" />\r\n            </ListItem>\r\n          </NavLink>\r\n          <NavLink exact to=\"/apps\">\r\n            <ListItem button>\r\n              <ListItemIcon className={classes.listIcon}>\r\n                <MyAppIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"My Published Apps\" />\r\n            </ListItem>\r\n          </NavLink>\r\n          <NavLink exact to=\"/installedapps\">\r\n            <ListItem button>\r\n              <ListItemIcon className={classes.listIcon}>\r\n                <MyAppIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"My Installed Apps\" />\r\n            </ListItem>\r\n          </NavLink>\r\n          {/* <NavLink exact to=\"/installedappps\">\r\n            <ListItem button>\r\n              <ListItemIcon className={classes.listIcon}>\r\n                <MyAppIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"My Apps\" />\r\n            </ListItem>\r\n          </NavLink> */}\r\n          <NavLink exact to='/descoverdev'>\r\n            <ListItem button>\r\n              <ListItemIcon className={classes.listIcon}>\r\n                <PersonIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Developer Discovery\" />\r\n            </ListItem>\r\n          </NavLink>\r\n          <NavLink exact to=\"/hosting\">\r\n            <ListItem button>\r\n              <ListItemIcon className={classes.listIcon}>\r\n                <HostingIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Hosting\" />\r\n              {snShowHostingLinks ? (\r\n                <ExpandLess className={classes.dropArrow} />\r\n              ) : (\r\n                <ExpandMore className={classes.dropArrow} />\r\n              )}\r\n            </ListItem>\r\n          </NavLink>\r\n          <Collapse in={snShowHostingLinks} timeout=\"auto\" unmountOnExit>\r\n            <List component=\"div\" disablePadding>\r\n              <NavLink to=\"/deploysite\">\r\n                <ListItem button className={classes.nested}>\r\n                  <ListItemIcon className={classes.listIcon}>\r\n                    <DeployIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"Deploy\" />\r\n                </ListItem>\r\n              </NavLink>\r\n              <ListItem button className={classes.nested}>\r\n                <ListItemIcon className={classes.listIcon}>\r\n                  <FilesIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Files\" />\r\n              </ListItem>\r\n              <NavLink exact to=\"/nodomain\">\r\n                <ListItem button className={classes.nested}>\r\n                  <ListItemIcon className={classes.listIcon}>\r\n                    <DomainIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"Domain\" />\r\n                </ListItem>\r\n              </NavLink>\r\n              <NavLink exact to=\"/storagegateway\">\r\n                <ListItem button className={classes.nested}>\r\n                  <ListItemIcon className={classes.listIcon}>\r\n                    <StorageIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"Storage\" />\r\n                </ListItem>\r\n              </NavLink>\r\n              <ListItem button className={classes.nested}>\r\n                <ListItemIcon className={classes.listIcon}>\r\n                  <StatsIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Usage Stats\" />\r\n              </ListItem>\r\n              <ListItem button className={classes.nested}>\r\n                <ListItemIcon className={classes.listIcon}>\r\n                  <ActivityLogIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Activity Log\" />\r\n              </ListItem>\r\n            </List>\r\n          </Collapse>\r\n        </List>\r\n        {/* Other Information section */}\r\n        <List\r\n          subheader={\r\n            <ListSubheader component=\"div\" id=\"nested-list-subheader\">\r\n              Other Information\r\n            </ListSubheader>\r\n          }\r\n          component=\"nav\"\r\n          aria-labelledby=\"nested-list-subheader\"\r\n          className={classes.root}\r\n        >\r\n          <ListItem button>\r\n            <ListItemIcon className={classes.listIcon}>\r\n              <KnowlBaseIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Knowledge Base\" />\r\n          </ListItem>\r\n\r\n          <ListItem button>\r\n            <ListItemIcon className={classes.listIcon}>\r\n              <ProductUpdateIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Product Updates\" />\r\n          </ListItem>\r\n        </List>\r\n        {/* Settings section */}\r\n        <List\r\n          subheader={\r\n            <ListSubheader component=\"div\" id=\"nested-list-subheader\">\r\n              Settings\r\n            </ListSubheader>\r\n          }\r\n          component=\"nav\"\r\n          aria-labelledby=\"nested-list-subheader\"\r\n          className={classes.root}\r\n        >\r\n          <NavLink exact to=\"/usersettings\">\r\n            <ListItem button>\r\n              <ListItemIcon className={classes.listIcon}>\r\n                <SettingNavLogIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Settings\" />\r\n            </ListItem>\r\n          </NavLink>\r\n        </List>\r\n        <div className={classes.promoCard}>\r\n          <h3 className={classes.promoTitle}>Promo Title</h3>\r\n          <p className={classes.promoText}>Explore our marketing solutions</p>\r\n        </div>\r\n      </PerfectScrollbar>\r\n    </div>}\r\n    </>\r\n  )\r\n  if (!userSession || location.pathname === '/login') {\r\n    sidebar = null\r\n  }\r\n  return (\r\n\r\n    sidebar\r\n  )\r\n}\r\n\r\nexport default Sidebar\r\n","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnUploadListReducer.js",["684"],"import { ACT_TY_SET_UPLOAD_LIST } from \"../SnActionConstants\";\n\nexport default (state = {}, action)=> {\n    switch(action.type){\n        case ACT_TY_SET_UPLOAD_LIST:\n            return Object.assign({}, action.payload);\n        default:\n            return state;\n    }\n}","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnLoaderReducer.js",["685"],"import { ACT_TY_CHANGE_LOADER_STATE } from \"../SnActionConstants\"\n\nexport default (state = false, action) => {\n  switch (action.type) {\n    case ACT_TY_CHANGE_LOADER_STATE:\n      return action.payload\n    default:\n      return state\n  }\n}\n","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnSelectedHostedAppReducer.js",["686"],"import { ACT_TY_SET_SELECTED_HOSTED_APP } from \"../SnActionConstants\";\nimport { STORAGE_SELECTED_HOSTED_APP_KEY, BROWSER_STORAGE } from \"../../utils/SnConstants\";\n\nexport default (state = null, action) => {\n  switch (action.type) {\n    case ACT_TY_SET_SELECTED_HOSTED_APP:\n      return action.payload\n    default:\n      if (state == null) {\n        state = BROWSER_STORAGE.getItem(STORAGE_SELECTED_HOSTED_APP_KEY);\n      }\n      return state;\n  }\n}\n","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnAllPublishAppReducer.js",["687","688"],"import {ACT_TY_SET_ALL_PUBLISHED_APPS, ACT_TY_SET_APP_COMMENTS} from \"../SnActionConstants\";\n\nexport default (state = [], action) => {\n  switch (action.type) {\n    case ACT_TY_SET_ALL_PUBLISHED_APPS:\n      //return {...state, publishedAppsStore : action.payload}\n      return action.payload\n    default:\n      return state\n  }\n}","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnPublishAppReducer.js",["689"],"import {ACT_TY_SET_MY_PUBLISHED_APPS} from \"../SnActionConstants\";\nlet initState = {\n  publishedAppsStore: []\n};\nexport default (state = initState, action) => {\n  switch (action.type) {\n    case ACT_TY_SET_MY_PUBLISHED_APPS:\n      return {...state, publishedAppsStore : action.payload}\n    default:\n      return state\n  }\n}","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnInstalledAppReducer.js",["690"],"import {ACT_TY_SET_MY_INSTALLED_APPS, EPIC_TY_INSTALLED_FOR_LOGIN_APP} from \"../SnActionConstants\";\nlet initState = {\n  installedAppsStore: [],\n  installedAppsStoreForLogin: null\n};\nexport default (state = initState, action) => {\n  switch (action.type) {\n    case ACT_TY_SET_MY_INSTALLED_APPS:\n      return {...state, installedAppsStore : action.payload}\n    case EPIC_TY_INSTALLED_FOR_LOGIN_APP: \n      return {...state, installedAppsStoreForLogin : action.payload}\n    default:\n      return state\n  }\n}","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnAppStatsReducer.js",["691"],"import {ACT_TY_STATS_ACTION } from \"../SnActionConstants\";\n\nexport default (state = null, action) => {\n  switch (action.type) {\n    case ACT_TY_STATS_ACTION:\n      return action.payload\n    default:\n      return state\n  }\n}","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnAppStatsEpic.js",["692","693"],"import { ofType } from \"redux-observable\"\nimport { switchMap, map } from \"rxjs/operators\"\nimport { from } from \"rxjs\"\nimport { setLoaderDisplay } from \"./SnLoaderAction\"\nimport { EPIC_TY_SET_STATS, EPIC_TY_GET_STATS } from \"../SnActionConstants\"\nimport { setAppStatsEvent, getAppStats } from \"../../service/SnSkappService\"\nimport { setAppStatsStore } from \"./SnAppStatsAction\"\nimport store from \"../../redux\"\n// app stats actions\nexport const snSetAppStatsEpic = (action$) =>\n    action$.\n        pipe(ofType(EPIC_TY_SET_STATS),\n            // do we need to change this to mergemap ? we dont want subscription to be overwritten\n            switchMap((action) => {\n                return from(setAppStatsEvent(action.payload.actionType, action.payload.appId))\n                    .pipe(\n                        map((res) => {\n                            //setLoaderDisplay(false)\n                            // Update Redux Store\n                            return  setAppStatsStore(res)\n                        })\n                    )\n            }));\n\nexport const snGetAppStatsEpic = (action$) => action$.pipe(ofType(EPIC_TY_GET_STATS),\n    // do we need to change this to mergemap ? we dont want subscription to be overwritten\n    switchMap((action) => {\n        setLoaderDisplay(true)\n        return from(getAppStats(action.payload.appId))\n            .pipe(\n                map((res) => {\n                    setLoaderDisplay(false)\n                    // Update Redux Store\n                    return setAppStatsStore(res)\n                })\n            )\n    }));","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnAppCommentsReducer.js",["694","695"],"import {ACT_TY_SET_PUBLISHED_APPS, ACT_TY_SET_APP_COMMENTS} from \"../SnActionConstants\";\nlet initState = {\n  appCommentsStore: [],\n};\nexport default (state = initState, action) => {\n  switch (action.type) {\n    case ACT_TY_SET_APP_COMMENTS:\n      return {...state, appCommentsStore : action.payload}\n    default:\n      return state\n  }\n}","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnAllPublishAppEpic.js",["696"],"import { ofType } from \"redux-observable\"\nimport { switchMap, map } from \"rxjs/operators\"\nimport { from } from \"rxjs\"\nimport { setLoaderDisplay } from \"./SnLoaderAction\"\nimport {\n    EPIC_TY_GET_ALL_PUBLISHED_APPS,\n} from \"../SnActionConstants\"\nimport { getAllPublishedApps } from \"../../service/SnSkappService\"\nimport { setAllPublishedAppsStore } from \"./SnAllPublishAppAction\"\n// app stats actions\nimport store from \"..\"\nexport const snGetAllPublishedAppsEpic = (action$) =>\n    action$.\n        pipe(ofType(EPIC_TY_GET_ALL_PUBLISHED_APPS),\n            // do we need to change this to mergemap ? we dont want subscription to be overwritten\n            switchMap((action) => {\n                console.log(\"sortby\", action.sortBy)\n                store.dispatch(setLoaderDisplay(true))\n                return from(getAllPublishedApps(action.sortBy.sortOn, action.sortBy.orderBy, action.sortBy.n))\n                    .pipe(\n                        map((res) => {\n                            store.dispatch(setLoaderDisplay(false))\n                            // Update Redux Store\n                            return setAllPublishedAppsStore(res)\n                        })\n                    )\n            }))\n\n","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnShowHostingLinksReducer.js",["697"],"import { ACT_TY_CHANGE_SHOW_HOSTING_LINKS_STATE } from \"../SnActionConstants\";\n\nexport default (state = false, action) => {\n  switch (action.type) {\n    case ACT_TY_CHANGE_SHOW_HOSTING_LINKS_STATE:\n      return action.payload\n    default:\n      return state\n  }\n}\n","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnUserSessionReducer.js",["698"],"import { ACT_TY_SET_USER_SESSION } from \"../SnActionConstants\"\r\n\r\n//export default (state = getUserSession(), action) => {\r\nexport default (state = null, action) => {\r\n  switch (action.type) {\r\n    case ACT_TY_SET_USER_SESSION:\r\n      return action.payload\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnPublishAppEpic.js",["699","700"],"import { ofType } from \"redux-observable\"\nimport { switchMap, map } from \"rxjs/operators\"\nimport { from } from \"rxjs\"\nimport { setLoaderDisplay } from \"./SnLoaderAction\"\nimport {\n    EPIC_TY_PUBLISH_APP, EPIC_TY_GET_MY_PUBLISHED_APPS,\n    \n} from \"../SnActionConstants\";\nimport { publishApp, getMyPublishedApps } from \"../../service/SnSkappService\"\nimport { setPublishedAppsStore } from \"./SnPublishAppAction\"\n// app stats actions\nimport store from \"../../redux\"\nexport const snSetPublishAppEpic = (action$) =>\n    action$.\n        pipe(ofType(EPIC_TY_PUBLISH_APP),\n            // do we need to change this to mergemap ? we dont want subscription to be overwritten\n            switchMap((action) => {\n                console.log(\"snPublishAppEpic \", action)\n                store.dispatch(setLoaderDisplay(true))\n                return from(publishApp(action.payload)) // must return all published app\n                    .pipe(\n                        map((res) => {\n                            //const apps = await getAllPublishedApps();\n                            store.dispatch(setLoaderDisplay(false))\n                            //action.payload.manageSubmitLoader(false)\n                            // Update Redux Store\n                            return setPublishedAppsStore(res)\n                        })\n                    )\n            }));\nexport const snGetPublishedAppsEpic = (action$) =>\n    action$.\n        pipe(ofType(EPIC_TY_GET_MY_PUBLISHED_APPS),\n            // do we need to change this to mergemap ? we dont want subscription to be overwritten\n            switchMap((action) => {\n                store.dispatch(setLoaderDisplay(true))\n                return from(getMyPublishedApps())\n                    .pipe(\n                        map((res) => {\n                            store.dispatch(setLoaderDisplay(false))\n                            // Update Redux Store\n                            return setPublishedAppsStore(res)\n                        })\n                    )\n            }));\n\n","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnInstalledAppEpic.js",["701","702","703","704"],"import { ofType } from \"redux-observable\"\nimport { switchMap, map } from \"rxjs/operators\"\nimport { from } from \"rxjs\"\nimport { setLoaderDisplay } from \"./SnLoaderAction\"\nimport {\n    EPIC_TY_INSTALLED_APP, EPIC_TY_GET_MY_INSTALLED_APPS,\n    EPIC_TY_UNINSTALLED_APP, EPIC_TY_INSTALLED_FOR_LOGIN_APP\n} from \"../SnActionConstants\";\nimport { getMyInstalledApps, installApp, uninstallApp } from \"../../service/SnSkappService\"\nimport { setInstalledAppsStore, installedAppActionForLogin } from \"./SnInstalledAppAction\"\n// app stats actions\nimport store from \"../../redux\"\nexport const snSetInstallAppEpic = (action$) =>\n    action$.\n        pipe(ofType(EPIC_TY_INSTALLED_APP),\n            // do we need to change this to mergemap ? we dont want subscription to be overwritten\n            switchMap((action) => {\n                console.log(\"snInstalledAppEpic \", action)\n                store.dispatch(setLoaderDisplay(true))\n                return from(installApp(action.payload)) // must return all published app\n                    .pipe(\n                        map((res) => {\n                            store.dispatch(installedAppActionForLogin(null));\n                            store.dispatch(setLoaderDisplay(false))\n                            return setInstalledAppsStore(res)\n                        })\n                    )\n            }));\nexport const snSetUnInstallAppEpic = (action$) =>\n    action$.\n        pipe(ofType(EPIC_TY_UNINSTALLED_APP),\n            // do we need to change this to mergemap ? we dont want subscription to be overwritten\n            switchMap((action) => {\n                console.log(\"snUnInstalledAppEpic \", action)\n                store.dispatch(setLoaderDisplay(true))\n                return from(uninstallApp(action.payload)) // must return all published app\n                    .pipe(\n                        map((res) => {\n                            store.dispatch(installedAppActionForLogin(null));\n                            store.dispatch(setLoaderDisplay(false))\n                            return setInstalledAppsStore(res)\n                        })\n                    )\n            }));\nexport const snGetInstalledAppsEpic = (action$) =>\n    action$.\n        pipe(ofType(EPIC_TY_GET_MY_INSTALLED_APPS),\n            // do we need to change this to mergemap ? we dont want subscription to be overwritten\n\n            switchMap((action) => {\n                store.dispatch(setLoaderDisplay(true))\n                return from(getMyInstalledApps())\n                    .pipe(\n                        map((res) => {\n                            store.dispatch(setLoaderDisplay(false))\n                            // Update Redux Store\n                            return setInstalledAppsStore(res)\n                        })\n                    )\n            }));\n\n","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnAppCommentsEpic.js",["705","706"],"import { ofType } from \"redux-observable\"\nimport { switchMap, map } from \"rxjs/operators\"\nimport { from } from \"rxjs\"\nimport { setLoaderDisplay } from \"./SnLoaderAction\"\nimport {\n    EPIC_TY_SET_APP_COMMENTS, EPIC_TY_GET_APP_COMMENTS\n} from \"../SnActionConstants\";\nimport { setAppComment, getAppComments } from \"../../service/SnSkappService\"\nimport { setAppCommentStore } from \"./SnAppCommentsAction\"\n// app stats actions\nimport store from \"..\"\n\nexport const snSetAppCommentEpic = (action$) =>\n    action$.\n        pipe(ofType(EPIC_TY_SET_APP_COMMENTS),\n            // do we need to change this to mergemap ? we dont want subscription to be overwritten\n            switchMap((action) => {\n                store.dispatch(setLoaderDisplay(true))\n                return from(setAppComment(action.payload.appId, action.payload.data))\n                    .pipe(\n                        map((res) => {\n                            store.dispatch(setLoaderDisplay(false))\n                            // Update Redux Store\n                            return setAppCommentStore(res)\n                        })\n                    )\n            }));\n\nexport const snGetAppCommentsEpic = (action$) =>\n    action$.\n        pipe(ofType(EPIC_TY_GET_APP_COMMENTS),\n            // do we need to change this to mergemap ? we dont want subscription to be overwritten\n            switchMap((action) => {\n                store.dispatch(setLoaderDisplay(true))\n                return from(getAppComments(action.payload.appId))\n                    .pipe(\n                        map((res) => {\n                            store.dispatch(setLoaderDisplay(false))\n                            // Update Redux Store\n                            return setAppCommentStore(res)\n                        })\n                    )\n            }));","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnLoaderAction.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\Navbar\\LandingPageNavbar.js",["707","708","709","710","711"],"import React, { useState, Fragment, useEffect } from 'react'\nimport { fade, makeStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport InputBase from '@material-ui/core/InputBase'\nimport Badge from '@material-ui/core/Badge'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Menu from '@material-ui/core/Menu'\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline'\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown'\nimport { Link } from 'react-router-dom'\n\n// import MenuIcon from '@material-ui/icons/Menu'\nimport SearchIcon from '@material-ui/icons/Search'\n// import MailIcon from '@material-ui/icons/Mail'\n// import NotificationsIcon from '@material-ui/icons/Notifications'\n// import MoreIcon from '@material-ui/icons/MoreVert'\n// logo\n// import { ReactComponent as Logo } from '../../assets/img/icons/logo.svg'\nimport { ReactComponent as Logo1 } from '../../assets/img/icons/logo1.svg'\n\n// icons custom\nimport { ReactComponent as QuestionIcon } from '../../assets/img/icons/question.svg'\nimport { ReactComponent as SettingIcon } from '../../assets/img/icons/setting.svg'\nimport { ReactComponent as EditProfileIcon } from '../../assets/img/icons/edit-profile.svg'\nimport { ReactComponent as LogoutIcon } from '../../assets/img/icons/exit-log-out.2.svg'\nimport { ReactComponent as NotificationIcon } from '../../assets/img/icons/notification.svg'\n// import { ReactComponent as CustomMenuIcon } from '../../assets/img/icons/Icon ionic-ios-menu.svg'\nimport { Box, Button } from '@material-ui/core'\nimport Sidebar from '../Sidebar/Sidebar'\n// import { Translate } from '@material-ui/icons'\nimport useWindowDimensions from '../../hooks/useWindowDimensions'\nimport { useSelector } from 'react-redux'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // backgroundColor: '#fff',\n        backgroundColor: '#2A2C34',\n        background: \"#ffff 0 % 0 % no-repeat padding-box\",\n        boxShadow: '0px 1px 4px #15223214',\n\n    },\n    toolBarRoot: {\n        justifyContent: 'space-between',\n        '@media only screen and (max-width: 890px)': {\n            justifyContent: 'space-between'\n        }\n    },\n    // grow: {\n    //     flexGrow: 1,\n    //     // background: 'red'\n    //     '@media only screen and (max-width: 890px)': {\n    //         flexGrow: 0,\n    //     }\n    // },\n    menuButton: {\n        display: 'none',\n        marginRight: theme.spacing(2),\n        '@media only screen and (max-width: 890px)': {\n            display: 'block'\n        }\n    },\n    title: {\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade('#F0F5F7', 1),\n        '&:hover': {\n            backgroundColor: fade(\"#F0F5F7\", 0.7),\n        },\n        // marginRight: theme.spacing(2),\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(3),\n            width: 'auto',\n        },\n        color: '#8B9DA5',\n        '@media only screen and (max-width: 890px)': {\n            display: 'none'\n        },\n        marginRight: 'auto'\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        // color: '#B4C6CC'\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        background: '#1E2029',\n        padding: theme.spacing(1, 1, 1, 0),\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n            width: '30ch',\n        },\n        [theme.breakpoints.up('lg')]: {\n            width: '50ch',\n        },\n\n    },\n    sectionDesktop: {\n        display: 'none',\n        [theme.breakpoints.up('md')]: {\n            display: 'flex',\n        },\n    },\n    sectionMobile: {\n        display: 'flex',\n        [theme.breakpoints.up('md')]: {\n            display: 'none',\n        },\n    },\n    usrIcon: {\n        width: '28px',\n        height: '28px',\n        minWidth: 'auto',\n        backgroundColor: '#7e84a31c',\n        borderRadius: \"4px\"\n    },\n    userName: {\n        paddingLeft: \"10px\",\n        paddingRight: \"1rem\"\n    },\n    helpText: {\n        paddingLeft: '.5rem'\n    },\n    pr_4: {\n        paddingRight: '2rem'\n    },\n    AngleDown: {\n        color: '#B4C6CC'\n    },\n    QuestionIcon: {\n        marginRight: '7px'\n    },\n    avatarIcon: {\n        color: '#7E84A3'\n    },\n    MenuRoot: {\n        marginTop: '40px',\n\n    },\n    MenuItem: {\n        borderBottom: \".3px solid #70707045\",\n        '@media(max-width: 991px)': {\n            fontSize: '12px'\n        }\n    },\n    menuIcon: {\n        marginRight: \".90rem\",\n        '@media(max-width: 1440px)': {\n            marginRight: \".70rem\",\n        }\n    },\n    logoutText: {\n        color: '#FF6060'\n    },\n    notifiText: {\n        paddingLeft: '10px'\n    },\n    mobileHelpItem: {\n        paddingLeft: \".5rem\"\n    },\n    signupBtn: {\n        background: 'transparent',\n        border: '2px solid #1DBF73',\n        color: '#1DBF73',\n        height: 38,\n        width: 135,\n        fontSize: 15,\n        fontWeight: 700,\n\n        '@media(max-width: 575px)': {\n            width: 75,\n            height: 36,\n        },\n        '&:hover': {\n            background: \"#1DBF73!important\",\n            color: '#fff!important'\n        }\n    },\n    loginBtn: {\n        background: '#1DBF73!important',\n        height: 38,\n        width: 135,\n        color: '#fff',\n        marginLeft: '1rem',\n        fontSize: 15,\n        fontWeight: 700,\n        '@media(max-width: 575px)': {\n            width: 75,\n            height: 36,\n            marginLeft: '10px',\n        },\n\n    }\n}))\n\nexport default function LandingPageNavbar() {\n    const { width } = useWindowDimensions()\n    const classes = useStyles()\n    const [anchorEl, setAnchorEl] = React.useState(null)\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null)\n\n    const isMenuOpen = Boolean(anchorEl)\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl)\n\n    const handleProfileMenuOpen = (event) => {\n        setAnchorEl(event.currentTarget)\n    }\n\n    const handleMobileMenuClose = () => {\n        setMobileMoreAnchorEl(null)\n    }\n\n    const handleMenuClose = () => {\n        setAnchorEl(null)\n        handleMobileMenuClose()\n    }\n\n    const menuId = 'primary-search-account-menu'\n    const renderMenu = (\n        <Menu\n            anchorEl={anchorEl}\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            id={menuId}\n            keepMounted\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n            open={isMenuOpen}\n            onClose={handleMenuClose}\n            className=\"profile-dropdown\"\n\n        >\n            <MenuItem onClick={handleMenuClose} className={classes.MenuItem}>\n                <SettingIcon className={classes.menuIcon} />\n                <span>Settings</span>\n            </MenuItem>\n            <MenuItem onClick={handleMenuClose} className={classes.MenuItem}>\n                <EditProfileIcon className={classes.menuIcon} />\n                <span>Edit Profile</span>\n            </MenuItem>\n            <MenuItem onClick={handleMenuClose} className={classes.MenuItem}>\n                <LogoutIcon className={classes.menuIcon} />\n                <span className={classes.logoutText}>Logout</span>\n            </MenuItem>\n        </Menu>\n    )\n\n    const mobileMenuId = 'primary-search-account-menu-mobile'\n    const renderMobileMenu = (\n        <Menu\n            anchorEl={mobileMoreAnchorEl}\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            id={mobileMenuId}\n            keepMounted\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n            open={isMobileMenuOpen}\n            onClose={handleMobileMenuClose}\n        >\n            {/* <MenuItem>\n                <Box display='flex' alignItems=\"center\" className={classes.mobileHelpItem} >\n                    <QuestionIcon />\n                    <p className={classes.helpText}>Help</p>\n                </Box>\n            </MenuItem> */}\n            <MenuItem>\n                <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\" style={{ width: '30px', height: \"28px\" }}>\n                    <Badge color=\"secondary\" variant=\"dot\">\n                        <NotificationIcon />\n                    </Badge>\n                </IconButton>\n                <p className={classes.notifiText}>Notifications</p>\n            </MenuItem>\n\n            <MenuItem onClick={handleProfileMenuOpen}>\n                <Button className={classes.usrIcon}>\n                    <PersonOutlineIcon className={classes.avatarIcon} />\n                </Button>\n                <p className={classes.userName}>Fernando Cabral</p>\n                <KeyboardArrowDownIcon className={classes.AngleDown} />\n            </MenuItem>\n        </Menu>\n    )\n    const [menuIsOpen, setMenuIsOpen] = useState(false)\n\n    const menuButtonHandler = () => {\n        menuIsOpen ? setMenuIsOpen(false) : setMenuIsOpen(true)\n    }\n    return (\n        <Fragment>\n            {width <= 890 &&\n                <Sidebar style={{\n                    display: width <= 890 ? 'block' : undefined,\n                    zIndex: 99,\n                    height: '100vh',\n                    transition: '.5s ease',\n                    transform: menuIsOpen ? 'translateX(0)' : 'translateX(-100%)'\n                }} />}\n            {(menuIsOpen && width <= 890) && <div onClick={menuButtonHandler}\n                style={{\n                    idth: '100%',\n                    position: 'fixed',\n                    zIndex: '98',\n                    background: '#ebebeba6',\n                    top: 0,\n                    bottom: 0,\n                    left: 0,\n                    right: 0,\n                    display: width > 890 ? 'none' : undefined,\n                }}></div>}\n            <AppBar position=\"static\" className={classes.root} color='default'>\n                <Toolbar className={classes.toolBarRoot} >\n\n                    <div className=\"logo-top\" >\n                        <Logo1 />\n                    </div>\n                    {/* <div className={classes.search}>\n                        <div className={classes.searchIcon}>\n                            <SearchIcon />\n                        </div>\n                        <InputBase\n                            placeholder=\"Search…\"\n                            classes={{\n                                root: classes.inputRoot,\n                                input: classes.inputInput,\n                            }}\n                            inputProps={{ 'aria-label': 'search' }}\n                        />\n                    </div> */}\n\n                    <div className={classes.sectionDesktop}>\n                        {/* <Box display='flex' alignItems=\"center\" className={classes.pr_4}>\n                            <QuestionIcon className={classes.QuestionIcon} />\n                            <p className={classes.helpText}>Help</p>\n                        </Box> */}\n                        <Box>\n                            <Button className={classes.signupBtn}>\n                                Login\n                                <Link className=\"link\" to=\"/login\" />\n                            </Button>\n                        </Box>\n                        <Box>\n                            <Button className={classes.loginBtn}>\n                                Publish Skapp\n                                <Link className=\"link\" to=\"/login\" />\n                            </Button>\n\n                        </Box>\n                        {/* <Box display=\"flex\" alignItems=\"center\" >\n\n                        </Box> */}\n                    </div>\n                    {width <= 960 && <Box display='flex'>\n                        <Box>\n                            <Button className={classes.signupBtn}>\n                                Publish App\n                                <Link className=\"link\" to=\"/login\" />\n                            </Button>\n                        </Box>\n                        <Box>\n                            <Button className={classes.loginBtn}>\n                                Login\n                                <Link className=\"link\" to=\"/login\" />\n                            </Button>\n\n                        </Box>\n                    </Box>}\n\n                </Toolbar>\n            </AppBar>\n            {renderMobileMenu}\n            {renderMenu}\n        </Fragment>\n    )\n}","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnUserSessionAction.js",["712"],"import {\r\n  BROWSER_STORAGE,\r\n} from \"../../utils/SnConstants\"\r\nimport { ACT_TY_SET_USER_SESSION } from \"../SnActionConstants\"\r\n\r\nexport const setUserSession = (userSession) => {\r\n  return {\r\n    type: ACT_TY_SET_USER_SESSION,\r\n    payload: userSession,\r\n  }\r\n}\r\n","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\AppsComp\\Apps.js",["713","714","715","716","717","718","719","720"],"import { Box, InputBase } from \"@material-ui/core\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { useHistory } from \"react-router-dom\";\nimport UtilitiesItem from \"./UtilitiesItem\";\nimport ListFilter from \"./ListFilter\";\nimport SelectItem from \"./SelectItem\";\nimport SubmitBtn from \"./SubmitBtn\";\nimport AppsList from \"./AppsList\";\nimport useWindowDimensions from \"../../hooks/useWindowDimensions\";\n// import PerfectScrollbar from 'react-perfect-scrollbar'\nimport CustomPagination from \"./CustomPagination\";\nimport SelectedAppsHeader from \"./SelectedAppsHeader\";\nimport { getMyPublishedAppsAction } from \"../../redux/action-reducers-epic/SnPublishAppAction\";\nimport { getMyInstalledAppsAction, installedAppAction, unInstalledAppAction } from \"../../redux/action-reducers-epic/SnInstalledAppAction\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { installApp } from '../../service/SnSkappService'\nimport { setLoaderDisplay } from '../../redux/action-reducers-epic/SnLoaderAction'\nimport NoApps from '../NoApps/NoApps';\n\nconst useStyles = makeStyles((theme) => ({\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(\"#fff\", 1),\n    \"&:hover\": {\n      backgroundColor: fade(\"#fff\", 0.9),\n    },\n    marginRight: theme.spacing(2),\n    // marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(3),\n      width: \"auto\",\n    },\n    color: \"#8B9DA5\",\n    boxShadow: \"0px 1px 2px #15223214\",\n    border: \"1px solid #7070701A;\",\n    // hieght: '41px',\n    marginLeft: \"16px!important\",\n    \"@media (max-width: 1650px)\": {\n      width: \"auto\",\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    color: \"#B4C6CC\",\n  },\n  inputRoot: {\n    color: \"inherit\",\n  },\n  inputInput: {\n    // padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"100%\",\n    },\n    [theme.breakpoints.up(\"lg\")]: {\n      width: \"50ch\",\n    },\n    paddingTop: \"10px\",\n    paddingBottom: \"10px\",\n    \"@media (max-width: 1660px)\": {\n      width: \"34ch\",\n    },\n    \"@media (max-width: 1460px)\": {\n      width: \"100%\",\n    },\n  },\n\n  pageHeading: {\n    color: \"#131523\",\n    fontSize: \"28px\",\n  },\n  smallText: {\n    alignSelf: \"flex-end\",\n    color: \"#5A607F\",\n    paddingLeft: \"1rem\",\n    fontWeight: \"400\",\n  },\n  Media1249: {\n    width: \"calc(100% - 230px)\",\n    marginLeft: \"auto!important\",\n    marginRight: 0,\n    \"@media only screen and (max-width: 890px)\": {\n      width: \"100%\",\n    },\n  },\n  margnBottomMediaQuery: {\n    \"@media only screen and (max-width: 1249px)\": {\n      marginBottom: \".75rem\",\n    },\n  },\n  // PerfectScrollbarContainer: {\n  //     padding: '1rem 1.4rem',\n  //     paddingBottom: '0',\n  //     height: 'calc(100vh - 64px)',\n  //     '@media only screen and (max-width: 575px)': {\n  //         padding: '.5rem',\n  //     },\n  // },\n  // mobileSave: {\n  //     padding: '1rem 1.4rem',\n  //     paddingBottom: '0',\n  //     height: 'calc(100vh - 64px)',\n  //     overflow: \"auto\",\n  //     '@media only screen and (max-width: 575px)': {\n  //         padding: '.5rem',\n  //     },\n  // },\n  secondNavRow2: {\n    \"@media only screen and (max-width: 890px)\": {\n      justifyContent: \"space-between\",\n    },\n    \"@media only screen and (max-width: 575px) and (min-width: 509px)\": {\n      marginBottom: \".6rem\",\n    },\n    \"@media only screen and (max-width: 510px)\": {\n      flexWrap: \"wrap\",\n      \"& > div\": {\n        width: \"50%\",\n        minWidth: \"50%\",\n        maxWidth: \"50%\",\n        marginBottom: \".75rem\",\n      },\n      \"& > div:nth-child(odd)\": {\n        paddingRight: \"1rem\",\n      },\n    },\n  },\n  MobileFontStyle: {\n    \"@media only screen and (max-width: 575px) \": {\n      marginBottom: \".7rem\",\n      marginTop: \".4rem\",\n      \"& h1\": {\n        fontSize: \"18px\",\n      },\n    },\n  },\n}))\n\nfunction Apps() {\n  const dispatch = useDispatch();\n  const { publishedAppsStore } = useSelector((state) => state.snPublishedAppsStore);\n  const { installedAppsStore } = useSelector((state) => state.snInstalledAppsStore);\n  const [isLoading, setIsLoading] = useState(false);\n  const history = useHistory();\n\n  useEffect(async () => {\n    // console.log(\"came here\");\n    setIsLoading(true);\n    await dispatch(getMyPublishedAppsAction());\n    await dispatch(getMyInstalledAppsAction());\n    setIsLoading(false);\n  }, []);\n  // temp var for selected page\n  const selectedPage = false\n  // This page code\n\n  const { width } = useWindowDimensions();\n  const classes = useStyles();\n    \n  const handleInstall = async (item, key) => {\n    if (key == \"install\") {\n      dispatch(installedAppAction(item));\n    } else {\n      dispatch(unInstalledAppAction(item.id));\n    }\n  }\n\n\n  const AppsComp = (\n    <Fragment>\n      <Box display=\"flex\" className=\"second-nav\" alignItems=\"center\">\n        <Box\n          display=\"flex\"\n\n          alignItems=\"center\"\n          className={`${classes.margnBottomMediaQuery} ${classes.MobileFontStyle}`}\n        >\n          <h1 className={classes.pageHeading}>My Published Apps</h1>\n          <small className={classes.smallText}>{publishedAppsStore.length} Results</small>\n        </Box>\n        {width < 1250 && (\n          //remove the style property to show it again, in future\n          <div\n            className={`${classes.search} ${classes.Media1249} ${classes.margnBottomMediaQuery}`}\n            style={{ display: 'none' }}\n          >\n            <Box>\n              <div className={classes.searchIcon}>\n                <SearchIcon />\n              </div>\n            </Box>\n            <InputBase\n              placeholder=\"Search Apps\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ \"aria-label\": \"search\" }}\n            />\n          </div>\n        )}\n        <Box\n          className={classes.secondNavRow2}\n          display=\"flex\"\n          alignItems=\"center\"\n          flex={1}\n          justifyContent=\"flex-end\"\n        >\n          {/* <Box>\n            <UtilitiesItem />\n          </Box> */}\n\n          {width > 1249 && (\n            //remove the style property to show it again, in future\n            <div className={classes.search} style={{ display: 'none' }}>\n              <Box>\n                <div className={classes.searchIcon}>\n                  <SearchIcon />\n                </div>\n              </Box>\n              <InputBase\n                placeholder=\"Search Apps\"\n                classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput,\n                }}\n                inputProps={{ \"aria-label\": \"search\" }}\n              />\n            </div>\n          )}\n          {/* <Box>\n            <ListFilter />\n          </Box> */}\n          <Box>\n            {selectedPage && <SelectItem />}\n          </Box>\n          <Box>\n            <SubmitBtn onClick={(e) => history.push('/submitapp')}>Publish App</SubmitBtn>\n          </Box>\n        </Box>\n      </Box>\n      {/* When items are selectable */}\n      {selectedPage && <SelectedAppsHeader />}\n      { !isLoading && publishedAppsStore.length > 0 ?\n        <div>\n          <AppsList newData={publishedAppsStore} installedApps={installedAppsStore} updated={undefined} handleInstall={handleInstall}/>\n        </div>\n        : <NoApps showTitle={true} pageTitle=\"My Published Apps\" heading=\"No Published Apps to display\" pharase=\"Publish your App using 'Publish App' BUTTON\" />\n      }\n      {/* <Box paddingTop=\"1.2rem\" paddingBottom=\"1rem\">\n        <CustomPagination />\n      </Box> */}\n    </Fragment>\n  )\n  const finalComp = (publishedAppsStore.length ? AppsComp : (<NoApps\n    msg='No Published Apps to display in AppStore. Publish your App using \"Publish App\" BUTTON '\n    btnText=\"Publish App\"\n    pageType=\"Published\"\n    link=\"/submitapp\"\n  />))\n  return (\n    // (width < 575)\n    //     ? <div className={classes.mobileSave}>{AppsComp}</div>\n    //     : < PerfectScrollbar className={classes.PerfectScrollbarContainer} >{AppsComp}</PerfectScrollbar>\n    // <div>{AppsComp}\n    <>\n\n      { finalComp}\n\n    </>\n  )\n}\n\nexport default Apps\n","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\AppsComp\\InstalledApps.js",["721","722","723","724","725","726","727","728","729","730","731","732"],"import { Box, Button, Grid, InputBase } from '@material-ui/core'\nimport React, { Fragment, useEffect, useState } from 'react'\nimport { fade, makeStyles } from '@material-ui/core/styles'\nimport SearchIcon from '@material-ui/icons/Search'\n\nimport ListFilter from './ListFilter'\nimport SelectItem from './SelectItem'\nimport useWindowDimensions from '../../hooks/useWindowDimensions'\n\nimport AppCard from './AppCard'\nimport styles from \"../../assets/jss/apps/AppListStyle\"\nimport { getMyInstalledApps, installApp } from '../../service/SnSkappService'\nimport { setLoaderDisplay } from '../../redux/action-reducers-epic/SnLoaderAction'\nimport { useDispatch, useSelector } from 'react-redux';\nimport AppsList from \"./AppsList\";\nimport { getMyInstalledAppsAction, installedAppAction, unInstalledAppAction } from \"../../redux/action-reducers-epic/SnInstalledAppAction\";\nimport NoApp from '../NoApps/NoApps';\n\nconst useStyles = makeStyles(theme => (\n    {\n        search: {\n            position: 'relative',\n            borderRadius: theme.shape.borderRadius,\n            backgroundColor: fade('#fff', 1),\n            '&:hover': {\n                backgroundColor: fade(\"#fff\", 0.9),\n            },\n            marginRight: theme.spacing(2),\n            // marginLeft: 0,\n            width: '100%',\n            [theme.breakpoints.up('sm')]: {\n                marginLeft: theme.spacing(3),\n                width: 'auto',\n            },\n            color: '#8B9DA5',\n            boxShadow: '0px 1px 2px #15223214',\n            border: '1px solid #7070701A;',\n            // hieght: '41px',\n            marginLeft: '16px!important',\n            '@media (max-width: 1650px)': {\n                width: 'auto'\n            },\n\n        },\n        searchIcon: {\n            padding: theme.spacing(0, 2),\n            height: '100%',\n            position: 'absolute',\n            pointerEvents: 'none',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            color: '#B4C6CC'\n        },\n        inputRoot: {\n            color: 'inherit',\n        },\n        inputInput: {\n\n            paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n            transition: theme.transitions.create('width'),\n            width: '100%',\n            [theme.breakpoints.up('md')]: {\n                width: '100%',\n            },\n            [theme.breakpoints.up('lg')]: {\n                width: '20ch',\n            },\n            paddingTop: '10px',\n            paddingBottom: '10px',\n            '@media (max-width: 1660px)': {\n                width: '34ch'\n            },\n            '@media (max-width: 1460px)': {\n                width: '100%'\n            }\n\n        },\n\n        pageHeading: {\n            color: '#131523',\n            fontSize: '28px',\n        },\n        smallText: {\n            alignSelf: \"flex-end\",\n            color: '#5A607F',\n            paddingLeft: '1rem',\n            fontWeight: '400'\n        },\n        Media1249: {\n            width: 'calc(100% - 230px)',\n            marginLeft: 'auto!important',\n            marginRight: 0,\n            '@media only screen and (max-width: 890px)': {\n                width: '100%',\n            },\n\n        },\n        margnBottomMediaQuery: {\n            '@media only screen and (max-width: 1249px)': {\n                marginBottom: '.75rem'\n            },\n\n\n        },\n\n        secondNavRow2: {\n            '@media only screen and (max-width: 890px)': {\n                justifyContent: 'space-between'\n            },\n            '@media only screen and (max-width: 575px) and (min-width: 509px)': {\n                marginBottom: '.6rem'\n            }\n            , '@media only screen and (max-width: 510px)': {\n                flexWrap: 'wrap',\n                \"& > div\": {\n                    width: '50%',\n                    minWidth: '50%',\n                    maxWidth: '50%',\n                    marginBottom: '.75rem'\n                },\n                \"& > div:nth-child(odd)\": {\n                    paddingLeft: '1rem'\n\n                }\n            },\n        },\n        MobileFontStyle: {\n            '@media only screen and (max-width: 575px) ': {\n                marginBottom: '.7rem',\n                marginTop: '.4rem',\n                '& h1': {\n                    fontSize: '18px'\n                }\n            }\n        },\n        ...styles,\n        btnSecondNav: {\n            color: '#7E84A3',\n            backgroundColor: '#fff!important',\n            boxShadow: '0px 1px 2px #15223214',\n            border: '1px solid #7070701A',\n            borderRadius: 4\n        },\n        btnSecondNavContainer: {\n            marginLeft: '1rem',\n            [theme.breakpoints.down('sm')]: {\n                display: 'none'\n            },\n        }\n    }\n))\nfunction InstalledApps() {\n    // temp var for selected page\n    // const selectedPage = true\n\n    const { width } = useWindowDimensions();\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    const [installedAppListObj, setInstalledAppListObj] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    // const [searchStr, setSearchStr] = useState(\"\");\n\n    const { installedAppsStore } = useSelector((state) => state.snInstalledAppsStore);\n    useEffect(() => {\n        setIsLoading(true);\n        dispatch(getMyInstalledAppsAction());\n        setIsLoading(false);\n    }, []);\n\n    const handleInstall = async (item, key) => {\n        if (key == \"install\") {\n            dispatch(installedAppAction(item));\n        } else {\n            dispatch(unInstalledAppAction(item.id));\n        }\n    }\n\n    return (\n        <Fragment>\n            {\n                !isLoading && installedAppsStore.length > 0 ?\n                    <Fragment>\n                        <Box display=\"flex\" className='second-nav' alignItems=\"center\">\n                            <Box display=\"flex\" alignItems=\"center\" className={`${classes.margnBottomMediaQuery} ${classes.MobileFontStyle}`}>\n                                <h1 className={classes.pageHeading}>Apps</h1>\n                                <small className={classes.smallText}>{installedAppsStore.length} Results</small>\n                            </Box>\n                            {width < 1250 && <div className={`${classes.search} ${classes.Media1249} ${classes.margnBottomMediaQuery}`}>\n                                <Box>\n                                    <div className={classes.searchIcon}>\n                                        <SearchIcon />\n                                    </div>\n                                </Box>\n                                <InputBase\n                                    placeholder=\"Search Apps\"\n                                    classes={{\n                                        root: classes.inputRoot,\n                                        input: classes.inputInput,\n                                    }}\n                                    inputProps={{ 'aria-label': 'search' }}\n                                />\n                            </div>}\n                            <Box className={classes.secondNavRow2} display=\"flex\" alignItems=\"center\" flex={1} justifyContent='flex-end'>\n\n                                {/* <Box className={classes.btnSecondNavContainer}>\n                                    <Button className={classes.btnSecondNav} style={{ color: '#000' }}> All (50)</Button>\n                                </Box>\n                                <Box className={classes.btnSecondNavContainer}>\n                                    <Button className={classes.btnSecondNav} > Programms (12)</Button>\n                                </Box>\n                                <Box className={classes.btnSecondNavContainer}>\n                                    <Button className={classes.btnSecondNav}>Utilities (25)</Button>\n                                </Box> */}\n                                {width > 1249 && <div className={classes.search}>\n                                    <Box>\n                                        <div className={classes.searchIcon}>\n                                            <SearchIcon />\n                                        </div>\n                                    </Box>\n                                    <InputBase\n                                        placeholder=\"Search Apps\"\n                                        classes={{\n                                            root: classes.inputRoot,\n                                            input: classes.inputInput,\n                                        }}\n                                        inputProps={{ 'aria-label': 'search' }}\n                                    />\n                                </div>}\n                                {/* <Box>\n                                    <ListFilter />\n                                </Box>\n                                <Box>\n                                    <SelectItem />\n                                </Box> */}\n\n                            </Box>\n                        </Box>\n                        {/* When items are selectable */}\n                        {/* {selectedPage && <SelectedAppsHeader />} */}\n\n                        <div className={`${classes.listContain} list-grid-container`}>\n                            <AppsList newData={installedAppsStore} installedApps={installedAppsStore} updated={true} handleInstall={handleInstall} />\n                        </div>\n                    </Fragment>\n                :   <NoApp />\n            }\n        </Fragment>\n    )\n}\n\nexport default InstalledApps\n","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\AppsComp\\AppStore.js",["733","734","735","736","737","738","739","740","741","742","743","744","745"],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\ErrorPage\\Error.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\Hosting\\Hosting.js",["746","747"],"import React, { Fragment, useEffect, useState } from 'react'\nimport { Box, InputBase, Typography, Button } from '@material-ui/core'\nimport { useHistory } from \"react-router-dom\";\nimport { fade, makeStyles } from '@material-ui/core/styles'\nimport SearchIcon from '@material-ui/icons/Search'\nimport UtilitiesItem from '../AppsComp/UtilitiesItem'\nimport ListFilter from '../AppsComp/ListFilter'\nimport SubmitBtn from '../AppsComp/SubmitBtn'\nimport useWindowDimensions from '../../hooks/useWindowDimensions'\nimport HostingItem from './HostingItem'\nimport AddNewSite from './AddNewSiteBtn'\nimport { getMyHostedApps, deleteMyHostedApp } from '../../service/SnSkappService';\nimport SnInfoModal from '../Modals/SnInfoModal';\nimport { isStrInObj } from '../../utils/SnUtility';\nimport { useDispatch } from 'react-redux';\nimport { setLoaderDisplay } from '../../redux/action-reducers-epic/SnLoaderAction';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\n\nconst useStyles = makeStyles(theme => (\n    {\n        search: {\n            position: 'relative',\n            borderRadius: theme.shape.borderRadius,\n            backgroundColor: fade('#fff', 1),\n            '&:hover': {\n                backgroundColor: fade(\"#fff\", 0.9),\n            },\n            marginRight: theme.spacing(2),\n            width: '100%',\n            [theme.breakpoints.up('sm')]: {\n                marginLeft: theme.spacing(3),\n                width: 'auto',\n            },\n            color: '#8B9DA5',\n            boxShadow: '0px 1px 2px #15223214',\n            border: '1px solid #7070701A;',\n\n            marginLeft: '16px!important',\n            '@media (max-width: 1650px)': {\n                width: 'auto'\n            },\n\n        },\n        modal: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n        },\n        closeBtn: {\n            border: '1px solid #1DBF73',\n            borderRadius: '5px',\n            boxShadow: '0px 2px 5px #15223221',\n            height: 48,\n            marginTop: '2rem',\n            textTransform: 'none'\n        },\n        okBtn: {\n            border: '1px solid #ea052f',\n            marginRight: '10px',\n            borderRadius: '5px',\n            boxShadow: '0px 2px 5px #15223221',\n            height: 48,\n            marginTop: '2rem',\n            textTransform: 'none'\n        },\n        modalTitle: {\n            fontSize: 32,\n            color: '#333333',\n            fontWeight: 700,\n            marginBottom: '1rem'\n        },\n        shareCardContainer: {\n            background: '#fff',\n            boxShadow: '0px 2px 5px #15223221',\n            borderRadius: 15,\n            padding: '48px 60px',\n            '@media only screen and (max-width: 575px)': {\n                padding: '40px 20px',\n                paddingTop: '50px'\n            },\n            '&:focus': {\n                outline: 0,\n                border: 0\n            },\n            width: '90%',\n            maxWidth: 500,\n            '& p': {\n                color: '#5A607F',\n                marginBottom: '5px'\n            },\n            '& .s-links-title': {\n                marginTop: '.4rem'\n            },\n            '& a': {\n                marginRight: '1rem',\n                '&:focus': {\n                    textDecoration: 'none',\n                    opacity: .8,\n                    transition: '.25s ease'\n                }\n            }\n    \n        },\n        searchIcon: {\n            padding: theme.spacing(0, 2),\n            height: '100%',\n            position: 'absolute',\n            pointerEvents: 'none',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            color: '#B4C6CC'\n        },\n        inputRoot: {\n            color: 'inherit',\n        },\n        inputInput: {\n            paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n            transition: theme.transitions.create('width'),\n            width: '100%',\n            [theme.breakpoints.up('md')]: {\n                width: '100%',\n            },\n            [theme.breakpoints.up('lg')]: {\n                width: '50ch',\n            },\n            paddingTop: '10px',\n            paddingBottom: '10px',\n            '@media (max-width: 1660px)': {\n                width: '34ch'\n            },\n            '@media (max-width: 1460px)': {\n                width: '100%'\n            }\n\n        },\n\n        pageHeading: {\n            color: '#131523',\n            fontSize: '28px',\n        },\n        smallText: {\n            alignSelf: \"flex-end\",\n            color: '#5A607F',\n            paddingLeft: '1rem',\n            fontWeight: '400'\n        },\n        Media1249: {\n            width: 'calc(100% - 230px)',\n            marginLeft: 'auto!important',\n            marginRight: 0,\n            '@media only screen and (max-width: 890px)': {\n                width: '100%',\n            },\n\n        },\n        margnBottomMediaQuery: {\n            '@media only screen and (max-width: 1249px)': {\n                marginBottom: '.75rem'\n            },\n\n\n        },\n\n        secondNavRow2: {\n            '@media only screen and (max-width: 890px)': {\n                justifyContent: 'space-between'\n            },\n            '@media only screen and (max-width: 575px) and (min-width: 509px)': {\n                marginBottom: '.6rem'\n            }\n            , '@media only screen and (max-width: 510px)': {\n                flexWrap: 'wrap',\n                \"& > div\": {\n                    width: '50%',\n                    minWidth: '50%',\n                    maxWidth: '50%',\n                    marginBottom: '.75rem'\n                },\n                \"& > div:nth-child(odd)\": {\n                    paddingRight: '1rem'\n\n                }\n            },\n        },\n        MobileFontStyle: {\n            '@media only screen and (max-width: 575px) ': {\n                marginBottom: '.7rem',\n                marginTop: '.4rem',\n                '& h1': {\n                    fontSize: '18px'\n                }\n            }\n        }\n\n    }\n))\nfunction Hosting() {\n\n    const { width } = useWindowDimensions()\n    const classes = useStyles()\n    let history = useHistory();\n    const dispatch = useDispatch();\n    \n    const [hostedAppListObj, setHostedAppListObj] = useState();\n    const [searchStr, setSearchStr] = useState(\"\");\n    const [isDelete, setIsDelete] = useState(false);\n    const [selectedApp, setAppForDelete] = useState(null);\n    const [showInfoModal, setShowInfoModal] = useState(false);\n    const [infoModalTitle, setInfoModalTitle] = useState(\"\");\n    const [infoModalContent, setInfoModalContent] = useState(\"\");\n    const [infoModalShowCopyToClipboard, setInfoModalShowCopyToClipboard] = useState(false);\n    const [infoModalClipboardTooltip, setInfoModalClipboardTooltip] = useState(\"\");\n\n    useEffect(() => {\n        loadHostedApps();\n    }, []);\n\n    const loadHostedApps = async () => {\n        dispatch(setLoaderDisplay(true));\n        const hostedAppListObj = await getMyHostedApps([]);\n        setHostedAppListObj(hostedAppListObj);\n        dispatch(setLoaderDisplay(false));\n    };\n\n    const filterApps = (searchStr, app) => isStrInObj(searchStr, app);\n\n    const handleClose = () => {\n        setIsDelete(false);\n    }\n    \n    const handleOpen = (app, appId) => {\n        app['appId'] = appId;\n        setAppForDelete(app);\n        setIsDelete(true);\n    }\n    \n    const handleDelete = async () => {\n        dispatch(setLoaderDisplay(true));\n        setIsDelete(false);\n        const check = await deleteMyHostedApp(selectedApp.appId);\n        dispatch(setLoaderDisplay(false));\n        setInfoModalParams({\n            title: check ? `Success` : `Error`,\n            content: check ? `Site Deleted Successfully!` : `Unexpected Error occured`,\n            showClipboardCopy: false,\n        });\n    }\n\n    const setInfoModalParams = ({ title, content, showClipboardCopy = false, clipboardCopyTooltip, open = true }) => {\n        setInfoModalContent(content);\n        setInfoModalTitle(title);\n        setInfoModalShowCopyToClipboard(showClipboardCopy);\n        setInfoModalClipboardTooltip(clipboardCopyTooltip);\n        setShowInfoModal(open);\n    };\n\n    const onInfoModalClose = () => {\n        setInfoModalParams({ open: false });\n        loadHostedApps();\n    };\n    \n    return (\n\n        <Fragment >\n            <Box display=\"flex\" className='second-nav' alignItems=\"center\">\n                <Box display=\"flex\" alignItems=\"center\" className={`${classes.margnBottomMediaQuery} ${classes.MobileFontStyle}`}>\n                    <h1 className={classes.pageHeading}>Hosting</h1>\n                </Box>\n                {width < 1250 && <div className={`${classes.search} ${classes.Media1249} ${classes.margnBottomMediaQuery}`}>\n                    <Box>\n                        <div className={classes.searchIcon}>\n                            <SearchIcon />\n                        </div>\n                    </Box>\n                    <InputBase\n                        placeholder=\"Search Apps\"\n                        classes={{\n                            root: classes.inputRoot,\n                            input: classes.inputInput,\n                        }}\n                        inputProps={{ 'aria-label': 'search' }}\n                    />\n                </div>}\n                <Box className={classes.secondNavRow2} display=\"flex\" alignItems=\"center\" flex={1} justifyContent='flex-end'>\n                    <Box className=\"d-none temp\">\n                        <UtilitiesItem />\n                    </Box>\n\n                    {width > 1249 && <div className={classes.search + \" d-none temp\"}>\n                        <Box>\n                            <div className={classes.searchIcon}>\n                                <SearchIcon />\n                            </div>\n                        </Box>\n                        <InputBase\n                            placeholder=\"Search Apps\"\n                            classes={{\n                                root: classes.inputRoot,\n                                input: classes.inputInput,\n                            }}\n                            inputProps={{ 'aria-label': 'search' }}\n                            onChange={(evt)=>setSearchStr(evt.target.value)}\n                        />\n                    </div>}\n                    <Box className=\"d-none temp\">\n                        <ListFilter />\n                    </Box>\n\n                    <Box>\n                        <SubmitBtn addSite={true} styles={{ justifyContent: \"space-around\" }}\n                            onClick={() => history.push(\"/submitsite\")}>\n                            Add Site\n                    </SubmitBtn>\n                    </Box>\n                </Box>\n\n            </Box>\n            <Box marginTop=\"1rem\">\n                {hostedAppListObj?.appDetailsList &&\n                    (Object.keys(hostedAppListObj.appDetailsList))\n                    .filter((appId)=>filterApps(searchStr, hostedAppListObj.appDetailsList[appId]))\n                    .sort((appId1, appId2)=>(hostedAppListObj.appDetailsList[appId2].ts-hostedAppListObj.appDetailsList[appId1].ts))\n                    .map((appId, idx) =>\n                        hostedAppListObj.appDetailsList[appId] && <HostingItem handleOpen={handleOpen} key={idx} ActiveSite={true} id={appId} app={hostedAppListObj.appDetailsList[appId]} />\n                    )}\n                <AddNewSite onClick={() => history.push(\"/submitsite\")} />\n            </Box>\n\n            <Modal\n                aria-labelledby=\"transition-modal-title\"\n                aria-describedby=\"transition-modal-description\"\n                className={classes.modal}\n                open={false || isDelete}\n                onClose={handleClose}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                    timeout: 500,\n                }}\n            >\n                <Fade in={isDelete}>\n                    <Box className={classes.shareCardContainer}>\n                        <Typography component='h2' className={classes.modalTitle}>\n                            Confirm Delete\n                        </Typography>\n                        <Typography component=\"p\">\n                            Do you want to delete { selectedApp ? `${selectedApp.appName}`: ''}?\n                        </Typography>\n                        <Box style={{ textAlign: 'right' }}>\n                            <Button onClick={handleDelete} className={classes.okBtn}>\n                                Ok\n                            </Button>\n                            <Button onClick={handleClose} className={classes.closeBtn}>\n                                Cancel\n                            </Button>\n                        </Box>\n                    </Box>\n                </Fade>\n            </Modal>\n            \n            <SnInfoModal\n                open={showInfoModal}\n                onClose={onInfoModalClose}\n                title={infoModalTitle}\n                content={infoModalContent}\n                showClipboardCopy={infoModalShowCopyToClipboard}\n            />\n        </Fragment>\n    )\n}\n\nexport default Hosting\n","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\Hosting\\SubmitNewSite.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\NoApps\\NoApps.js",["748","749","750"],"import React, { Fragment } from 'react'\r\nimport { Box, Button, makeStyles } from '@material-ui/core'\r\nimport { Link } from 'react-router-dom'\r\nimport styles from '../../assets/jss/no-apps/NoAppsStyle'\r\nimport { ReactComponent as RoundedBoxs } from '../../assets/img/icons/roundedBoxs.svg'\r\nimport { userProfileDacTest } from '../../service/dac/userprofile-api'\r\nimport { useSelector } from \"react-redux\"\r\nconst useStyles = makeStyles(styles)\r\nconst NoApps = ({ pageTitle, heading, pharase, showTitle }) => {\r\n// const NoApps = ({ btnText, pageType, msg, link }) => {\r\n\r\n    const classes = useStyles()\r\n\r\n    const stUserSession = useSelector((state) => state.userSession)    \r\n\r\n    return (\r\n        <Fragment>\r\n            { !showTitle ? <h1 className={classes.h1}> { pageTitle ? pageTitle : `My Apps`} </h1> : null }\r\n            <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" minHeight=\"calc(100vh - 200px)\" flexDirection=\"column\" paddingTop=\"1rem\" paddingBottom=\"1rem\">\r\n                <div className={classes.boxIcon}>\r\n                    <RoundedBoxs />\r\n                </div>\r\n                <h2 className={classes.h2}>{ heading ? heading : `No apps installed`}</h2>\r\n                <p className={classes.p}>{pharase ? pharase : `Go to app store, Explore apps and install`}</p>\r\n                {/* <Button className={classes.button}  onClick={() => userProfileDacTest(stUserSession)}> */}\r\n                <Button className={classes.button} >\r\n                    Discover Apps\r\n\r\n      {/* <h2 className={classes.h2}>No apps {pageType}</h2>\r\n                <p className={classes.p}>{msg}</p>\r\n                <Button className={classes.button}>\r\n                    {btnText}\r\n                    <Link className=\"link\" to={link}></Link> */}\r\n\r\n                </Button>\r\n            </Box>\r\n        </Fragment>\r\n    )\r\n}\r\nexport default NoApps\r\n","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\SubmitApp\\EditPublishApp.js",["751","752","753","754","755","756","757","758","759","760","761","762"],"import React, { createRef, useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  makeStyles,\r\n  Grid,\r\n  TextareaAutosize,\r\n  Tooltip \r\n} from \"@material-ui/core\";\r\nimport Select from \"react-select\";\r\nimport { Add, HelpOutline } from \"@material-ui/icons\";\r\nimport styles from \"../../assets/jss/app-details/SubmitAppStyles\";\r\n// img icon\r\nimport { ReactComponent as ImgIcon } from \"../../assets/img/icons/image.svg\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// importing action\r\nimport {\r\n  publishAppAction,\r\n} from \"../../redux/action-reducers-epic/SnPublishAppAction\";\r\nimport {\r\n  UploadImagesAction,\r\n  UploadVideoAction,\r\n  UploadAppLogo,\r\n  getMyHostedApps,\r\n} from \"../../service/SnSkappService\";\r\nimport TagsInput from \"react-tagsinput\";\r\nimport \"./taginput.css\"; // If using WebPack and style-loader.\r\nimport imageCompression from \"browser-image-compression\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { setLoaderDisplay } from \"../../redux/action-reducers-epic/SnLoaderAction\";\r\nimport { useLoadHostedAppFromUrl } from \"../../hooks/useLoadHostedAppFromUrl\";\r\nimport { skylinkToUrl } from \"../../utils/SnUtility\";\r\nimport SnUpload from '../../uploadUtil/SnUpload';\r\nimport { UPLOAD_SOURCE_DEPLOY, UPLOAD_SOURCE_NEW_HOSTING, UPLOAD_SOURCE_NEW_HOSTING_IMG } from '../../utils/SnConstants';\r\nimport { getMyPublishedAppsAction } from \"../../redux/action-reducers-epic/SnPublishAppAction\";\r\n\r\nconst useStyles = makeStyles(styles);\r\nconst optionsVersion = [\r\n  { value: \"1.0\", label: \"1.0\" },\r\n  { value: \"1.01\", label: \"1.01\" },\r\n  { value: \"1.02\", label: \"1.02\" },\r\n];\r\n\r\nconst appCatOptions = [\r\n  { value: \"Social\", label: \"Social\" },\r\n  { value: \"Video\", label: \"Video\" },\r\n  { value: \"Pictures\", label: \"Pictures\" },\r\n  { value: \"Music\", label: \"Music\" },\r\n  { value: \"Productivity\", label: \"Productivity\" },\r\n  { value: \"Utilities\", label: \"Utilities\" },\r\n  { value: \"Games\", label: \"Games\" },\r\n  { value: \"Blogs\", label: \"Blogs\" },\r\n  { value: \"Software\", label: \"Software\" },\r\n  { value: \"DAC\", label: \"DataAccessControl\" },\r\n  { value: \"Livestream\", label: \"Livestream\" },\r\n  { value: \"Books\", label: \"Books\" },\r\n  { value: \"Marketplace\", label: \"Marketplace\" },\r\n  { value: \"Finance\", label: \"Finance\" },\r\n  { value: \"Portal\", label: \"Portal\" },\r\n];\r\n\r\nconst optionsAge = [\r\n  { value: \"18+\", label: \"18+\" },\r\n  { value: \"general\", label: \"general\" },\r\n];\r\n\r\nconst appStatusOptions = [\r\n  { value: \"Alpha\", label: \"Alpha\" },\r\n  { value: \"Beta\", label: \"Beta\" },\r\n  { value: \"Live\", label: \"Live\" },\r\n];\r\n\r\nconst socialOption = [\r\n  { value: \"Discord\", label: \"Discord\" },\r\n  { value: \"Reddit\", label: \"Reddit\" },\r\n  { value: \"Twitter\", label: \"Twitter\" },\r\n  { value: \"Dlink\", label: \"Dlink\" },\r\n];\r\n\r\nconst reactSelectStyles = {\r\n  control: (styles) => ({\r\n    ...styles,\r\n    backgroundColor: \"white\",\r\n    height: 55,\r\n    boxShadow: 0,\r\n    borderColor: \"#D9E1EC\",\r\n    color: \"#000\",\r\n    borderRadius: 8,\r\n    \"@media only screen and (max-width: 1440px)\": {\r\n      height: 50,\r\n      // width: '100%',\r\n      fontSize: 16,\r\n    },\r\n    \"@media only screen and (max-width: 575px)\": {\r\n      height: 43,\r\n      // width: '100%',\r\n      fontSize: 14,\r\n    },\r\n    \"&:hover\": {\r\n      borderColor: \"#1DBF73\",\r\n    },\r\n  }),\r\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => ({\r\n    ...styles,\r\n    backgroundColor: isSelected ? \"#1DBF73\" : \"#fff\",\r\n    \"&:foucs\": {\r\n      backgroundColor: \"#1DBF73\",\r\n    },\r\n  }),\r\n};\r\n\r\nlet forImagesPreview = [];\r\nconst EditPublishApp = () => {\r\n  const [category, setCategory] = useState(\"\");\r\n  const [appStatus, setAppStatus] = useState(\"\");\r\n  const [age, setAge] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const [tags, setTags] = useState([]);\r\n  const { register, handleSubmit, control, setValue } = useForm();\r\n  const classes = useStyles();\r\n\r\n  const { appId } = useParams();\r\n  const history = useHistory();\r\n\r\n  // state for social links according to format\r\n  const [firstSocialLinkTitle, setfirstSocialLinkTitle] = useState(\"\");\r\n  const [secondSocialLinkTitle, setSecondSocialLinkTitle] = useState(\"\");\r\n  const [thirdSocialLinkTitle, setThirdSocialLinkTitle] = useState(\"\");\r\n  const [appDetail, setAppDetail] = useState({});\r\n\r\n  const [firstSocialLink, setfirstSocialLink] = useState(\"\");\r\n  const [secondSocialLink, setSecondSocialLink] = useState(\"\");\r\n  const [thirdSocialLink, setThirdSocialLink] = useState(\"\");\r\n\r\n  const [videoObjt, setVideoObj] = useState({});\r\n\r\n  const [mandatory, setMandatory] = useState(false);\r\n  const [isSubmit, setIsSubmit] = useState(false);\r\n  const [isImageUploadFirst1, setIsImageUploadingFirst1] = useState(false);\r\n  const [isImageUploadFirst, setIsImageUploadingFirst] = useState(false);\r\n  const [isImageUploadSecond, setIsImageUploadingSecond] = useState(false);\r\n  const [isImageUploadThird, setIsImageUploadingThird] = useState(false);\r\n  const [isImageUploadFirstObj1, setIsImageUploadingFirstObj1] = useState({});\r\n  const [isImageUploadFirstObj, setIsImageUploadingFirstObj] = useState({});\r\n  const [isImageUploadSecondObj, setIsImageUploadingSecondObj] = useState({});\r\n  const [isImageUploadThirdObj, setIsImageUploadingThirdObj] = useState({});\r\n\r\n\r\n  const [appLogo, setAppLogo] = useState(\"\");\r\n  const [isLogoUploaded, setIsLogoUploaded] = useState(false);\r\n\r\n  //require\r\n  const [isAppLogoTrue, setIsAppLogoTrue] = useState(false);\r\n  const [isAppNameTrue, setIsAppNameTrue] = useState(false);\r\n  const [isAppVersionTrue, setIsAppVersionTrue] = useState(false);\r\n  const [isAppUrlTrue, setIsAppUrlTrue] = useState(false);\r\n  const [isAppCatTrue, setIsAppCatTrue] = useState(false);\r\n  const [isAppDetailDesTrue, setIsAppDetailDesTrue] = useState(false);\r\n\r\n  const imgUploadEleRef = createRef();\r\n  const imgUploadEleRef1 = createRef();\r\n  const imgUploadEleRef2 = createRef();\r\n  const imgUploadEleRef3 = createRef();\r\n  const imgUploadEleRef4 = createRef();\r\n  \r\n  const { publishedAppsStore } = useSelector((state) => state.snPublishedAppsStore);\r\n\r\n  useEffect(async () => {\r\n    await dispatch(getMyPublishedAppsAction()); \r\n    if (publishedAppsStore) {\r\n        let appJSON = publishedAppsStore.find(appData => appData.id === appId);\r\n        if(appJSON) {\r\n            await setAppDetail(appJSON);\r\n            if (appJSON?.content) {\r\n                const { appname, sourceCode, appUrl, previewVideo, previewImages, skappLogo, demoUrl, category, age, appStatus, tags, connections, appDescription, releaseNotes } = appJSON.content;\r\n                setValue('appname', appname);\r\n                setValue('sourceCode', sourceCode);\r\n                setValue('appUrl', appUrl);\r\n                setValue('applogo', skappLogo);\r\n                setValue('verson', appJSON.version);\r\n                setValue(\"demoUrl\", demoUrl);\r\n                setAge({ label: age, value: age });\r\n                setAppStatus({ label: appStatus, value: appStatus });\r\n                setCategory({ label: category, value: category });\r\n                setVideoObj(previewVideo);\r\n                setAppLogo(skappLogo);\r\n                setTags(tags);\r\n                if (previewImages.images[0]) {\r\n                  setIsImageUploadingFirstObj1(previewImages.images[0]);\r\n                }\r\n                if (previewImages.images[1]) {\r\n                  setIsImageUploadingFirstObj(previewImages.images[1]);\r\n                }\r\n                if (previewImages.images[2]) {\r\n                  setIsImageUploadingSecondObj(previewImages.images[2]);\r\n                }\r\n                if (previewImages.images[3]) {\r\n                  setIsImageUploadingThirdObj(previewImages.images[3]);\r\n                }\r\n                if (Object.keys(connections)[0]) {\r\n                  setfirstSocialLinkTitle({value: Object.keys(connections)[0], label: Object.keys(connections)[0]});\r\n                }\r\n          \r\n                if (Object.keys(connections)[1]) {\r\n                    setSecondSocialLinkTitle({value: Object.keys(connections)[1], label: Object.keys(connections)[1]});\r\n                }\r\n          \r\n                if (Object.keys(connections)[2]) {\r\n                    setThirdSocialLinkTitle({value: Object.keys(connections)[0], label: Object.keys(connections)[2]});\r\n                }\r\n                setfirstSocialLink(connections[Object.keys(connections)[0]] ? connections[Object.keys(connections)[0]]: \"\");\r\n                setSecondSocialLink(connections[Object.keys(connections)[1]] ? connections[Object.keys(connections)[1]] : \"\");\r\n                setThirdSocialLink(connections[Object.keys(connections)[2]] ? connections[Object.keys(connections)[2]] : \"\");\r\n                setValue('appDescription', appDescription);\r\n                setValue('releaseNotes', releaseNotes);\r\n            }\r\n        }\r\n    }\r\n  }, []);\r\n\r\n  const handleReset = () => {\r\n    history.goBack();\r\n  }\r\n\r\n  //manage loader to upload images\r\n  //form submit function\r\n  const onSubmit = (data) => {\r\n  console.log(\"🚀 ~ file: SubmitApp.js ~ line 167 ~ onSubmit ~ data\", data)\r\n    if (appLogo === \"\" && appDetail?.content.imgThumbnailSkylink == \"\") {\r\n      setIsAppLogoTrue(true);\r\n      // setMandatory(true);\r\n    } else if (data.appname === \"\") {\r\n      setIsAppNameTrue(true);\r\n    } else if (data.verson === \"\") {\r\n      setIsAppVersionTrue(true);\r\n    } else if (data.appUrl === \"\") {\r\n      setIsAppUrlTrue(true);\r\n    } else if (!category) {\r\n      setIsAppCatTrue(true);\r\n    } else if (data.appDescription === \"\") {\r\n      setIsAppDetailDesTrue(true);\r\n    } else {\r\n      setIsSubmit(true);\r\n      setMandatory(true);\r\n      dispatch(setLoaderDisplay(true))\r\n      let obj = {\r\n        $type: \"skapp\",\r\n        $subtype: \"published\",\r\n        id: appDetail?.id || uuidv4(),\r\n        version: data.verson,\r\n        ts: new Date().getTime(),\r\n        content: data,\r\n      };\r\n      let forImagesPreviewObj = [];\r\n      if (Object.keys(isImageUploadFirstObj1).length) {\r\n        forImagesPreviewObj.push(isImageUploadFirstObj1);\r\n      } \r\n      if (Object.keys(isImageUploadFirstObj).length) {\r\n        forImagesPreviewObj.push(isImageUploadFirstObj);\r\n      } \r\n      if (Object.keys(isImageUploadSecondObj).length) {\r\n        forImagesPreviewObj.push(isImageUploadSecondObj);\r\n      } \r\n      if (Object.keys(isImageUploadThirdObj).length) {\r\n        forImagesPreviewObj.push(isImageUploadThirdObj);\r\n      } \r\n      let imagesPrevieObj = {\r\n        aspectRatio: 0.5625,\r\n        images: forImagesPreviewObj,\r\n      };\r\n      obj.content.skappLogo = appLogo;\r\n      obj.content.category = category && category.value ? category.value : \"\";\r\n      obj.content.defaultPath = \"index.html or EMPTY\";\r\n      obj.content.age = age && age.value ?  age.value : \"\";\r\n      obj.content.previewVideo = videoObjt;\r\n      obj.content.appStatus = appStatus && appStatus.value ? appStatus.value : \"\";\r\n      obj.content.tags = tags;\r\n      obj.content.previewImages = imagesPrevieObj;\r\n      obj.content.history = [\"list of skylinks\"];\r\n      obj.content.supportDetails = \"\";\r\n\r\n      obj.content.connections = {\r\n        [firstSocialLinkTitle && firstSocialLinkTitle.value ? firstSocialLinkTitle.value: \"\" ]: firstSocialLink,\r\n        [secondSocialLinkTitle && secondSocialLinkTitle.value ? secondSocialLinkTitle.value : \"\"]: secondSocialLink,\r\n        [thirdSocialLinkTitle && thirdSocialLinkTitle.value ? thirdSocialLinkTitle.value: \"\"]: thirdSocialLink,\r\n      };\r\n\r\n      dispatch(publishAppAction(obj));\r\n      setMandatory(false);\r\n      setIsSubmit(false);\r\n      history.goBack();\r\n    }\r\n  };\r\n\r\n  const getUploadedFile = (file) => {\r\n    forImagesPreview.push(file);\r\n  };\r\n\r\n  const [isVideoUploaded, setIsVideoUploaded] = useState(false);\r\n\r\n  //manage loader for videoUpload\r\n  const videoUploadLoader = (val) => {\r\n    setIsVideoUploaded(val);\r\n  };\r\n\r\n  //manage image upload loaders\r\n\r\n  const firstImageLoader = (val) => {\r\n    setIsImageUploadingFirst(val);\r\n  };\r\n\r\n  const secondImageLoader = (val) => {\r\n    setIsImageUploadingSecond(val);\r\n  };\r\n\r\n  const thirdImageLoader = (val) => {\r\n    setIsImageUploadingThird(val);\r\n  };\r\n\r\n  //for uploading images and videos\r\n  const onChangeHandlerForImages = (file, id) => {\r\n    if (id === \"img1\") {\r\n      setIsImageUploadingFirst(true);\r\n    } else if (id === \"img2\") {\r\n      setIsImageUploadingSecond(true);\r\n    } else {\r\n      setIsImageUploadingThird(true);\r\n    }\r\n\r\n    var image = document.getElementById(id);\r\n    var reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = function (oFREvent) {\r\n      var img = document.createElement(\"img\");\r\n      img.setAttribute(\"width\", \"100%\");\r\n      img.setAttribute(\"height\", \"160px\");\r\n      image.append(img);\r\n      img.src = oFREvent.target.result;\r\n    };\r\n\r\n    UploadImagesAction(file, getUploadedFile, \r\n      id === \"img1\"\r\n        ? firstImageLoader\r\n        : id === \"img2\"\r\n          ? secondImageLoader\r\n          : thirdImageLoader\r\n    );\r\n  };\r\n\r\n  //\r\n  const getUploadVideoFile = (file) => {\r\n    setVideoObj(file);\r\n  };\r\n\r\n  const onChangeHandlerForVideos = (file) => {\r\n    var fileReader = new FileReader();\r\n    setIsVideoUploaded(true);\r\n    fileReader.onload = function () {\r\n      var blob = new Blob([fileReader.result], { type: file.type });\r\n      var url = URL.createObjectURL(blob);\r\n      var video = document.createElement(\"video\");\r\n      var timeupdate = function () {\r\n        if (snapImage()) {\r\n          video.removeEventListener(\"timeupdate\", timeupdate);\r\n          video.pause();\r\n        }\r\n      };\r\n      video.addEventListener(\"loadeddata\", function () {\r\n        if (snapImage()) {\r\n          video.removeEventListener(\"timeupdate\", timeupdate);\r\n        }\r\n      });\r\n      var snapImage = async function () {\r\n        var canvas = document.createElement(\"canvas\");\r\n        canvas.width = video.videoWidth;\r\n        canvas.height = video.videoHeight;\r\n        canvas.getContext(\"2d\").drawImage(video, 0, 0, canvas.width, canvas.height);\r\n        var image = canvas.toDataURL();\r\n\r\n        const thumb = await imageCompression.canvasToFile(canvas, \"image/jpeg\");\r\n\r\n        \r\n        UploadVideoAction(file, thumb, getUploadVideoFile, videoUploadLoader)\r\n        \r\n        var success = image.length > 100000;\r\n        if (success) {\r\n          var img = document.createElement(\"img\");\r\n          img.src = image;\r\n          document.getElementById(\"vid\").appendChild(img);\r\n          URL.revokeObjectURL(url);\r\n        }\r\n        return success;\r\n      };\r\n      video.addEventListener(\"timeupdate\", timeupdate);\r\n      video.preload = \"metadata\";\r\n      video.src = url;\r\n      // Load video in Safari / IE11\r\n      video.muted = true;\r\n      video.playsInline = true;\r\n      video.play();\r\n    };\r\n    fileReader.readAsArrayBuffer(file);\r\n  };\r\n\r\n  const handleImgUpload = (obj) => {\r\n   let newObj = {\r\n      thumbnail: `sia:${obj.thumbnail}`,\r\n      image: `sia:${obj.skylink}`,\r\n    };\r\n    setAppLogo(newObj);\r\n    setIsLogoUploaded(false);\r\n    // formik.setFieldValue(\"imgSkylink\", obj.skylink, true);\r\n    // formik.setFieldValue(\"imgThumbnailSkylink\", obj.thumbnail, true)\r\n  };\r\n\r\n  const handleFirstImageUpload = (obj) => {\r\n    let newObj = {\r\n      thumbnail: `sia:${obj.thumbnail}`,\r\n      image: `sia:${obj.skylink}`,\r\n    };\r\n    setIsImageUploadingFirstObj(newObj);\r\n    setIsImageUploadingFirst(false);\r\n  };\r\n  const handleFirst1ImageUpload = (obj) => {\r\n    let newObj = {\r\n      thumbnail: `sia:${obj.thumbnail}`,\r\n      image: `sia:${obj.skylink}`,\r\n    };\r\n    setIsImageUploadingFirstObj1(newObj);\r\n    setIsImageUploadingFirst1(false);\r\n  };\r\n  const handleSecondImageUpload = (obj) => {\r\n    let newObj = {\r\n      thumbnail: `sia:${obj.thumbnail}`,\r\n      image: `sia:${obj.skylink}`,\r\n    };\r\n    setIsImageUploadingSecondObj(newObj);\r\n    setIsImageUploadingSecond(false);\r\n  };\r\n\r\n  const handleThirdImageUpload = (obj) => {\r\n    let newObj = {\r\n      thumbnail: `sia:${obj.thumbnail}`,\r\n      image: `sia:${obj.skylink}`,\r\n    };\r\n    setIsImageUploadingThirdObj(newObj);\r\n    setIsImageUploadingThird(false);\r\n  };\r\n\r\n  const handleDropZoneClick = (evt, dropZoneRef) => {\r\n    evt.preventDefault();\r\n    evt.stopPropagation();\r\n    // setIsLogoUploaded(true);\r\n    dropZoneRef.current.gridRef.current.click();\r\n  };\r\n  \r\n  // get\r\n\r\n  return (\r\n    <Box>\r\n      {mandatory ? <Alert severity=\"error\">Fill all fields!</Alert> : null}\r\n      <Box\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"space-between\"\r\n        marginTop=\"7px\"\r\n      >\r\n        <h1 className={classes.h1}>Edit Publish App</h1>\r\n        <Box className={classes.btnBox}>\r\n          <Button className={classes.cancelBtn} onClick={handleReset}> Cancel </Button>\r\n          <Button\r\n            disabled={isSubmit}\r\n            className={classes.submitBtn}\r\n            onClick={handleSubmit(onSubmit)}\r\n          >\r\n            <Add />\r\n            {isSubmit ? (\r\n              <Loader type=\"Oval\" color=\"#FFFFFF\" height={15} width={15} />\r\n            ) : (\r\n              \"Save\"\r\n            )}\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n\r\n      <Box component=\"form\">\r\n        <Box>\r\n          <label className={classes.label}>Site Logo</label>\r\n          <div className=\"d-none\">\r\n            <SnUpload\r\n                name=\"files\"\r\n                source={UPLOAD_SOURCE_NEW_HOSTING_IMG}\r\n                ref={imgUploadEleRef}\r\n                directoryMode={false}\r\n                onUpload={(e) => handleImgUpload(e)}\r\n                uploadStarted={(e) => setIsLogoUploaded(e)}\r\n            />\r\n          </div>\r\n          <div className={classes.siteLogo} onClick={(evt) => handleDropZoneClick(evt, imgUploadEleRef)} >\r\n            {!isLogoUploaded && !Object.keys(appLogo).length && !appDetail && <Box style={{ flexDirection: \"column\", justifyItems: 'center' }}> \r\n              <Box style={{ position: \"relative\", textAlign: 'center' }}>\r\n                <ImgIcon />\r\n              </Box> \r\n              <Box style={{ position: \"relative\", color: \"grey\", textAlign: 'center' }}>click to upload Image</Box> \r\n              </Box>}\r\n            { !isLogoUploaded && (Object.keys(appLogo).length || Object.keys(appDetail).length) ? <img\r\n                alt=\"app\"\r\n                src={skylinkToUrl(appLogo?.thumbnail || appDetail?.content.skappLogo.thumbnail)}\r\n                style={{\r\n                    width: \"100%\",\r\n                    height: \"160px\",\r\n                    // border: props.arrSelectedAps.indexOf(app) > -1 ? \"2px solid #1ed660\" : null,\r\n                }}\r\n                onClick={(evt) => handleDropZoneClick(evt, imgUploadEleRef)}\r\n                name=\"1\"\r\n              /> : null \r\n            }\r\n            { isLogoUploaded && (\r\n              <Loader\r\n                type=\"Oval\"\r\n                color=\"#57C074\"\r\n                height={50}\r\n                width={50}\r\n              />\r\n            )}\r\n          </div>\r\n          <div className={classes.inputGuide}>\r\n            Max. size of 5 MB in: JPG or PNG. 300x500 or larger recommended\r\n          </div>\r\n          <input type=\"text\" hidden />\r\n        </Box>\r\n        {isAppLogoTrue && (\r\n          <div className=\"required-field\">This field is required</div>\r\n        )} \r\n        <Box\r\n          display=\"flex\"\r\n          className={`${classes.formRow} ${classes.formRow1}`}\r\n        >\r\n          <Box\r\n            className={`${classes.inputContainer} ${classes.max33}`}\r\n            flex={1}\r\n          >\r\n            <label>App Name <Tooltip className=\"iconLablel\" title=\"site logo\"><HelpOutline  /></Tooltip></label>\r\n            <input\r\n              className={classes.input}\r\n              placeholder=\"App Name\"\r\n              name=\"appname\"\r\n              ref={register}\r\n            />\r\n            {isAppNameTrue && (\r\n              <div className=\"required-field\">This field is required</div>\r\n            )}\r\n          </Box>\r\n          <Box className={`${classes.inputContainer} ${classes.max33}`} flex={1}>\r\n            <label>App URL(Skylink) <Tooltip className=\"iconLablel\" title=\"site logo\"><HelpOutline  /></Tooltip></label>\r\n            <input\r\n              name=\"appUrl\"\r\n              ref={register}\r\n              className={classes.input}\r\n              placeholder=\"https://[hns name].hns\"\r\n            />\r\n            {isAppUrlTrue && (\r\n              <div className=\"required-field\">This field is required</div>\r\n            )}\r\n          </Box>\r\n          <Box className={`${classes.inputContainer}`} flex={1}>\r\n            <label>App Version <Tooltip className=\"iconLablel\" title=\"site logo\"><HelpOutline  /></Tooltip></label>\r\n            <input\r\n              name=\"verson\"\r\n              ref={register}\r\n              className={classes.input}\r\n              placeholder=\"Version\"\r\n            />\r\n            { isAppVersionTrue && (\r\n              <div className=\"required-field\">This field is required</div>\r\n            )}\r\n          </Box>\r\n          <Box className={`${classes.inputContainer} ${classes.selectVersion}`}>\r\n            <label>App Status <Tooltip className=\"iconLablel\" title=\"site logo\"><HelpOutline  /></Tooltip></label>\r\n            <Box>\r\n              <Select\r\n                ref={register}\r\n                name=\"appStatus\"\r\n                value={appStatus}\r\n                defaultValue={appStatus}\r\n                onChange={(e)=> setAppStatus(e)}\r\n                options={appStatusOptions}\r\n                styles={reactSelectStyles}\r\n              />\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n\r\n        <Box\r\n          display=\"flex\"\r\n          className={`${classes.formRow} ${classes.formRow2}`}\r\n        >\r\n          <Box className={`${classes.inputContainer}`}  flex={0.38}>\r\n            <label>App Category <Tooltip className=\"iconLablel\" title=\"site logo\"><HelpOutline  /></Tooltip></label>\r\n            <Box>\r\n              <Select\r\n                ref={register}\r\n                name=\"category\"\r\n                defaultValue={category}\r\n                value={category}\r\n                onChange={(e) => setCategory(e)}\r\n                options={appCatOptions}\r\n                styles={reactSelectStyles}\r\n              />\r\n              {isAppCatTrue && (\r\n                <div className=\"required-field\">This field is required</div>\r\n              )}\r\n            </Box>\r\n          </Box>\r\n          <Box className={classes.inputContainerTag} flex={1}>\r\n            <label>Custom Tags <Tooltip className=\"iconLablel\" title=\"site logo\"><HelpOutline  /></Tooltip></label>\r\n            <TagsInput\r\n              value={tags}\r\n              className={`${classes.inputTag}`}\r\n              onChange={(tags) => setTags(tags)}\r\n            />\r\n            {/* <input\r\n              className={classes.input}\r\n              name=\"tags\"\r\n              ref={register}\r\n              value=\"Skylink\"\r\n            /> */}\r\n          </Box>\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          className={`${classes.formRow} ${classes.formRow2}`}\r\n        >\r\n           <Box className={classes.inputContainer} flex={1}>\r\n            <label>Git URL <Tooltip className=\"iconLablel\" title=\"site logo\"><HelpOutline  /></Tooltip></label>\r\n            <input\r\n              name=\"sourceCode\"\r\n              ref={register}\r\n              className={classes.input}\r\n              placeholder=\"https://github.com\"\r\n            />\r\n          </Box>\r\n          <Box className={classes.inputContainer} flex={1}>\r\n            <label>Demo URL</label>\r\n            <input\r\n              className={classes.input}\r\n              name=\"demoUrl\"\r\n              ref={register}\r\n              placeholder=\"https://www.demo.com/UJJ5Rgbu2TM\"\r\n            />\r\n          </Box>\r\n          <Box className={`${classes.inputContainer} ${classes.selectVersion}`}>\r\n            <label>Age Restriction? <Tooltip className=\"iconLablel\" title=\"site logo\"><HelpOutline  /></Tooltip></label>\r\n            <Box>\r\n              <Select\r\n                name=\"age\"\r\n                ref={register}\r\n                value={age}\r\n                defaultValue={age}\r\n                onChange={e => setAge(e)}\r\n                options={optionsAge}\r\n                styles={reactSelectStyles}\r\n              />\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n        <div className={classes.OneRowInput}>\r\n          <div>\r\n            <label className={classes.previewImgLabel} >\r\n              Preview Video/Images \r\n              <span>\r\n                {\" \"}\r\n                Max. size of 5 MB in: JPG or PNG. 1750x900 or larger recommended\r\n              </span> <Tooltip className=\"iconLablel\" title=\"site logo\"><HelpOutline  /></Tooltip>\r\n            </label>\r\n          </div>\r\n          <Grid container spacing={2}>\r\n            <Grid item md={3} sm={6} xs={6}>\r\n              <Box style={{ position: \"relative\" }} className={classes.placeholderImg}>\r\n              <div className=\"d-none\">\r\n                  <SnUpload\r\n                    name=\"files\"\r\n                    source={UPLOAD_SOURCE_DEPLOY}\r\n                    ref={imgUploadEleRef1}\r\n                    directoryMode={false}\r\n                    onUpload={(e) => handleFirst1ImageUpload(e)}\r\n                    uploadStarted={(e) => setIsImageUploadingFirst1(e)}\r\n                  />\r\n                </div>\r\n                <div className={classes.previewImg} onClick={(evt) => handleDropZoneClick(evt, imgUploadEleRef1)} >\r\n                  {!isImageUploadFirst1 && !Object.keys(isImageUploadFirstObj1).length && <Box style={{ flexDirection: \"column\", justifyItems: 'center' }}> \r\n                      <Box style={{ position: \"relative\", textAlign: 'center' }}>\r\n                        <ImgIcon />\r\n                      </Box> \r\n                      <Box style={{ position: \"relative\", color: \"grey\", textAlign: 'center' }}>click to upload Image</Box> \r\n                      </Box>}\r\n                  {!isImageUploadFirst1 && Object.keys(isImageUploadFirstObj1).length ? <img\r\n                    alt=\"app\"\r\n                    src={skylinkToUrl(isImageUploadFirstObj1?.thumbnail)}\r\n                    style={{\r\n                      width: \"100%\",\r\n                      height: \"160px\",\r\n                      // border: props.arrSelectedAps.indexOf(app) > -1 ? \"2px solid #1ed660\" : null,\r\n                    }}\r\n                    onClick={(evt) => handleDropZoneClick(evt, imgUploadEleRef1)}\r\n                    name=\"1\"\r\n                  /> : null\r\n                  }\r\n                  {isImageUploadFirst1 && (\r\n                    <Loader\r\n                      type=\"Oval\"\r\n                      color=\"#57C074\"\r\n                      height={50}\r\n                      width={50}\r\n                    />\r\n                  )}\r\n                </div>\r\n                <input type=\"text\" hidden />\r\n              </Box>\r\n            </Grid>\r\n\r\n            <Grid item md={3} sm={6} xs={6}>\r\n            <Box style={{ position: \"relative\" }} \r\n                className={classes.placeholderImg}>\r\n                <div className=\"d-none\">\r\n                  <SnUpload\r\n                    name=\"files\"\r\n                    source={UPLOAD_SOURCE_DEPLOY}\r\n                    ref={imgUploadEleRef2}\r\n                    directoryMode={false}\r\n                    onUpload={(e) => handleFirstImageUpload(e)}\r\n                    uploadStarted={(e) => setIsImageUploadingFirst(e)}\r\n                  />\r\n                </div>\r\n                <div className={classes.previewImg} onClick={(evt) => handleDropZoneClick(evt, imgUploadEleRef2)} >\r\n                  {!isImageUploadFirst && !Object.keys(isImageUploadFirstObj).length && <Box style={{ flexDirection: \"column\", justifyItems: 'center' }}> \r\n                      <Box style={{ position: \"relative\", textAlign: 'center' }}>\r\n                        <ImgIcon />\r\n                      </Box> \r\n                      <Box style={{ position: \"relative\", color: \"grey\", textAlign: 'center' }}>click to upload Image</Box> \r\n                      </Box>}\r\n                  {!isImageUploadFirst && Object.keys(isImageUploadFirstObj).length ? <img\r\n                    alt=\"app\"\r\n                    src={skylinkToUrl(isImageUploadFirstObj?.thumbnail)}\r\n                    style={{\r\n                      width: \"100%\",\r\n                      height: \"160px\",\r\n                      // border: props.arrSelectedAps.indexOf(app) > -1 ? \"2px solid #1ed660\" : null,\r\n                    }}\r\n                    onClick={(evt) => handleDropZoneClick(evt, imgUploadEleRef2)}\r\n                    name=\"1\"\r\n                  /> : null\r\n                  }\r\n                  {isImageUploadFirst && (\r\n                    <Loader\r\n                      type=\"Oval\"\r\n                      color=\"#57C074\"\r\n                      height={50}\r\n                      width={50}\r\n                    />\r\n                  )}\r\n                </div>\r\n                <input type=\"text\" hidden />\r\n              </Box>\r\n            </Grid>\r\n\r\n            <Grid item md={3} sm={6} xs={6}>\r\n              <Box\r\n                style={{ position: \"relative\" }}\r\n                id=\"img2\"\r\n                className={classes.placeholderImg}\r\n              >\r\n                <div className=\"d-none\">\r\n                  <SnUpload\r\n                    name=\"files\"\r\n                    source={UPLOAD_SOURCE_DEPLOY}\r\n                    ref={imgUploadEleRef3}\r\n                    directoryMode={false}\r\n                    onUpload={(e) => handleSecondImageUpload(e)}\r\n                    uploadStarted={(e) => setIsImageUploadingSecond(e)}\r\n                  />\r\n                </div>\r\n                  <div className={classes.previewImg} onClick={(evt) => handleDropZoneClick(evt, imgUploadEleRef3)} >\r\n                    {!isImageUploadSecond && !Object.keys(isImageUploadSecondObj).length && <Box style={{ flexDirection: \"column\", justifyItems: 'center' }}> \r\n                      <Box style={{ position: \"relative\", textAlign: 'center' }}>\r\n                        <ImgIcon />\r\n                      </Box> \r\n                      <Box style={{ position: \"relative\", color: \"grey\", textAlign: 'center' }}>click to upload Image</Box> \r\n                      </Box>}\r\n                    {!isImageUploadSecond && Object.keys(isImageUploadSecondObj).length ? <img\r\n                      alt=\"app\"\r\n                      src={skylinkToUrl(isImageUploadSecondObj?.thumbnail)}\r\n                      style={{\r\n                        width: \"100%\",\r\n                        height: \"160px\",\r\n                        // border: props.arrSelectedAps.indexOf(app) > -1 ? \"2px solid #1ed660\" : null,\r\n                      }}\r\n                      onClick={(evt) => handleDropZoneClick(evt, imgUploadEleRef3)}\r\n                      name=\"1\"\r\n                    /> : null\r\n                    }\r\n                    {isImageUploadSecond && (\r\n                      <Loader\r\n                        type=\"Oval\"\r\n                        color=\"#57C074\"\r\n                        height={50}\r\n                        width={50}\r\n                      />\r\n                    )}\r\n                  </div>\r\n                  <input type=\"text\" hidden />\r\n              </Box>\r\n\r\n            </Grid>\r\n            <Grid item md={3} sm={6} xs={6}>\r\n              <Box\r\n                style={{ position: \"relative\" }}\r\n                id=\"img3\"\r\n                className={classes.placeholderImg}\r\n              >\r\n                <div className=\"d-none\">\r\n                <SnUpload\r\n                  name=\"files\"\r\n                  source={UPLOAD_SOURCE_DEPLOY}\r\n                  ref={imgUploadEleRef4}\r\n                  directoryMode={false}\r\n                  onUpload={(e) => handleThirdImageUpload(e)}\r\n                  uploadStarted={(e) => setIsImageUploadingThird(e)}\r\n                />\r\n              </div>\r\n                <div className={classes.previewImg} onClick={(evt) => handleDropZoneClick(evt, imgUploadEleRef4)} >\r\n                  {!isImageUploadThird && !Object.keys(isImageUploadThirdObj).length && <Box style={{ flexDirection: \"column\", justifyItems: 'center' }}> \r\n                      <Box style={{ position: \"relative\", textAlign: 'center' }}>\r\n                        <ImgIcon />\r\n                      </Box> \r\n                      <Box style={{ position: \"relative\", color: \"grey\", textAlign: 'center' }}>click to upload Image</Box> \r\n                      </Box>}\r\n                  {!isImageUploadThird && Object.keys(isImageUploadThirdObj).length ? <img\r\n                    alt=\"app\"\r\n                    src={skylinkToUrl(isImageUploadThirdObj?.thumbnail)}\r\n                    style={{\r\n                      width: \"100%\",\r\n                      height: \"160px\",\r\n                      // border: props.arrSelectedAps.indexOf(app) > -1 ? \"2px solid #1ed660\" : null,\r\n                    }}\r\n                    onClick={(evt) => handleDropZoneClick(evt, imgUploadEleRef4)}\r\n                    name=\"1\"\r\n                  /> : null\r\n                  }\r\n                  {isImageUploadThird && (\r\n                    <Loader\r\n                      type=\"Oval\"\r\n                      color=\"#57C074\"\r\n                      height={50}\r\n                      width={50}\r\n                    />\r\n                  )}\r\n                </div>\r\n                <input type=\"text\" hidden />\r\n              </Box>\r\n            </Grid>\r\n            {/* <Grid item md={3} sm={6} xs={6}>\r\n              <Box className={classes.placeholderImg}></Box>\r\n            </Grid> */}\r\n          </Grid>\r\n        </div>\r\n        <div className={classes.OneRowInput}>\r\n          <div>\r\n            <label className={classes.textareaLabel}>\r\n              App Description\r\n              <span>Detailed summary of your app</span><Tooltip className=\"iconLablel\" title=\"site logo\"><HelpOutline  /></Tooltip>\r\n            </label>\r\n          </div>\r\n          <Box position=\"relative\">\r\n            <TextareaAutosize\r\n              name=\"appDescription\"\r\n              ref={register}\r\n              maxLength={5000}\r\n              className={classes.textarea}\r\n              aria-label=\"minimum height\"\r\n              rowsMin={6}\r\n              // value=\"Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et.\"\r\n              placeholder=\"Detailed summary of your app\"\r\n            />\r\n            <span className={classes.maxChar}>0/5000</span>\r\n          </Box>\r\n          {isAppDetailDesTrue && (\r\n            <div className=\"required-field\">Max 5000 Characters</div>\r\n          )}\r\n        </div>\r\n        <div className={classes.OneRowInput}>\r\n          <div>\r\n            <label className={classes.textareaLabel}>\r\n              Release Notes <Tooltip className=\"iconLablel\" title=\"site logo\"><HelpOutline  /></Tooltip>\r\n              {/* <span>This will go on App Card.</span> */}\r\n            </label>\r\n          </div>\r\n          <Box position=\"relative\">\r\n            <TextareaAutosize\r\n              className={classes.textarea}\r\n              aria-label=\"minimum height\"\r\n              rowsMin={4}\r\n              ref={register}\r\n              name=\"releaseNotes\"\r\n              maxLength={5000}\r\n              // value=\"Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et.\"\r\n              placeholder=\"Write your Comment\"\r\n            />\r\n            <span className={classes.maxChar}>0/5000</span>\r\n          </Box>\r\n          {isAppDetailDesTrue && (\r\n            <div className=\"required-field\">Max 5000 Characters</div>\r\n          )}\r\n        </div>\r\n        <div className={classes.OneRowInput}>\r\n          <div>\r\n            <label className={classes.textareaLabel}>Social Connections <Tooltip className=\"iconLablel\" title=\"site logo\"><HelpOutline  /></Tooltip></label>\r\n          </div>\r\n          <Box position=\"relative\">\r\n            <Grid container spacing={2}>\r\n              <Grid item md={6} lg={4} sm={12} xs={12}>\r\n                <Box display=\"flex\" className={classes.socialOptionContainer}>\r\n                   <Select\r\n                        isMulti={false}\r\n                        ref={register}\r\n                        onChange={(e) => setfirstSocialLinkTitle(e)}\r\n                        options={socialOption}\r\n                        styles={reactSelectStyles}\r\n                        value={firstSocialLinkTitle}\r\n                        classNamePrefix=\"socialMedia\"\r\n                        className={classes.socilaMediaSelect}\r\n                        name=\"firstSocialLinkTitle\"\r\n                        defaultValue={firstSocialLinkTitle}\r\n                    />\r\n                  <input\r\n                    value={firstSocialLink}\r\n                    placeholder=\"\"\r\n                    onChange={(e) => setfirstSocialLink(e.target.value)}\r\n                  />\r\n                </Box>\r\n              </Grid>\r\n              <Grid item md={6} lg={4} sm={12} xs={12}>\r\n                <Box display=\"flex\" className={classes.socialOptionContainer}>\r\n                  <Select\r\n                    isMulti={false}\r\n                    as={Select}\r\n                    ref={register}\r\n                    classNamePrefix=\"socialMedia\"\r\n                    className={classes.socilaMediaSelect}\r\n                    name=\"secondSocialLinkTitle\"\r\n                    value={secondSocialLinkTitle}\r\n                    defaultValue={secondSocialLinkTitle}\r\n                    onChange={(e) => setSecondSocialLinkTitle(e)}\r\n                    options={socialOption}\r\n                    styles={reactSelectStyles}\r\n                  />\r\n                  <input\r\n                    placeholder=\"\"\r\n                    value={secondSocialLink}\r\n                    onChange={(e) => setSecondSocialLink(e.target.value)}\r\n                  />\r\n                </Box>\r\n              </Grid>\r\n              <Grid item md={6} lg={4} sm={12} xs={12}>\r\n                <Box display=\"flex\" className={classes.socialOptionContainer}>\r\n                  <Select\r\n                    isMulti={false}\r\n                    ref={register}\r\n                    control={control}\r\n                    classNamePrefix=\"socialMedia\"\r\n                    className={classes.socilaMediaSelect}\r\n                    name=\"thirdSocialLinkTitle\"\r\n                    value={thirdSocialLinkTitle}\r\n                    defaultValue={thirdSocialLinkTitle}\r\n                    onChange={(e) => setThirdSocialLinkTitle(e)}\r\n                    options={socialOption}\r\n                    styles={reactSelectStyles}\r\n                  />\r\n                  <input\r\n                    placeholder=\"\"\r\n                    value={thirdSocialLink}\r\n                    onChange={(e) => setThirdSocialLink(e.target.value)}\r\n                  />\r\n                </Box>\r\n              </Grid>\r\n\r\n              <Grid item md={6} lg={4} style={{ alignSelf: \"center\" }}>\r\n                <Button\r\n                  className={classes.button}\r\n                  onClick={handleSubmit(onSubmit)}\r\n                  disabled={isSubmit}\r\n                >\r\n                  {isSubmit ? (\r\n                    <Loader\r\n                      type=\"Oval\"\r\n                      color=\"#FFFFFF\"\r\n                      height={15}\r\n                      width={15}\r\n                    />\r\n                  ) : (\r\n                    \"Save\"\r\n                  )}\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </div>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default EditPublishApp;\r\n","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\Hosting\\EditSite.js",["763","764","765","766","767","768","769","770","771","772","773","774","775","776","777","778","779","780"],"import React, { createRef, useEffect, useState } from 'react';\r\nimport { Box, Button, makeStyles, Grid, FormGroup, FormControlLabel, Typography, Tooltip } from '@material-ui/core';\r\n\r\nimport Select from 'react-select';\r\nimport { Field, Formik, useFormik } from 'formik';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\nimport * as Yup from 'yup';\r\nimport { Add, HelpOutline } from '@material-ui/icons';\r\nimport Switch, { IOSSwitch } from './Switch';\r\nimport styles from './AddNewSiteStyles';\r\n// img icon\r\nimport { ReactComponent as ImgIcon } from '../../assets/img/icons/image.svg';\r\nimport { ReactComponent as LinkIcon } from '../../assets/img/icons/attachment-link.9.svg';\r\nimport { ReactComponent as UploadIcon } from '../../assets/img/icons/cloud-upload-outline.svg';\r\nimport { SnTextInput, SnSelect } from '../Utils/SnFormikControlls';\r\nimport { skylinkToUrl } from \"../../utils/SnUtility\";\r\nimport { getInitValAndValidationSchemaFromSnFormikObj } from '../../service/SnFormikUtilService';\r\nimport { getHNSSkyDBURL, setMyHostedApp } from '../../service/SnSkappService';\r\nimport { useHistory } from 'react-router-dom';\r\nimport SnUpload from '../../uploadUtil/SnUpload';\r\nimport { UPLOAD_SOURCE_DEPLOY, UPLOAD_SOURCE_NEW_HOSTING, UPLOAD_SOURCE_NEW_HOSTING_IMG } from '../../utils/SnConstants';\r\nimport { DropzoneArea } from 'material-ui-dropzone';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setUploadList } from '../../redux/action-reducers-epic/SnUploadListAction';\r\nimport SnInfoModal from '../Modals/SnInfoModal';\r\nimport { getPortalList } from '../../utils/SnNewObject';\r\nimport { setLoaderDisplay } from '../../redux/action-reducers-epic/SnLoaderAction';\r\nimport { getMyHostedApps } from '../../service/SnSkappService';\r\nimport { useParams } from \"react-router-dom\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nconst useStyles = makeStyles(styles)\r\nconst versionOptions = [\r\n    { value: '1.0', label: '1.0' },\r\n    { value: '1.01', label: '1.01' },\r\n    { value: '1.02', label: '1.02' },\r\n]\r\nconst optionsAge = [\r\n    { value: '17', label: '17' },\r\n    { value: '18', label: '18' },\r\n    { value: '19', label: '19' },\r\n]\r\nconst socialOption = [\r\n    { value: 'facebook', label: 'facebook' },\r\n    { value: 'Reddit', label: 'Reddit' },\r\n    { value: 'Twitter', label: 'Twitter' },\r\n]\r\n\r\nconst storageGatewayOption = getPortalList().map(portal => ({ \"value\": portal, \"label\": portal }));\r\n\r\nconst reactSelectStyles = {\r\n    control: styles => ({\r\n        ...styles, backgroundColor: 'white', height: 55, boxShadow: 0, borderColor: '#D9E1EC', color: '#000', borderRadius: 8,\r\n        '@media only screen and (max-width: 1440px)': {\r\n            height: 50,\r\n            // width: '100%',\r\n            fontSize: 16,\r\n\r\n        },\r\n        '@media only screen and (max-width: 575px)': {\r\n            height: 43,\r\n            // width: '100%',\r\n            fontSize: 14,\r\n\r\n        },\r\n        '&:hover': {\r\n            borderColor: '#1DBF73'\r\n        }\r\n    }),\r\n    option: (styles, { data, isDisabled, isFocused, isSelected }) => ({\r\n        ...styles, backgroundColor: isSelected ? '#1DBF73' : '#fff',\r\n        '&:foucs': {\r\n            backgroundColor: '#1DBF73'\r\n        }\r\n    }),\r\n};\r\n\r\nconst formikObj = {\r\n    appName: ['', Yup.string().required('This field is required')],\r\n    storageGateway: ['', Yup.string().required('This field is required')],\r\n    hns: ['', Yup.string().required('This field is required')],\r\n    skylink: ['', Yup.string().required('This field is required')],\r\n    defaultPath: ['', Yup.string().required('This field is required')],\r\n    portalMinVersion: ['', Yup.string().required('This field is required')],\r\n    sourceCode: ['', Yup.string().required('This field is required')],\r\n    imgSkylink: [''],\r\n    imgThumbnailSkylink: ['']\r\n};\r\n\r\nexport default function EditSite() {\r\n    const [selectedOption, setSelectedOption] = useState(null);\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const uploadEleRef = createRef();\r\n    const imgUploadEleRef = createRef();\r\n    const dropZoneRef = createRef();\r\n    const snUploadListStore = useSelector((state) => state.snUploadListStore);\r\n\r\n    const [isFileUpload, setIsFileUpload] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const [showInfoModal, setShowInfoModal] = useState(false);\r\n    const [infoModalTitle, setInfoModalTitle] = useState(\"\");\r\n    const [infoModalContent, setInfoModalContent] = useState(\"\");\r\n    const [infoModalShowCopyToClipboard, setInfoModalShowCopyToClipboard] = useState(false);\r\n    const [infoModalClipboardTooltip, setInfoModalClipboardTooltip] = useState(\"\");\r\n\r\n    const [isLogoUploaded, setIsLogoUploaded] = useState(false);\r\n    const [hostedAppObj, setHostedAppObj] = useState();\r\n    const { appId } = useParams();\r\n\r\n    useEffect(() => {\r\n        loadHostedApp();\r\n        return () => {\r\n            snUploadListStore[UPLOAD_SOURCE_NEW_HOSTING].length = 0;\r\n            snUploadListStore[UPLOAD_SOURCE_NEW_HOSTING_IMG].length = 0;\r\n            dispatch(setUploadList(snUploadListStore));\r\n        };\r\n    }, []);\r\n\r\n    const loadHostedApp = async () => {\r\n        dispatch(setLoaderDisplay(true));\r\n        setIsLoading(true);\r\n        const hostedAppObj = await getMyHostedApps([appId]);\r\n        await setHostedAppObj(hostedAppObj);\r\n        setFormicObj(hostedAppObj);\r\n        setIsLoading(false);\r\n        dispatch(setLoaderDisplay(false));\r\n    };\r\n\r\n\r\n    const setFormicObj = (hostedAppObj) => {\r\n        formikObj.appName[0] = `${hostedAppObj.appDetailsList[appId].content.appName}`;\r\n        formikObj.storageGateway[0] = `${hostedAppObj.appDetailsList[appId].content.storageGateway}`;\r\n        formikObj.hns[0] = `${hostedAppObj.appDetailsList[appId].content.hns}`;\r\n        formikObj.skylink[0] = `${hostedAppObj.appDetailsList[appId].content.skylink}`;\r\n        formikObj.defaultPath[0] = `${hostedAppObj.appDetailsList[appId].content.defaultPath}`;\r\n        formikObj.portalMinVersion[0] = `${hostedAppObj.appDetailsList[appId].content.portalMinVersion}`;\r\n        formikObj.sourceCode[0] = `${hostedAppObj.appDetailsList[appId].content.sourceCode}`;\r\n        formikObj.imgSkylink[0] = `${hostedAppObj.appDetailsList[appId].content.imgSkylink}`;\r\n        formikObj.imgThumbnailSkylink[0] = `${hostedAppObj.appDetailsList[appId].content.imgThumbnailSkylink}`;\r\n    }\r\n\r\n    const submitForm = async (values) => {\r\n        dispatch(setLoaderDisplay(true));\r\n        await setMyHostedApp(values, appId);\r\n        dispatch(setLoaderDisplay(false));\r\n        const hnsSkyDBURL = await getHNSSkyDBURL(values.hns);\r\n        \r\n        if(values.hns != `${hostedAppObj.appDetailsList[appId].content.hns}`) {\r\n            setInfoModalParams({\r\n                title: `HNS SkyDB URL`,\r\n                content: hnsSkyDBURL,\r\n                showClipboardCopy: true,\r\n            });\r\n        } else {\r\n            setInfoModalParams({\r\n                title: `Success`,\r\n                content: `Site updated successfully!`,\r\n                showClipboardCopy: false,\r\n            });\r\n        }\r\n        \r\n    };\r\n    \r\n    const setInfoModalParams = ({ title, content, showClipboardCopy = false, clipboardCopyTooltip, open = true }) => {\r\n        setInfoModalContent(content);\r\n        setInfoModalTitle(title);\r\n        setInfoModalShowCopyToClipboard(showClipboardCopy);\r\n        setInfoModalClipboardTooltip(clipboardCopyTooltip);\r\n        setShowInfoModal(open);\r\n    };\r\n\r\n    const onInfoModalClose = () => {\r\n        setInfoModalParams({ open: false });\r\n        history.push(\"/hosting\");\r\n    };\r\n\r\n\r\n    const onCancel = async (evt) => {\r\n        evt.preventDefault();\r\n        evt.stopPropagation();\r\n        history.push(\"/hosting\");\r\n    };\r\n\r\n    const handleDropZoneClick = (evt, dropZoneRef) => {\r\n        evt.preventDefault();\r\n        evt.stopPropagation();\r\n        dropZoneRef.current.gridRef.current.click();\r\n    };\r\n\r\n    const handleImgUpload = (obj, formik) => {\r\n        formik.setFieldValue(\"imgSkylink\", obj.skylink, true);\r\n        formik.setFieldValue(\"imgThumbnailSkylink\", obj.thumbnail, true)\r\n        setIsLogoUploaded(false);\r\n    };\r\n\r\n    const copyToClipboard = (url) => {\r\n        navigator.clipboard.writeText(url);\r\n    };\r\n \r\n    const cancelUpload = (e, formik) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        snUploadListStore[UPLOAD_SOURCE_NEW_HOSTING].length = 0;\r\n        dispatch(setUploadList(snUploadListStore));\r\n        formik.setFieldValue(\"skylink\", '', false);\r\n        formik.setFieldValue(\"sourceCode\", ``, false);\r\n    }\r\n\r\n    const setValueOfForm = (obj, formik) => {\r\n        formik.setFieldValue(\"skylink\", obj.skylink, true)\r\n        formik.setFieldValue(\"sourceCode\", `https://siasky.net/${obj.skylink}`, true)\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <Box >\r\n                {\r\n                    !isLoading ?\r\n                        <Formik\r\n                            initialValues={getInitValAndValidationSchemaFromSnFormikObj(formikObj).initialValues}\r\n                            validationSchema={Yup.object(getInitValAndValidationSchemaFromSnFormikObj(formikObj).validationSchema)}\r\n                            validateOnChange={true}\r\n                            validateOnBlur={true}\r\n                            onSubmit={submitForm}>\r\n                            {formik => (<form onSubmit={formik.handleSubmit}>\r\n                                <Box display=\"flex\" alignItems=\"center\" justifyContent='space-between' marginTop='7px'>\r\n                                    <h1 className={classes.h1}>Edit Site</h1>\r\n                                    <Box className={classes.btnBox}>\r\n                                        <Button className={classes.cancelBtn} onClick={onCancel}>Cancel </Button>\r\n                                        <Button className={classes.submitBtn} onClick={formik.handleSubmit}><Add /> Save </Button>\r\n                                    </Box>\r\n                                </Box>\r\n                                <Box component=\"form\">\r\n                                    <Box>\r\n                                        <label className={classes.label}>Site Logo</label>\r\n                                        <div className=\"d-none\">\r\n                                            <SnUpload\r\n                                                name=\"files\"\r\n                                                source={UPLOAD_SOURCE_NEW_HOSTING_IMG}\r\n                                                ref={imgUploadEleRef}\r\n                                                directoryMode={false}\r\n                                                onUpload={(obj) => handleImgUpload(obj, formik)}\r\n                                                uploadStarted={(e) => setIsLogoUploaded(e)}\r\n                                            />\r\n                                        </div>\r\n                                        <div className={classes.siteLogo} onClick={(evt) => handleDropZoneClick(evt, imgUploadEleRef)} >\r\n                                            {!isLogoUploaded && formik.values.imgThumbnailSkylink.trim() === \"\" &&<Box style={{ flexDirection: \"column\", justifyItems: 'center' }}> \r\n                                            <Box style={{ position: \"relative\", textAlign: 'center' }}>\r\n                                                <ImgIcon />\r\n                                            </Box> \r\n                                            <Box style={{ position: \"relative\", color: \"grey\", textAlign: 'center' }}>click to upload Image</Box> \r\n                                            </Box>}\r\n                                            {!isLogoUploaded && formik.values.imgThumbnailSkylink.trim() !== \"\" && <img\r\n                                                alt=\"app\"\r\n                                                src={skylinkToUrl(formik.values.imgThumbnailSkylink)}\r\n                                                style={{\r\n                                                    width: \"250px\",\r\n                                                    height: \"150px\",\r\n                                                    // border: props.arrSelectedAps.indexOf(app) > -1 ? \"2px solid #1ed660\" : null,\r\n                                                }}\r\n                                                onClick={(evt) => handleDropZoneClick(evt, imgUploadEleRef)}\r\n                                                name=\"1\"\r\n                                            />}\r\n                                             {isLogoUploaded ? <Loader type=\"Oval\" color=\"#57C074\" height={50}  width={50} /> : null}\r\n                                        </div>\r\n                                        <div className={classes.inputGuide}>\r\n                                            Max. size of 5 MB in: JPG or PNG. 300x500 or larger recommended\r\n                                        </div>\r\n                                        <input type=\"text\" hidden />\r\n                                    </Box>\r\n                                    <Box display='flex' className={`${classes.formRow} formSiteRow`}>\r\n                                        <Box className={`${classes.inputContainer}`} flex={1} style={{ maxWidth: 700 }}>\r\n                                            <SnTextInput\r\n                                                label={<span>App Name <Tooltip className=\"iconLablel\" title=\"site logo\"><HelpOutline /></Tooltip></span>}\r\n                                                name=\"appName\"\r\n                                                disabled={true}\r\n                                                className={classes.input}\r\n                                                type=\"text\" />\r\n                                        </Box>\r\n                                        <Box className={classes.inputContainer} flex={1}>\r\n                                            <SnTextInput\r\n                                                label={<span>Default Path <Tooltip className=\"iconLablel\" title=\"site logo\"><HelpOutline  /></Tooltip></span>}\r\n                                                name=\"defaultPath\"\r\n                                                className={classes.input}\r\n                                                type=\"text\" />\r\n                                        </Box>\r\n                                    </Box>\r\n                                    <Box display='flex' className={`${classes.formRow} formSiteRow`}>\r\n                                        <Box className={`${classes.inputContainer}`} flex={1} style={{ maxWidth: 700 }}>\r\n                                            <SnTextInput\r\n                                                label={<span>HNS Domain <Tooltip className=\"iconLablel\" title=\"site logo\"><HelpOutline  /></Tooltip></span>}\r\n                                                name=\"hns\"\r\n                                                className={classes.input}\r\n                                                type=\"text\" />\r\n                                        </Box>\r\n                                        <Box className={`${classes.inputContainer}`} flex={1}>\r\n                                            <label>Skynet Portal <Tooltip className=\"iconLablel\" title=\"site logo\"><HelpOutline  /></Tooltip></label>\r\n                                            <Box>\r\n                                                <SnSelect\r\n                                                    label=\"Storage Gateway\"\r\n                                                    name=\"storageGateway\"\r\n                                                    options={storageGatewayOption}\r\n                                                />\r\n                                            </Box>\r\n                                        </Box>\r\n                                        <Box className={`${classes.inputContainer}`} flex={1}>\r\n                                            <SnTextInput\r\n                                                label={<span>App Version <Tooltip className=\"iconLablel\" title=\"site logo\"><HelpOutline  /></Tooltip></span>}\r\n                                                name=\"portalMinVersion\"\r\n                                                className={classes.input}\r\n                                                type=\"text\" />\r\n                                        </Box>\r\n                                    </Box>\r\n                                    <Box display='flex' className={`${classes.formRow} formSiteRow`}>\r\n                                        <Box className={classes.inputContainer} flex={1} position=\"relative\">\r\n                                            <SnTextInput\r\n                                                label={<span>Source Code <Tooltip className=\"iconLablel\" title=\"site logo\"><HelpOutline  /></Tooltip></span>}\r\n                                                name=\"sourceCode\"\r\n                                                className={classes.input}\r\n                                                type=\"text\" />\r\n                                        </Box>\r\n                                    </Box>\r\n                                    <div className={classes.OneRowInput}>\r\n                                        <div className=\"d-none temp\">\r\n                                            <FormGroup>\r\n                                                <FormControlLabel style={{ color: '#5A607F', marginBottom: 5 }}\r\n                                                    label={`Upload ${isFileUpload ? \"File\" : \"Folder\"}`}\r\n                                                    control={<IOSSwitch\r\n                                                        onChange={(evt) => setIsFileUpload(evt.target.checked)}\r\n                                                        name=\"toggleFileUpload\" />}\r\n\r\n                                                />\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <Grid container spacing={2}>\r\n                                            <Grid item md={12} sm={12} xs={12}>\r\n                                                <Box>\r\n                                                    <div className=\"d-none\">\r\n                                                        <SnUpload\r\n                                                            name=\"files\"\r\n                                                            source={UPLOAD_SOURCE_NEW_HOSTING}\r\n                                                            ref={uploadEleRef}\r\n                                                            directoryMode={!isFileUpload}\r\n                                                            onUpload={(obj) => setValueOfForm(obj, formik)}\r\n                                                        />\r\n\r\n                                                    </div>\r\n                                                    <div className={classes.previewImg} style={{ flexDirection: 'column', width: '100%', minHeight: '230px' }}>\r\n                                                        {/* <div><UploadIcon /></div>\r\n\r\n                                            <div>\r\n                                                Drop file here or <span style={{ color: '#1DBF73' }}>click here to upload</span>\r\n                                            </div> */}\r\n                                                        <DropzoneArea\r\n                                                            showPreviewsInDropzone={false}\r\n                                                            onDrop={(files) => {\r\n                                                                uploadEleRef.current.handleDrop(files)\r\n                                                            }}\r\n                                                            //  className={classes.dropZonArea}\r\n                                                            Icon={\"none\"}\r\n                                                            inputProps={{ webkitdirectory: true, mozdirectory: true }}\r\n                                                            ref={dropZoneRef}\r\n                                                            webkitdirectory={true}\r\n                                                            mozdirectory={true}\r\n                                                            maxFileSize={210000000}\r\n                                                            // onDelete={delImg}\r\n                                                            filesLimit={100}\r\n                                                            showAlerts={false}\r\n                                                            dropzoneText={\r\n                                                                <div id=\"dropzone-text\" onClick={(evt) => handleDropZoneClick(evt, uploadEleRef)}>\r\n                                                                    {  snUploadListStore && snUploadListStore[UPLOAD_SOURCE_NEW_HOSTING] && snUploadListStore[UPLOAD_SOURCE_NEW_HOSTING].length <= 0 && \r\n                                                                        <>\r\n                                                                            <div><UploadIcon /></div>\r\n                                                                            <div style={{ color: '#5C757D' }}>\r\n                                                                                Drag and drop files or folder here\r\n                                                                            </div>\r\n                                                                            <Button className={classes.uploadBtn}>\r\n                                                                                Select {isFileUpload ? \"Files\" : \"Folder\"}\r\n                                                                            </Button>\r\n                                                                        </>\r\n                                                                    }\r\n                                                                    {snUploadListStore && snUploadListStore[UPLOAD_SOURCE_NEW_HOSTING] && snUploadListStore[UPLOAD_SOURCE_NEW_HOSTING].length > 0 && snUploadListStore[UPLOAD_SOURCE_NEW_HOSTING]\r\n                                                                .filter((fileObj, idx) => idx === 0)\r\n                                                                .map((fileObj) => (\r\n                                                                    <Grid\r\n                                                                        item\r\n                                                                        xs={12}\r\n                                                                        className={classes.show_img_title_grid}\r\n                                                                        style={{ paddingTop: \"20px\", paddingBottom: \"20px\" }}\r\n                                                                    >\r\n                                                                        <div\r\n                                                                            style={{\r\n                                                                                display: \"flex\",\r\n                                                                                justifyContent: \"center\",\r\n                                                                                width: \"100%\",\r\n                                                                                minHeight: 150,\r\n                                                                                flexDirection: 'column'\r\n                                                                            }}\r\n                                                                        >\r\n                                                                            <div>\r\n                                                                                <Typography className={classes.linkName}>\r\n                                                                                    Folder: {fileObj?.file?.path || fileObj?.file?.name}\r\n                                                                                </Typography>\r\n                                                                                {fileObj?.status && fileObj?.status === 'complete' && (<Typography className={classes.linkName}>\r\n                                                                                    Skylink: {fileObj?.url}\r\n                                                                                </Typography>)}\r\n                                                                                {fileObj?.status && fileObj?.status !== 'complete' && (<Typography className={classes.linkName}>\r\n                                                                                    <><Loader type=\"Oval\" color=\"#57C074\" height={50}  width={50} /></> \r\n                                                                                    {fileObj?.status.toUpperCase()} {fileObj?.status === 'uploading' && !isNaN(fileObj.progress) && `${(Math.trunc(fileObj.progress * 100))} %`}\r\n                                                                                </Typography>)}\r\n                                                                                <Button className={classes.uploadBtn} style={{ zIndex: 100 }} onClick={(e)=> cancelUpload(e, formik)}>\r\n                                                                                    Cancel\r\n                                                                                </Button>\r\n                                                                            </div>\r\n                                                                            {/* <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                                                                            {fileObj?.status === 'complete' && <FileCopyIcon\r\n                                                                                className={classes.descIcon}\r\n                                                                                style={{\r\n                                                                                    cursor: \"pointer\",\r\n                                                                                }}\r\n                                                                                onClick={() => copyToClipboard(fileObj?.url)}\r\n                                                                            />}\r\n                                                                        </div> */}\r\n                                                                        </div>\r\n                                                                    </Grid>))}\r\n                                                                </div>\r\n                                                            }\r\n                                                        />\r\n                                                    </div>\r\n                                                    <input type=\"text\" hidden />\r\n                                                </Box>\r\n                                            </Grid>\r\n                                         </Grid>\r\n                                    </div>\r\n                                </Box>\r\n\r\n\r\n                            </form>)}\r\n                        </Formik>\r\n                        : null\r\n                }\r\n            </Box >\r\n\r\n\r\n            <SnInfoModal\r\n                open={showInfoModal}\r\n                onClose={onInfoModalClose}\r\n                title={infoModalTitle}\r\n                content={infoModalContent}\r\n                showClipboardCopy={infoModalShowCopyToClipboard}\r\n            />\r\n\r\n        </>\r\n    )\r\n};","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\Hosting\\StorageGateway.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\Hosting\\DeploySite.js",["781","782"],"import React, { createRef, useState } from 'react';\nimport { Box, Button, makeStyles, Grid, ListItemIcon, List, ListItem, Typography, FormGroup, FormControlLabel } from '@material-ui/core';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport styles from '../../assets/jss/app-details/SubmitAppStyles';\nimport \"./DeploySiteStyles.css\";\nimport moment from \"moment\";\nimport Switch from './Switch'\n// img icon\nimport { BsFileEarmarkArrowUp } from \"react-icons/bs\";\nimport SnUpload from \"../../uploadUtil/SnUpload\";\nimport DoneIcon from '@material-ui/icons/Done'\nimport { ReactComponent as UploadIcon } from '../../assets/img/icons/cloud-upload-outline.svg'\nimport { ReactComponent as SettingIcon } from '../../assets/img/icons/settingIconGreen.svg';\nimport { ReactComponent as IcIcon } from '../../assets/img/icons/ic_increase.svg';\nimport { DropzoneArea } from 'material-ui-dropzone';\nimport { UPLOAD_SOURCE_DEPLOY } from '../../utils/SnConstants';\nimport { IOSSwitch } from \"./Switch\";\nimport { setMyHostedApp } from '../../service/SnSkappService';\nimport { setLoaderDisplay } from '../../redux/action-reducers-epic/SnLoaderAction';\nimport { genHostedAppSkappUrl, getBase32Skylink } from \"../../utils/SnUtility\";\nimport useShowHostingLinks from '../../hooks/useShowHostingLinks';\nimport { useLoadHostedAppFromUrl } from '../../hooks/useLoadHostedAppFromUrl';\nconst useStyles = makeStyles(styles)\n\nconst DeploySite = (props) => {\n\n    const classes = useStyles();\n\n    const uploadEleRef = createRef();\n    const dropZoneRef = createRef();\n\n    const [isFileUpload, setIsFileUpload] = useState(false);\n    const [appDetail, setAppDetail] = useLoadHostedAppFromUrl();\n    const dispatch = useDispatch();\n    const snUploadListStore = useSelector((state) => state.snUploadListStore);\n\n    useShowHostingLinks();\n\n    const copyToClipboard = (url) => {\n        navigator.clipboard.writeText(url);\n    };\n\n    const handleDropZoneClick = (evt)=> {\n        evt.preventDefault();\n        evt.stopPropagation();\n        uploadEleRef.current.gridRef.current.click();\n    };\n\n    const updateHostedApp = async (obj) => {\n        dispatch(setLoaderDisplay(true));\n        let currAppDetail = appDetail;\n        currAppDetail.content.skylink = obj.skylink;\n        const newAppDetail = await setMyHostedApp(currAppDetail.content, currAppDetail.id);\n        dispatch(setLoaderDisplay(false));\n        setAppDetail(newAppDetail);\n    };\n\n    return (\n        <Box >\n            <Box display=\"flex\" alignItems=\"center\" justifyContent='space-between' marginTop='7px'>\n                <h1 className={classes.h1}>\n                    {appDetail?.content?.appName && `${appDetail.content.appName} / Deploy`}\n                </h1>\n                <Box className={classes.btnBox + \" d-none temp\"}>\n                    <Button className={classes.settingBtn}>\n                        <SettingIcon />\n                        Setting\n                    </Button>\n                </Box>\n            </Box>\n\n            <Box component=\"form\">\n                {/* < */}\n                <Grid container spacing={2} className={classes.GridContainer}>\n                    <Grid item lg={4} md={6} sm={6} xs={12}>\n                        <h4 className={classes.h4}>DNS</h4>\n                        <div className={classes.DNSContainer}>\n                            <p className={classes.ContentItemTitle}>Skapp URL</p>\n                            <p className={classes.siteLink}>\n                                {genHostedAppSkappUrl(appDetail)}\n                            </p>\n                            <Box display=\"flex\" justifyContent=\"space-between\" marginTop='15px'>\n                                <div>\n                                    <p className={classes.ContentItemTitle}>Skapp Base 32 URL</p>\n                                    <p className={classes.siteLink}>\n                                        { appDetail?.content?.skylink && appDetail.content.storageGateway &&\n                                        `https://${getBase32Skylink(appDetail.content.skylink)}.${appDetail?.content?.storageGateway}`}\n                                    </p>\n                                </div>\n                                <span className={classes.changeBtnLink + \" d-none temp\"}>Change</span>\n                            </Box>\n\n                        </div>\n                    </Grid>\n                    <Grid item lg={4} md={6} sm={6} xs={12}>\n                        <h4 className={classes.h4}>Deployments</h4>\n                        <div className={classes.DevelopmentsContainer}>\n\n                            <List\n\n                                component=\"div\"\n                                aria-labelledby=\"list\"\n\n                                className={classes.ListRoot}\n                            >\n                                {   appDetail?.content?.history && \n                                    Object.keys(appDetail.content.history)\n                                    .sort((ts1, ts2)=>parseInt(ts2)-parseInt(ts1))\n                                    .map((ts, idx, arr) => \n                                    <ListItem button key={idx}>\n                                        <Box display=\"flex\" marginRight=\"auto\" alignItems=\"center\">\n                                            <ListItemIcon>\n                                                <DoneIcon />\n                                            </ListItemIcon>\n                                            <p>#{(arr.length - idx)}</p>\n                                        </Box>\n                                        <span>{moment(parseInt(ts)).fromNow()}</span>\n                                    </ListItem>\n                                )\n                            }\n                            </List>\n                        </div>\n                    </Grid>\n                    <Grid item lg={4} md={12} sm={12} xs={12}>\n                        <h4 className={classes.h4}>Statistics</h4>\n                        <div className={classes.StatsContainer}>\n                            <Grid container>\n                                <Grid className={classes.statCol} item xs={12} sm={6} md={6} >\n                                    <div className={classes.StatTitle}>\n                                        Number Of Files\n                                    </div>\n                                    <div className={classes.StatValue}>\n                                        400\n                                    </div>\n                                    <div className={classes.graphText}>\n                                        <span>+10.01%</span> <IcIcon />\n                                    </div>\n                                </Grid>\n                                <Grid flex={1} alignSelf=\"center\" item xs={12} sm={6} md={6}>\n                                    <Box className={`${classes.statCol} ${classes.paddingLeft}`} >\n\n                                        <div className={classes.StatTitle}>\n                                            Number Of Files\n                                    </div>\n                                        <div className={classes.StatValue}>\n                                            400\n                                    </div>\n                                        <div className={classes.graphText}>\n                                            <span>+10.01%</span> <IcIcon />\n                                        </div>\n                                    </Box>\n                                    <p style={{ textAlign: 'center', fontSize: 16, color: '#97A0C3', marginTop: 10 }}>Skapp Version Number: 1.0</p>\n                                </Grid>\n                            </Grid>\n\n                        </div>\n                    </Grid>\n                </Grid>\n\n                <div className={classes.OneRowInput}>\n                    <div className=\"d-none temp\">\n                        <FormGroup>\n                            <FormControlLabel style={{ color: '#5A607F', marginBottom: 5 }}\n                                label=\"Upload File\"\n                                control={<IOSSwitch \n                                        onChange={(evt) => setIsFileUpload(evt.target.checked)} \n                                        name=\"toggleFileUpload\" />}\n\n                            />\n                        </FormGroup>\n                    </div>\n\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <Box>\n                                <div className=\"d-none\">\n                                    <SnUpload\n                                        name=\"files\"\n                                        source={UPLOAD_SOURCE_DEPLOY}\n                                        ref={uploadEleRef}\n                                        directoryMode={!isFileUpload}\n                                        onUpload={updateHostedApp}\n                                    />\n\n                                </div>\n                                <div className={classes.previewImg} style={{ flexDirection: 'column', width: '100%', minHeight: '230px' }}>\n                                    <DropzoneArea\n                                        showPreviewsInDropzone={false}\n                                        onDrop={(files) => {\n                                            uploadEleRef.current.handleDrop(files)\n                                        }}\n                                        //  className={classes.dropZonArea}\n                                        Icon={\"none\"}\n                                        inputProps={{ webkitdirectory: true, mozdirectory: true }}\n                                        ref={dropZoneRef}\n                                        webkitdirectory={true}\n                                        mozdirectory={true}\n                                        maxFileSize={210000000}\n                                        // onDelete={delImg}\n                                        filesLimit={1}\n                                        showAlerts={false}\n                                        dropzoneText={\n                                            <div id=\"dropzone-text\" onClick={handleDropZoneClick}>\n                                                <div><UploadIcon /></div>\n\n                                                <div style={{ color: '#5C757D' }}>\n                                                    Drag and drop files or folder here\n                                                </div>\n                                                <Button className={classes.uploadBtn}>\n                                                    Select {isFileUpload ? \"Files\" : \"Folder\"}\n                                                </Button>\n                                            </div>\n                                        }\n                                    />\n                                </div>\n                            </Box>\n                            <Box>\n                                {snUploadListStore && snUploadListStore[UPLOAD_SOURCE_DEPLOY] && snUploadListStore[UPLOAD_SOURCE_DEPLOY].length > 0 && snUploadListStore[UPLOAD_SOURCE_DEPLOY]\n                                    .map((fileObj) => (\n                                        <Grid\n                                            item\n                                            xs={12}\n                                            className={classes.show_img_title_grid}\n                                            style={{ paddingTop: \"20px\", paddingBottom: \"20px\" }}\n                                        >\n                                            <div\n                                                style={{\n                                                    display: \"flex\",\n                                                    justifyContent: \"space-between\",\n                                                    width: \"100%\",\n                                                }}\n                                            >\n                                                <div >\n\n                                                    <Typography className={classes.linkName}>\n                                                        <span>\n                                                            <DescriptionIcon className={classes.descIcon} />\n                                                        </span>\n                                                        {fileObj?.file?.path || fileObj?.file?.name}\n                                                    </Typography>\n                                                    {fileObj?.status && fileObj?.status === 'complete' && (<Typography className={classes.linkName}>\n                                                        Skylink: {fileObj?.url}\n                                                    </Typography>)}\n                                                    {fileObj?.status && fileObj?.status !== 'complete' && (<Typography className={classes.linkName}>\n                                                        {fileObj?.status.toUpperCase()} {fileObj?.status === 'uploading' && !isNaN(fileObj.progress) && `${(Math.trunc(fileObj.progress * 100))} %`}\n                                                    </Typography>)}\n                                                </div>\n                                                <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                                                    {/* <TiAttachment\n                      style={{\n                        fontSize: \"18px\",\n                        color: \"#1ed660\",\n                        marginRight: 10,\n                      }}\n                    /> */}\n                                                    {fileObj?.status === 'complete' && <FileCopyIcon\n                                                        className={classes.descIcon}\n                                                        style={{\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => copyToClipboard(fileObj?.url)}\n                                                    />}\n                                                </div>\n                                            </div>\n                                        </Grid>))}\n                            </Box>\n                        </Grid>\n\n                    </Grid>\n                </div>\n            </Box>\n\n        </Box >\n    )\n}\n\nexport default DeploySite\n","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\Domain\\Domains.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\Domain\\NoDomain.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\AppDetails\\AppDetailsPage.js",["783"],"import React, { useEffect, useState } from \"react\";\nimport AppDetailsHeader from \"./AppDetailsHeader\";\nimport AppInfo from \"./AppInfo\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getMyPublishedAppsAction } from \"../../redux/action-reducers-epic/SnPublishAppAction\";\n\nconst AppDetailsPage = () => {\n  const { appId } = useParams();\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getMyPublishedAppsAction()); \n  }, []);\n\n  const { publishedAppsStore } = useSelector((state) => state.snPublishedAppsStore);\n  const [data, setData] = useState();\n\n  useEffect(() => {\n    if (publishedAppsStore) {\n      let appJSON = publishedAppsStore.find(appData => appData.id === appId);\n      if(appJSON)\n      {\n        setData(appJSON);\n      }\n    }\n  }, [publishedAppsStore, appId]); // if id or publishedAppsStore is changing run this method.\n\n  return (\n    <div>\n      <AppDetailsHeader data={data} />\n      <AppInfo data={data} appId={appId}/>\n    </div>\n  );\n};\n\nexport default AppDetailsPage;\n","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\SubmitApp\\SubmitApp.js",["784","785","786","787","788","789","790","791","792","793","794","795","796","797","798","799","800"],"import React, { createRef, useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  makeStyles,\r\n  Grid,\r\n  TextareaAutosize,\r\n  Typography,\r\n  Tooltip\r\n} from \"@material-ui/core\";\r\nimport Select from \"react-select\";\r\nimport { Add, HelpOutline } from \"@material-ui/icons\";\r\nimport styles from \"../../assets/jss/app-details/SubmitAppStyles\";\r\n// img icon\r\nimport { ReactComponent as ImgIcon } from \"../../assets/img/icons/image.svg\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// importing action\r\nimport {\r\n  publishAppAction,\r\n} from \"../../redux/action-reducers-epic/SnPublishAppAction\";\r\nimport {\r\n  UploadImagesAction,\r\n  UploadVideoAction,\r\n  UploadAppLogo,\r\n  getMyHostedApps,\r\n} from \"../../service/SnSkappService\";\r\nimport TagsInput from \"react-tagsinput\";\r\nimport \"./taginput.css\"; // If using WebPack and style-loader.\r\nimport imageCompression from \"browser-image-compression\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { setLoaderDisplay } from \"../../redux/action-reducers-epic/SnLoaderAction\";\r\nimport { useLoadHostedAppFromUrl } from \"../../hooks/useLoadHostedAppFromUrl\";\r\nimport { skylinkToUrl } from \"../../utils/SnUtility\";\r\nimport SnUpload from '../../uploadUtil/SnUpload';\r\nimport { UPLOAD_SOURCE_DEPLOY, UPLOAD_SOURCE_NEW_HOSTING, UPLOAD_SOURCE_NEW_HOSTING_IMG } from '../../utils/SnConstants';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\n\r\nconst useStyles = makeStyles(styles);\r\nconst optionsVersion = [\r\n  { value: \"1.0\", label: \"1.0\" },\r\n  { value: \"1.01\", label: \"1.01\" },\r\n  { value: \"1.02\", label: \"1.02\" },\r\n];\r\n\r\nconst appCatOptions = [\r\n  { value: \"Social\", label: \"Social\" },\r\n  { value: \"Video\", label: \"Video\" },\r\n  { value: \"Pictures\", label: \"Pictures\" },\r\n  { value: \"Music\", label: \"Music\" },\r\n  { value: \"Productivity\", label: \"Productivity\" },\r\n  { value: \"Utilities\", label: \"Utilities\" },\r\n  { value: \"Games\", label: \"Games\" },\r\n  { value: \"Blogs\", label: \"Blogs\" },\r\n  { value: \"Software\", label: \"Software\" },\r\n  { value: \"Livestream\", label: \"Livestream\" },\r\n  { value: \"Books\", label: \"Books\" },\r\n  { value: \"Marketplace\", label: \"Marketplace\" },\r\n  { value: \"Finance\", label: \"Finance\" },\r\n  { value: \"Portal\", label: \"Portal\" },\r\n];\r\n\r\nconst optionsAge = [\r\n  { value: \"18+\", label: \"18+\" },\r\n  { value: \"general\", label: \"general\" },\r\n];\r\n\r\nconst appStatus = [\r\n  { value: \"Alpha\", label: \"Alpha\" },\r\n  { value: \"Beta\", label: \"Beta\" },\r\n  { value: \"Live\", label: \"Live\" },\r\n];\r\n\r\nconst socialOption = [\r\n  { value: \"Discord\", label: \"Discord\" },\r\n  { value: \"Reddit\", label: \"Reddit\" },\r\n  { value: \"Twitter\", label: \"Twitter\" },\r\n  { value: \"Dlink\", label: \"Dlink\" },\r\n];\r\n\r\nconst reactSelectStyles = {\r\n  control: (styles) => ({\r\n    ...styles,\r\n    backgroundColor: \"white\",\r\n    height: 55,\r\n    boxShadow: 0,\r\n    borderColor: \"#D9E1EC\",\r\n    color: \"#000\",\r\n    borderRadius: 8,\r\n    \"@media only screen and (max-width: 1440px)\": {\r\n      height: 50,\r\n      // width: '100%',\r\n      fontSize: 16,\r\n    },\r\n    \"@media only screen and (max-width: 575px)\": {\r\n      height: 43,\r\n      // width: '100%',\r\n      fontSize: 14,\r\n    },\r\n    \"&:hover\": {\r\n      borderColor: \"#1DBF73\",\r\n    },\r\n  }),\r\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => ({\r\n    ...styles,\r\n    backgroundColor: isSelected ? \"#1DBF73\" : \"#fff\",\r\n    \"&:foucs\": {\r\n      backgroundColor: \"#1DBF73\",\r\n    },\r\n  }),\r\n};\r\n\r\nlet forImagesPreview = [];\r\nconst SubmitApp = () => {\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n  const dispatch = useDispatch();\r\n\r\n  const [verson, setVersion] = useState(\"\");\r\n  const [tags, setTags] = useState([]);\r\n  const { register, handleSubmit, control, setValue } = useForm();\r\n  const classes = useStyles();\r\n\r\n  // state for social links according to format\r\n  const [firstSocialLinkTitle, setfirstSocialLinkTitle] = useState(\"\");\r\n  const [secondSocialLinkTitle, setSecondSocialLinkTitle] = useState(\"\");\r\n  const [thirdSocialLinkTitle, setThirdSocialLinkTitle] = useState(\"\");\r\n  const [appDetail, setAppDetail] = useLoadHostedAppFromUrl();\r\n\r\n  const [firstSocialLink, setfirstSocialLink] = useState(\"\");\r\n  const [secondSocialLink, setSecondSocialLink] = useState(\"\");\r\n  const [thirdSocialLink, setThirdSocialLink] = useState(\"\");\r\n\r\n  const [videoObjt, setVideoObj] = useState({});\r\n\r\n  const [mandatory, setMandatory] = useState(false);\r\n  const [isSubmit, setIsSubmit] = useState(false);\r\n  const [isImageUploadFirst1, setIsImageUploadingFirst1] = useState(false);\r\n  const [isImageUploadFirst, setIsImageUploadingFirst] = useState(false);\r\n  const [isImageUploadSecond, setIsImageUploadingSecond] = useState(false);\r\n  const [isImageUploadThird, setIsImageUploadingThird] = useState(false);\r\n  const [isImageUploadFirstObj1, setIsImageUploadingFirstObj1] = useState({});\r\n  const [isImageUploadFirstObj, setIsImageUploadingFirstObj] = useState({});\r\n  const [isImageUploadSecondObj, setIsImageUploadingSecondObj] = useState({});\r\n  const [isImageUploadThirdObj, setIsImageUploadingThirdObj] = useState({});\r\n\r\n  const [appLogo, setAppLogo] = useState(\"\");\r\n  const [isLogoUploaded, setIsLogoUploaded] = useState(false);\r\n\r\n  const [isModelOpen, setIsModelOpen] = useState(false);\r\n  //require\r\n  const [isAppLogoTrue, setIsAppLogoTrue] = useState(false);\r\n  const [isAppNameTrue, setIsAppNameTrue] = useState(false);\r\n  const [isAppVersionTrue, setIsAppVersionTrue] = useState(false);\r\n  const [isAppUrlTrue, setIsAppUrlTrue] = useState(false);\r\n  const [isAppCatTrue, setIsAppCatTrue] = useState(false);\r\n  const [isAppDetailDesTrue, setIsAppDetailDesTrue] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const imgUploadEleRef = createRef();\r\n  const imgUploadEleRef1 = createRef();\r\n  const imgUploadEleRef2 = createRef();\r\n  const imgUploadEleRef3 = createRef();\r\n  const imgUploadEleRef4 = createRef();\r\n  \r\n  const SnLoader = useSelector((state) => state.snLoader);\r\n  \r\n  useEffect(() => {\r\n    if (appDetail?.content) {\r\n      const { appName, sourceCode, hns, imgThumbnailSkylink, imgSkylink, portalMinVersion } = appDetail.content;\r\n      setValue('appname', appName);\r\n      setValue('sourceCode', sourceCode);\r\n      setValue('appUrl', hns);\r\n      setValue('applogo', { thumbnail: `sia:${imgThumbnailSkylink}`, image: `sia:${imgSkylink}` });\r\n      setAppLogo({ thumbnail: `sia:${imgThumbnailSkylink}`, image: `sia:${imgSkylink}` });\r\n      setValue('verson', portalMinVersion);\r\n      // setVersion(portalMinVersion);\r\n    }\r\n  }, [appDetail]);\r\n\r\n  const handleReset = () => {\r\n    if (appDetail?.content) {\r\n      const { appName, sourceCode, hns, imgThumbnailSkylink, imgSkylink, portalMinVersion } = appDetail.content;\r\n      setValue('appname', appName);\r\n      setValue('sourceCode', sourceCode);\r\n      setValue('appUrl', hns);\r\n      setValue('verson', portalMinVersion);\r\n      setValue('applogo', { thumbnail: `sia:${imgThumbnailSkylink}`, image: `sia:${imgSkylink}` });\r\n      setAppLogo({ thumbnail: `sia:${imgThumbnailSkylink}`, image: `sia:${imgSkylink}` });\r\n    } else {\r\n      setValue('appname', '');\r\n      setValue('sourceCode', '');\r\n      setValue('appUrl', '');\r\n      setValue('applogo', '');\r\n      setValue('verson', '');\r\n    }\r\n    setValue(\"demoUrl\", \"\");\r\n    setValue(\"category\", \"\");\r\n    setValue(\"age\", \"\");\r\n    setValue(\"appStatus\", \"\");\r\n    setValue(\"firstSocialLinkTitle\", \"\");\r\n    setValue(\"secondSocialLinkTitle\", \"\");\r\n    setValue(\"thirdSocialLinkTitle\", \"\");\r\n    setSelectedOption(\"\");\r\n    setVideoObj({});\r\n    setAppLogo(\"\");\r\n    setTags([]);\r\n    setfirstSocialLinkTitle(\"\");\r\n    setSecondSocialLinkTitle(\"\");\r\n    setThirdSocialLinkTitle(\"\");\r\n    setfirstSocialLink(\"\");\r\n    setSecondSocialLink(\"\");\r\n    setThirdSocialLink(\"\");\r\n    setValue('appDescription', '');\r\n    setValue('releaseNotes', '');\r\n    setIsImageUploadingFirst1({});\r\n    setIsImageUploadingFirstObj({});\r\n    setIsImageUploadingSecondObj({});\r\n    setIsImageUploadingThirdObj({});\r\n  }\r\n  //manage submit loader\r\n  const manageSubmitLoader = (val) => {\r\n    setIsSubmit(val);\r\n  };\r\n\r\n  //manage loader to upload images\r\n  //form submit function\r\n  const onSubmit = (data) => {\r\n    console.log(\"🚀 ~ file: SubmitApp.js ~ line 167 ~ onSubmit ~ data\", data)\r\n    if (appLogo === \"\" && appDetail?.content.imgThumbnailSkylink == \"\") {\r\n      setIsAppLogoTrue(true);\r\n      // setMandatory(true);\r\n    } else if (data.appname === \"\") {\r\n      setIsAppNameTrue(true);\r\n    } else if (data.verson === \"\") {\r\n      setIsAppVersionTrue(true);\r\n    } else if (data.appUrl === \"\") {\r\n      setIsAppUrlTrue(true);\r\n    } else if (data.category === null) {\r\n      setIsAppCatTrue(true);\r\n    } else if (data.appDescription === \"\") {\r\n      setIsAppDetailDesTrue(true);\r\n    } else {\r\n      setIsSubmit(true);\r\n      setMandatory(true);\r\n      dispatch(setLoaderDisplay(true))\r\n      let obj = {\r\n        $type: \"skapp\",\r\n        $subtype: \"published\",\r\n        id: appDetail?.id || uuidv4(),\r\n        version: data.verson,\r\n        ts: new Date().getTime(),\r\n        content: data,\r\n      };\r\n      let forImagesPreviewObj = [];\r\n      if (Object.keys(isImageUploadFirstObj1).length) {\r\n        forImagesPreviewObj.push(isImageUploadFirstObj1);\r\n      } \r\n      if (Object.keys(isImageUploadFirstObj).length) {\r\n        forImagesPreviewObj.push(isImageUploadFirstObj);\r\n      } \r\n      if (Object.keys(isImageUploadSecondObj).length) {\r\n        forImagesPreviewObj.push(isImageUploadSecondObj);\r\n      } \r\n      if (Object.keys(isImageUploadThirdObj).length) {\r\n        forImagesPreviewObj.push(isImageUploadThirdObj);\r\n      } \r\n      let imagesPrevieObj = {\r\n        aspectRatio: 0.5625,\r\n        images: forImagesPreviewObj\r\n      };\r\n      obj.content.skappLogo = appLogo;\r\n      obj.content.category = obj.content.category && obj.content.category.value;\r\n      obj.content.defaultPath = \"index.html or EMPTY\";\r\n      obj.content.age = obj.content.age && obj.content.age.value;\r\n      obj.content.previewVideo = videoObjt;\r\n      obj.content.appStatus = obj.content.appStatus && obj.content.appStatus.value;\r\n      obj.content.tags = tags;\r\n      obj.content.previewImages = imagesPrevieObj;\r\n      obj.content.history = [\"list of skylinks\"];\r\n      obj.content.supportDetails = \"\";\r\n\r\n      obj.content.connections = {\r\n        [firstSocialLinkTitle]: firstSocialLink,\r\n        [secondSocialLinkTitle]: secondSocialLink,\r\n        [thirdSocialLinkTitle]: thirdSocialLink,\r\n      };\r\n\r\n      dispatch(publishAppAction(obj));\r\n      setMandatory(false);\r\n      setIsSubmit(false);\r\n      setIsModelOpen(true);\r\n    }\r\n  };\r\n\r\n  const getUploadedFile = (file) => {\r\n    forImagesPreview.push(file);\r\n  };\r\n\r\n  const [isVideoUploaded, setIsVideoUploaded] = useState(false);\r\n\r\n  //manage loader for videoUpload\r\n  const videoUploadLoader = (val) => {\r\n    setIsVideoUploaded(val);\r\n  };\r\n\r\n  //manage image upload loaders\r\n\r\n  const firstImageLoader = (val) => {\r\n    setIsImageUploadingFirst(val);\r\n  };\r\n\r\n  const secondImageLoader = (val) => {\r\n    setIsImageUploadingSecond(val);\r\n  };\r\n\r\n  const thirdImageLoader = (val) => {\r\n    setIsImageUploadingThird(val);\r\n  };\r\n\r\n  //for uploading images and videos\r\n  const onChangeHandlerForImages = (file, id) => {\r\n    if (id === \"img1\") {\r\n      setIsImageUploadingFirst(true);\r\n    } else if (id === \"img2\") {\r\n      setIsImageUploadingSecond(true);\r\n    } else {\r\n      setIsImageUploadingThird(true);\r\n    }\r\n\r\n    var image = document.getElementById(id);\r\n    var reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = function (oFREvent) {\r\n      var img = document.createElement(\"img\");\r\n      img.setAttribute(\"width\", \"100%\");\r\n      img.setAttribute(\"height\", \"160px\");\r\n      image.append(img);\r\n      img.src = oFREvent.target.result;\r\n    };\r\n\r\n    UploadImagesAction(file, getUploadedFile,\r\n      id === \"img1\"\r\n        ? firstImageLoader\r\n        : id === \"img2\"\r\n          ? secondImageLoader\r\n          : thirdImageLoader\r\n    );\r\n  };\r\n\r\n  //\r\n  const getUploadVideoFile = (file) => {\r\n    setVideoObj(file);\r\n  };\r\n\r\n  const onChangeHandlerForVideos = (file) => {\r\n    var fileReader = new FileReader();\r\n    setIsVideoUploaded(true);\r\n    fileReader.onload = function () {\r\n      var blob = new Blob([fileReader.result], { type: file.type });\r\n      var url = URL.createObjectURL(blob);\r\n      var video = document.createElement(\"video\");\r\n      var timeupdate = function () {\r\n        if (snapImage()) {\r\n          video.removeEventListener(\"timeupdate\", timeupdate);\r\n          video.pause();\r\n        }\r\n      };\r\n      video.addEventListener(\"loadeddata\", function () {\r\n        if (snapImage()) {\r\n          video.removeEventListener(\"timeupdate\", timeupdate);\r\n        }\r\n      });\r\n      var snapImage = async function () {\r\n        var canvas = document.createElement(\"canvas\");\r\n        canvas.width = video.videoWidth;\r\n        canvas.height = video.videoHeight;\r\n        canvas.getContext(\"2d\").drawImage(video, 0, 0, canvas.width, canvas.height);\r\n        var image = canvas.toDataURL();\r\n\r\n        const thumb = await imageCompression.canvasToFile(canvas, \"image/jpeg\");\r\n\r\n\r\n        UploadVideoAction(file, thumb, getUploadVideoFile, videoUploadLoader)\r\n\r\n        var success = image.length > 100000;\r\n        if (success) {\r\n          var img = document.createElement(\"img\");\r\n          img.src = image;\r\n          document.getElementById(\"vid\").appendChild(img);\r\n          URL.revokeObjectURL(url);\r\n        }\r\n        return success;\r\n      };\r\n      video.addEventListener(\"timeupdate\", timeupdate);\r\n      video.preload = \"metadata\";\r\n      video.src = url;\r\n      // Load video in Safari / IE11\r\n      video.muted = true;\r\n      video.playsInline = true;\r\n      video.play();\r\n    };\r\n    fileReader.readAsArrayBuffer(file);\r\n  };\r\n\r\n  const setLogoUploaded = (file) => {\r\n    console.log(file);\r\n    setAppLogo(file);\r\n  };\r\n\r\n  const logoLoaderHandler = (val) => {\r\n    setIsLogoUploaded(val);\r\n  };\r\n\r\n  const UploadLogoFunction = (file) => {\r\n    console.log(file);\r\n    setIsLogoUploaded(true);\r\n    // var image = document.getElementById(\"logo\");\r\n    // var reader = new FileReader();\r\n    // reader.readAsDataURL(file);\r\n    // reader.onload = function (oFREvent) {\r\n    //   var img = document.createElement(\"img\");\r\n    //   img.setAttribute(\"width\", \"100%\");\r\n    //   img.setAttribute(\"height\", \"160px\");\r\n    //   image.append(img);\r\n    //   img.src = oFREvent.target.result;\r\n    // };\r\n    // UploadAppLogo(file, setLogoUploaded, logoLoaderHandler);\r\n  };\r\n  const handleImgUpload = (obj) => {\r\n    let newObj = {\r\n      thumbnail: `sia:${obj.thumbnail}`,\r\n      image: `sia:${obj.skylink}`,\r\n    };\r\n    setAppLogo(newObj);\r\n    setIsLogoUploaded(false);\r\n    // formik.setFieldValue(\"imgSkylink\", obj.skylink, true);\r\n    // formik.setFieldValue(\"imgThumbnailSkylink\", obj.thumbnail, true)\r\n  };\r\n  const handleFirstImageUpload = (obj) => {\r\n    let newObj = {\r\n      thumbnail: `sia:${obj.thumbnail}`,\r\n      image: `sia:${obj.skylink}`,\r\n    };\r\n    setIsImageUploadingFirstObj(newObj);\r\n    setIsImageUploadingFirst(false);\r\n  };\r\n  const handleFirst1ImageUpload = (obj) => {\r\n    let newObj = {\r\n      thumbnail: `sia:${obj.thumbnail}`,\r\n      image: `sia:${obj.skylink}`,\r\n    };\r\n    setIsImageUploadingFirstObj1(newObj);\r\n    setIsImageUploadingFirst1(false);\r\n  };\r\n  const handleSecondImageUpload = (obj) => {\r\n    let newObj = {\r\n      thumbnail: `sia:${obj.thumbnail}`,\r\n      image: `sia:${obj.skylink}`,\r\n    };\r\n    setIsImageUploadingSecondObj(newObj);\r\n    setIsImageUploadingSecond(false);\r\n  };\r\n\r\n  const handleThirdImageUpload = (obj) => {\r\n    let newObj = {\r\n      thumbnail: `sia:${obj.thumbnail}`,\r\n      image: `sia:${obj.skylink}`,\r\n    };\r\n    setIsImageUploadingThirdObj(newObj);\r\n    setIsImageUploadingThird(false);\r\n  };\r\n\r\n  const handleDropZoneClick = (evt, dropZoneRef) => {\r\n    evt.preventDefault();\r\n    evt.stopPropagation();\r\n    // setIsLogoUploaded(true);\r\n    dropZoneRef.current.gridRef.current.click();\r\n  };\r\n\r\n  // get\r\n\r\n  return (\r\n    <Box>\r\n      {mandatory ? <Alert severity=\"error\">Fill all fields!</Alert> : null}\r\n      <Box\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"space-between\"\r\n        marginTop=\"7px\"\r\n      >\r\n        <h1 className={classes.h1}>Publish App</h1>\r\n        <Box className={classes.btnBox}>\r\n          <Button className={classes.cancelBtn} onClick={handleReset}> Reset Form </Button>\r\n          <Button\r\n            disabled={isSubmit}\r\n            className={classes.submitBtn}\r\n            onClick={handleSubmit(onSubmit)}\r\n          >\r\n            <Add />\r\n            {isSubmit ? (\r\n              <Loader type=\"Oval\" color=\"#FFFFFF\" height={15} width={15} />\r\n            ) : (\r\n              \"Submit\"\r\n            )}\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n\r\n\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={false || (isModelOpen && !SnLoader)}\r\n        onClose={(e)=>setIsModelOpen(false)}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={(isModelOpen && !SnLoader)}>\r\n          <Box className={classes.shareCardContainer}>\r\n            <Typography component='h2' className={classes.modalTitle}>\r\n              App Published Successfully\r\n            </Typography>\r\n            <Typography component=\"p\">\r\n              Now you will be redirected to AppStore page, If you want to stay on same page click Cancel Button\r\n            </Typography>\r\n            <Box style={{ textAlign: 'right' }}>\r\n              <Button onClick={(e)=> history.push('/apps')} className={classes.okBtn}>\r\n                Ok\r\n              </Button>\r\n              <Button onClick={(e)=>setIsModelOpen(false)} className={classes.closeBtn}>\r\n                Cancel\r\n              </Button>\r\n            </Box>\r\n          </Box>\r\n        </Fade>\r\n      </Modal>\r\n      <Box component=\"form\">\r\n        <Box>\r\n          <label className={classes.label}>Site Logo</label>\r\n          <div className=\"d-none\">\r\n            <SnUpload\r\n              name=\"files\"\r\n              source={UPLOAD_SOURCE_NEW_HOSTING_IMG}\r\n              ref={imgUploadEleRef}\r\n              directoryMode={false}\r\n              onUpload={(e) => handleImgUpload(e)}\r\n              uploadStarted={(e) => setIsLogoUploaded(e)}\r\n            />\r\n          </div>\r\n          <div className={classes.siteLogo} onClick={(evt) => handleDropZoneClick(evt, imgUploadEleRef)} >\r\n            {!isLogoUploaded && !Object.keys(appLogo).length && !appDetail && <Box style={{ flexDirection: \"column\", justifyItems: 'center' }}> \r\n              <Box style={{ position: \"relative\", textAlign: 'center' }}>\r\n                <ImgIcon />\r\n              </Box> \r\n              <Box style={{ position: \"relative\", color: \"grey\", textAlign: 'center' }}>click to upload Image</Box> \r\n              </Box>}\r\n            {!isLogoUploaded && (Object.keys(appLogo).length || appDetail) ? <img\r\n              alt=\"app\"\r\n              src={skylinkToUrl(appLogo?.thumbnail || appDetail?.content.imgThumbnailSkylink)}\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"160px\",\r\n                // border: props.arrSelectedAps.indexOf(app) > -1 ? \"2px solid #1ed660\" : null,\r\n              }}\r\n              onClick={(evt) => handleDropZoneClick(evt, imgUploadEleRef)}\r\n              name=\"1\"\r\n            /> : null\r\n            }\r\n            {isLogoUploaded && (\r\n              <Loader\r\n                type=\"Oval\"\r\n                color=\"#57C074\"\r\n                height={50}\r\n                width={50}\r\n              />\r\n            )}\r\n          </div>\r\n          <div className={classes.inputGuide}>\r\n            Max. size of 5 MB in: JPG or PNG. 300x500 or larger recommended\r\n          </div>\r\n          <input type=\"text\" hidden />\r\n        </Box>\r\n        {isAppLogoTrue && (\r\n          <div className=\"required-field\">This field is required</div>\r\n        )}\r\n        <Box\r\n          display=\"flex\"\r\n          className={`${classes.formRow} ${classes.formRow1}`}\r\n        >\r\n          <Box\r\n            className={`${classes.inputContainer} ${classes.max33}`}\r\n            flex={1}\r\n          >\r\n            <label>App Name <Tooltip className=\"iconLablel\" title=\"site logo\"><HelpOutline /></Tooltip></label>\r\n            <input\r\n              className={classes.input}\r\n              placeholder=\"\"\r\n              name=\"appname\"\r\n              ref={register}\r\n            />\r\n            {isAppNameTrue && (\r\n              <div className=\"required-field\">This field is required</div>\r\n            )}\r\n          </Box>\r\n          <Box className={`${classes.inputContainer} ${classes.max33}`} flex={1}>\r\n            <label>App URL(Skylink) <Tooltip className=\"iconLablel\" title=\"site logo\"><HelpOutline /></Tooltip></label>\r\n            <input\r\n              name=\"appUrl\"\r\n              ref={register}\r\n              className={classes.input}\r\n              placeholder=\"https://[hns name].hns\"\r\n            />\r\n            {isAppUrlTrue && (\r\n              <div className=\"required-field\">This field is required</div>\r\n            )}\r\n          </Box>\r\n          <Box className={`${classes.inputContainer}`} flex={1}>\r\n            <label>App Version <Tooltip className=\"iconLablel\" title=\"site logo\"><HelpOutline /></Tooltip></label>\r\n            <input\r\n              name=\"verson\"\r\n              ref={register}\r\n              className={classes.input}\r\n              placeholder=\"Version\"\r\n            />\r\n            {isAppVersionTrue && (\r\n              <div className=\"required-field\">This field is required</div>\r\n            )}\r\n          </Box>\r\n          <Box className={`${classes.inputContainer} ${classes.selectVersion}`}>\r\n            <label>App Status <Tooltip className=\"iconLablel\" title=\"site logo\"><HelpOutline /></Tooltip></label>\r\n            <Box>\r\n              <Controller\r\n                isMulti={false}\r\n                as={Select}\r\n                ref={register}\r\n                control={control}\r\n                name=\"appStatus\"\r\n                defaultValue={selectedOption}\r\n                onChange={setSelectedOption}\r\n                options={appStatus}\r\n                styles={reactSelectStyles}\r\n              />\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n\r\n        <Box\r\n          display=\"flex\"\r\n          className={`${classes.formRow} ${classes.formRow2}`}\r\n        >\r\n          <Box className={`${classes.inputContainer}`} flex={0.38}>\r\n            <label>App Category <Tooltip className=\"iconLablel\" title=\"site logo\"><HelpOutline /></Tooltip></label>\r\n            <Box>\r\n              <Controller\r\n                as={Select}\r\n                control={control}\r\n                ref={register}\r\n                name=\"category\"\r\n                defaultValue={selectedOption}\r\n                onChange={setSelectedOption}\r\n                options={appCatOptions}\r\n                styles={reactSelectStyles}\r\n              />\r\n              {isAppCatTrue && (\r\n                <div className=\"required-field\">This field is required</div>\r\n              )}\r\n            </Box>\r\n          </Box>\r\n          <Box className={classes.inputContainerTag} flex={1}>\r\n            <label>Custom Tags <Tooltip className=\"iconLablel\" title=\"site logo\"><HelpOutline /></Tooltip></label>\r\n            <TagsInput\r\n              value={tags}\r\n              className={`${classes.inputTag}`}\r\n              onChange={(tags) => setTags(tags)}\r\n            />\r\n            {/* <input\r\n              className={classes.input}\r\n              name=\"tags\"\r\n              ref={register}\r\n              value=\"Skylink\"\r\n            /> */}\r\n          </Box>\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          className={`${classes.formRow} ${classes.formRow2}`}\r\n        >\r\n          <Box className={classes.inputContainer} flex={1}>\r\n            <label>Git URL <Tooltip className=\"iconLablel\" title=\"site logo\"><HelpOutline /></Tooltip></label>\r\n            <input\r\n              name=\"sourceCode\"\r\n              ref={register}\r\n              className={classes.input}\r\n              placeholder=\"https://github.com\"\r\n            />\r\n          </Box>\r\n          <Box className={classes.inputContainer} flex={1}>\r\n            <label>Demo URL</label>\r\n            <input\r\n              className={classes.input}\r\n              name=\"demoUrl\"\r\n              ref={register}\r\n              placeholder=\"https://www.demo.com/UJJ5Rgbu2TM\"\r\n            />\r\n          </Box>\r\n          <Box className={`${classes.inputContainer} ${classes.selectVersion}`}>\r\n            <label>Age Restriction? <Tooltip className=\"iconLablel\" title=\"site logo\"><HelpOutline /></Tooltip></label>\r\n            <Box>\r\n              <Controller\r\n                as={Select}\r\n                name=\"age\"\r\n                ref={register}\r\n                control={control}\r\n                defaultValue={selectedOption}\r\n                onChange={([selected]) => {\r\n                  // React Select return object instead of value for selection\r\n                  return { value: selected };\r\n                }}\r\n                options={optionsAge}\r\n                styles={reactSelectStyles}\r\n              />\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n        <div className={classes.OneRowInput}>\r\n          <div>\r\n            <label className={classes.previewImgLabel} >\r\n              Preview Video/Images\r\n              <span>\r\n                {\" \"}\r\n                Max. size of 5 MB in: JPG or PNG. 1750x900 or larger recommended\r\n              </span> <Tooltip className=\"iconLablel\" title=\"site logo\"><HelpOutline /></Tooltip>\r\n            </label>\r\n          </div>\r\n          <Grid container spacing={2}>\r\n            <Grid item md={3} sm={6} xs={6}>\r\n              <Box style={{ position: \"relative\" }} >\r\n              <div className=\"d-none\">\r\n                  <SnUpload\r\n                    name=\"files\"\r\n                    source={UPLOAD_SOURCE_DEPLOY}\r\n                    ref={imgUploadEleRef1}\r\n                    directoryMode={false}\r\n                    onUpload={(e) => handleFirst1ImageUpload(e)}\r\n                    uploadStarted={(e) => setIsImageUploadingFirst1(e)}\r\n                  />\r\n                </div>\r\n                <div className={classes.previewImg} onClick={(evt) => handleDropZoneClick(evt, imgUploadEleRef1)} >\r\n                  {!isImageUploadFirst1 && !Object.keys(isImageUploadFirstObj1).length && <Box style={{ flexDirection: \"column\", justifyItems: 'center' }}> \r\n                      <Box style={{ position: \"relative\", textAlign: 'center' }}>\r\n                        <ImgIcon />\r\n                      </Box> \r\n                      <Box style={{ position: \"relative\", color: \"grey\", textAlign: 'center' }}>click to upload Image</Box> \r\n                      </Box>}\r\n                  {!isImageUploadFirst1 && Object.keys(isImageUploadFirstObj1).length ? <img\r\n                    alt=\"app\"\r\n                    src={skylinkToUrl(isImageUploadFirstObj1?.thumbnail)}\r\n                    style={{\r\n                      width: \"250px\",\r\n                      height: \"150px\",\r\n                      // border: props.arrSelectedAps.indexOf(app) > -1 ? \"2px solid #1ed660\" : null,\r\n                    }}\r\n                    onClick={(evt) => handleDropZoneClick(evt, imgUploadEleRef1)}\r\n                    name=\"1\"\r\n                  /> : null\r\n                  }\r\n                  {isImageUploadFirst1 && (\r\n                    <Loader\r\n                      type=\"Oval\"\r\n                      color=\"#57C074\"\r\n                      height={50}\r\n                      width={50}\r\n                    />\r\n                  )}\r\n                </div>\r\n                <input type=\"text\" hidden />\r\n              </Box>\r\n            </Grid>\r\n\r\n            <Grid item md={3} sm={6} xs={6}>\r\n              <Box style={{ position: \"relative\" }} \r\n                >\r\n                <div className=\"d-none\">\r\n                  <SnUpload\r\n                    name=\"files\"\r\n                    source={UPLOAD_SOURCE_DEPLOY}\r\n                    ref={imgUploadEleRef2}\r\n                    directoryMode={false}\r\n                    onUpload={(e) => handleFirstImageUpload(e)}\r\n                    uploadStarted={(e) => setIsImageUploadingFirst(e)}\r\n                  />\r\n                </div>\r\n                <div className={classes.previewImg} onClick={(evt) => handleDropZoneClick(evt, imgUploadEleRef2)} >\r\n                  {!isImageUploadFirst && !Object.keys(isImageUploadFirstObj).length && <Box style={{ flexDirection: \"column\", justifyItems: 'center' }}> \r\n                      <Box style={{ position: \"relative\", textAlign: 'center' }}>\r\n                        <ImgIcon />\r\n                      </Box> \r\n                      <Box style={{ position: \"relative\", color: \"grey\", textAlign: 'center' }}>click to upload Image</Box> \r\n                      </Box>}\r\n                  {!isImageUploadFirst && Object.keys(isImageUploadFirstObj).length ? <img\r\n                    alt=\"app\"\r\n                    src={skylinkToUrl(isImageUploadFirstObj?.thumbnail)}\r\n                    style={{\r\n                      width: \"250px\",\r\n                      height: \"150px\",\r\n                      // border: props.arrSelectedAps.indexOf(app) > -1 ? \"2px solid #1ed660\" : null,\r\n                    }}\r\n                    onClick={(evt) => handleDropZoneClick(evt, imgUploadEleRef2)}\r\n                    name=\"1\"\r\n                  /> : null\r\n                  }\r\n                  {isImageUploadFirst && (\r\n                    <Loader\r\n                      type=\"Oval\"\r\n                      color=\"#57C074\"\r\n                      height={50}\r\n                      width={50}\r\n                    />\r\n                  )}\r\n                </div>\r\n                <input type=\"text\" hidden />\r\n              </Box>\r\n            </Grid>\r\n\r\n            <Grid item md={3} sm={6} xs={6}>\r\n              <Box\r\n                style={{ position: \"relative\" }}\r\n                id=\"img2\"\r\n                \r\n              >\r\n                <div className=\"d-none\">\r\n                  <SnUpload\r\n                    name=\"files\"\r\n                    source={UPLOAD_SOURCE_DEPLOY}\r\n                    ref={imgUploadEleRef3}\r\n                    directoryMode={false}\r\n                    onUpload={(e) => handleSecondImageUpload(e)}\r\n                    uploadStarted={(e) => setIsImageUploadingSecond(e)}\r\n                  />\r\n                </div>\r\n                  <div className={classes.previewImg} onClick={(evt) => handleDropZoneClick(evt, imgUploadEleRef3)} >\r\n                    {!isImageUploadSecond && !Object.keys(isImageUploadSecondObj).length && <Box style={{ flexDirection: \"column\", justifyItems: 'center' }}> \r\n                      <Box style={{ position: \"relative\", textAlign: 'center' }}>\r\n                        <ImgIcon />\r\n                      </Box> \r\n                      <Box style={{ position: \"relative\", color: \"grey\", textAlign: 'center' }}>click to upload Image</Box> \r\n                      </Box>}\r\n                    {!isImageUploadSecond && Object.keys(isImageUploadSecondObj).length ? <img\r\n                      alt=\"app\"\r\n                      src={skylinkToUrl(isImageUploadSecondObj?.thumbnail)}\r\n                      style={{\r\n                        width: \"250px\",\r\n                        height: \"150px\",\r\n                        // border: props.arrSelectedAps.indexOf(app) > -1 ? \"2px solid #1ed660\" : null,\r\n                      }}\r\n                      onClick={(evt) => handleDropZoneClick(evt, imgUploadEleRef3)}\r\n                      name=\"1\"\r\n                    /> : null\r\n                    }\r\n                    {isImageUploadSecond && (\r\n                      <Loader\r\n                        type=\"Oval\"\r\n                        color=\"#57C074\"\r\n                        height={50}\r\n                        width={50}\r\n                      />\r\n                    )}\r\n                  </div>\r\n                  <input type=\"text\" hidden />\r\n              </Box>\r\n\r\n            </Grid>\r\n            <Grid item md={3} sm={6} xs={6}>\r\n              <Box\r\n                style={{ position: \"relative\" }}\r\n                id=\"img3\"\r\n                \r\n              >\r\n                <div className=\"d-none\">\r\n                <SnUpload\r\n                  name=\"files\"\r\n                  source={UPLOAD_SOURCE_DEPLOY}\r\n                  ref={imgUploadEleRef4}\r\n                  directoryMode={false}\r\n                  onUpload={(e) => handleThirdImageUpload(e)}\r\n                  uploadStarted={(e) => setIsImageUploadingThird(e)}\r\n                />\r\n              </div>\r\n                <div className={classes.previewImg} onClick={(evt) => handleDropZoneClick(evt, imgUploadEleRef4)} >\r\n                  {!isImageUploadThird && !Object.keys(isImageUploadThirdObj).length && <Box style={{ flexDirection: \"column\", justifyItems: 'center' }}> \r\n                      <Box style={{ position: \"relative\", textAlign: 'center' }}>\r\n                        <ImgIcon />\r\n                      </Box> \r\n                      <Box style={{ position: \"relative\", color: \"grey\", textAlign: 'center' }}>click to upload Image</Box> \r\n                      </Box>}\r\n                  {!isImageUploadThird && Object.keys(isImageUploadThirdObj).length ? <img\r\n                    alt=\"app\"\r\n                    src={skylinkToUrl(isImageUploadThirdObj?.thumbnail)}\r\n                    style={{\r\n                      width: \"250px\",\r\n                      height: \"150px\",\r\n                      // border: props.arrSelectedAps.indexOf(app) > -1 ? \"2px solid #1ed660\" : null,\r\n                    }}\r\n                    onClick={(evt) => handleDropZoneClick(evt, imgUploadEleRef4)}\r\n                    name=\"1\"\r\n                  /> : null\r\n                  }\r\n                  {isImageUploadThird && (\r\n                    <Loader\r\n                      type=\"Oval\"\r\n                      color=\"#57C074\"\r\n                      height={50}\r\n                      width={50}\r\n                    />\r\n                  )}\r\n                </div>\r\n                <input type=\"text\" hidden />\r\n              </Box>\r\n            </Grid>\r\n            {/* <Grid item md={3} sm={6} xs={6}>\r\n              <Box ></Box>\r\n            </Grid> */}\r\n          </Grid>\r\n        </div>\r\n        <div className={classes.OneRowInput}>\r\n          <div>\r\n            <label className={classes.textareaLabel}>\r\n              App Description\r\n              <span>Detailed summary of your app</span><Tooltip className=\"iconLablel\" title=\"site logo\"><HelpOutline /></Tooltip>\r\n            </label>\r\n          </div>\r\n          <Box position=\"relative\">\r\n            <TextareaAutosize\r\n              name=\"appDescription\"\r\n              ref={register}\r\n              className={classes.textarea}\r\n              aria-label=\"minimum height\"\r\n              rowsMin={6}\r\n              maxLength={5000}\r\n              // value=\"Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et.\"\r\n              placeholder=\"Detailed summary of your app\"\r\n            />\r\n            <span className={classes.maxChar}>0/5000</span>\r\n          </Box>\r\n          {isAppDetailDesTrue && (\r\n            <div className=\"required-field\">Max 5000 Characters</div>\r\n          )}\r\n        </div>\r\n        <div className={classes.OneRowInput}>\r\n          <div>\r\n            <label className={classes.textareaLabel}>\r\n              Release Notes <Tooltip className=\"iconLablel\" title=\"site logo\"><HelpOutline /></Tooltip>\r\n              {/* <span>This will go on App Card.</span> */}\r\n            </label>\r\n          </div>\r\n          <Box position=\"relative\">\r\n            <TextareaAutosize\r\n              className={classes.textarea}\r\n              aria-label=\"minimum height\"\r\n              rowsMin={4}\r\n              ref={register}\r\n              maxLength={5000}\r\n              name=\"releaseNotes\"\r\n              // value=\"Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et.\"\r\n              placeholder=\"Write your Comment\"\r\n            />\r\n            <span className={classes.maxChar}>0/5000</span>\r\n          </Box>\r\n          {isAppDetailDesTrue && (\r\n            <div className=\"required-field\">Max 5000 Characters</div>\r\n          )}\r\n        </div>\r\n        <div className={classes.OneRowInput}>\r\n          <div>\r\n            <label className={classes.textareaLabel}>Social Connections <Tooltip className=\"iconLablel\" title=\"site logo\"><HelpOutline /></Tooltip></label>\r\n          </div>\r\n          <Box position=\"relative\">\r\n            <Grid container spacing={2}>\r\n              <Grid item md={6} lg={4} sm={12} xs={12}>\r\n                <Box display=\"flex\" className={classes.socialOptionContainer}>\r\n                  <Controller\r\n                    isMulti={false}\r\n                    as={Select}\r\n                    ref={register}\r\n                    control={control}\r\n                    classNamePrefix=\"socialMedia\"\r\n                    className={classes.socilaMediaSelect}\r\n                    name=\"firstSocialLinkTitle\"\r\n                    defaultValue={firstSocialLinkTitle}\r\n                    onChange={(e) => setfirstSocialLinkTitle(e.value)}\r\n                    options={socialOption}\r\n                    styles={reactSelectStyles}\r\n                  />\r\n                  <input\r\n                    value={firstSocialLink}\r\n                    placeholder=\"\"\r\n                    onChange={(e) => setfirstSocialLink(e.target.value)}\r\n                  />\r\n                </Box>\r\n              </Grid>\r\n              <Grid item md={6} lg={4} sm={12} xs={12}>\r\n                <Box display=\"flex\" className={classes.socialOptionContainer}>\r\n                  <Controller\r\n                    isMulti={false}\r\n                    as={Select}\r\n                    ref={register}\r\n                    control={control}\r\n                    classNamePrefix=\"socialMedia\"\r\n                    className={classes.socilaMediaSelect}\r\n                    name=\"secondSocialLinkTitle\"\r\n                    defaultValue={secondSocialLinkTitle}\r\n                    onChange={(e) => setSecondSocialLinkTitle(e.value)}\r\n                    options={socialOption}\r\n                    styles={reactSelectStyles}\r\n                  />\r\n                  <input\r\n                    placeholder=\"\"\r\n                    value={secondSocialLink}\r\n                    onChange={(e) => setSecondSocialLink(e.target.value)}\r\n                  />\r\n                </Box>\r\n              </Grid>\r\n              <Grid item md={6} lg={4} sm={12} xs={12}>\r\n                <Box display=\"flex\" className={classes.socialOptionContainer}>\r\n                  <Controller\r\n                    isMulti={false}\r\n                    as={Select}\r\n                    ref={register}\r\n                    control={control}\r\n                    classNamePrefix=\"socialMedia\"\r\n                    className={classes.socilaMediaSelect}\r\n                    name=\"thirdSocialLinkTitle\"\r\n                    defaultValue={thirdSocialLinkTitle}\r\n                    onChange={(e) => setThirdSocialLinkTitle(e.value)}\r\n                    options={socialOption}\r\n                    styles={reactSelectStyles}\r\n                  />\r\n                  <input\r\n                    placeholder=\"\"\r\n                    value={thirdSocialLink}\r\n                    onChange={(e) => setThirdSocialLink(e.target.value)}\r\n                  />\r\n                </Box>\r\n              </Grid>\r\n\r\n              <Grid item md={6} lg={4} style={{ alignSelf: \"center\" }}>\r\n                <Button\r\n                  className={classes.button}\r\n                  onClick={handleSubmit(onSubmit)}\r\n                  disabled={isSubmit}\r\n                >\r\n                  {isSubmit ? (\r\n                    <Loader\r\n                      type=\"Oval\"\r\n                      color=\"#FFFFFF\"\r\n                      height={15}\r\n                      width={15}\r\n                    />\r\n                  ) : (\r\n                    \"Submit\"\r\n                  )}\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </div>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SubmitApp;\r\n","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\Setting\\Settings.js",["801","802","803","804","805","806","807","808","809","810"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Tabs from '@material-ui/core/Tabs'\r\nimport Tab from '@material-ui/core/Tab'\r\nimport Box from '@material-ui/core/Box'\r\nimport { Button, Snackbar } from '@material-ui/core';\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n// import { Add } from '@material-ui/icons'\r\nimport Profile from './Profile';\r\nimport GlobalPrefrences from './globalPrefrences';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setLoaderDisplay } from '../../redux/action-reducers-epic/SnLoaderAction';\r\n\r\nimport * as Yup from 'yup';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box>\r\n                    {children}\r\n                </Box>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n}\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    }\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: 'transparent',\r\n        backgroundColor: 'transparent',\r\n        '& .MuiTabs-indicator': {\r\n            backgroundColor: 'transparent',\r\n        },\r\n        '& .MuiTab-root': {\r\n            fontWeight: 600,\r\n            minWidth: 85,\r\n            color: '#869EA6',\r\n            \"&.Mui-selected\": {\r\n                color: '#fff'\r\n            }\r\n        }\r\n    },\r\n    h1: {\r\n        fontSize: '28px',\r\n        '@media only screen and (max-width: 575px)': {\r\n            fontSize: 18\r\n        }\r\n    },\r\n    submitBtn: {\r\n        background: '#1DBF73!important',\r\n        color: '#fff',\r\n        paddingLeft: '1rem',\r\n        paddingRight: '1rem',\r\n        display: 'inlin-flex',\r\n        alignItems: 'center',\r\n        minWidth: 130,\r\n        '& svg': {\r\n            fontSize: '19px',\r\n            marginRight: '5px'\r\n        },\r\n        '@media only screen and (max-width: 575px)': {\r\n            fontSize: '12px',\r\n\r\n            paddingLeft: '.5rem',\r\n            paddingRight: '.5rem',\r\n            minWidth: 70,\r\n        }\r\n    },\r\n    tabNavigation: {\r\n        boxShadow: 'none',\r\n        background: '#12141D',\r\n    }\r\n}))\r\n\r\n\r\nconst Settings = () => {\r\n    const classes = useStyles()\r\n    const [value, setValue] = React.useState(0);\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue)\r\n    }\r\n    return (\r\n        <Fragment>\r\n            {/* <Box display=\"flex\" alignItems=\"center\" justifyContent='space-between' marginTop='7px'>\r\n                <h1 className={classes.h1}>Settings</h1>\r\n                <Box className={classes.btnBox}>\r\n                    <Button className={classes.submitBtn}>Save Changes</Button>\r\n                </Box>\r\n            </Box> */}\r\n\r\n            <div className={classes.root}>\r\n                <AppBar className={classes.tabNavigation} position=\"static\" color=\"default\" >\r\n                    <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\" >\r\n                        <Tab label=\"Profile\" {...a11yProps(0)} />\r\n                        <Tab label=\"Global Preferences\" {...a11yProps(1)} />\r\n                        {/* <Tab label=\"Billing\" {...a11yProps(2)} /> */}\r\n                    </Tabs>\r\n                </AppBar>\r\n                <TabPanel value={value} index={0}>\r\n                    <Profile/>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={1}>\r\n                    <GlobalPrefrences/>\r\n                </TabPanel>\r\n                {/* <TabPanel value={value} index={2}>\r\n                    <h4>Billing</h4>\r\n                </TabPanel> */}\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\nexport default Settings","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\Hosting\\AddNewSite.js",["811","812","813","814","815","816","817","818","819","820","821","822","823","824","825","826"],"import React, { createRef, useEffect, useState } from 'react';\r\nimport { Box, Button, makeStyles, Grid, FormGroup, FormControlLabel, Typography, Tooltip  } from '@material-ui/core';\r\n\r\nimport Select from 'react-select';\r\nimport { Field, Formik, useFormik } from 'formik';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\nimport * as Yup from 'yup';\r\nimport { Add, HelpOutline } from '@material-ui/icons';\r\nimport Switch, { IOSSwitch } from './Switch';\r\nimport styles from './AddNewSiteStyles';\r\n// img icon\r\nimport { ReactComponent as ImgIcon } from '../../assets/img/icons/image.svg';\r\nimport { ReactComponent as LinkIcon } from '../../assets/img/icons/attachment-link.9.svg';\r\nimport { ReactComponent as UploadIcon } from '../../assets/img/icons/cloud-upload-outline.svg';\r\nimport { SnTextInput, SnSelect } from '../Utils/SnFormikControlls';\r\nimport { skylinkToUrl } from \"../../utils/SnUtility\";\r\nimport { getInitValAndValidationSchemaFromSnFormikObj } from '../../service/SnFormikUtilService';\r\nimport { getHNSSkyDBURL, setMyHostedApp } from '../../service/SnSkappService';\r\nimport { useHistory } from 'react-router-dom';\r\nimport SnUpload from '../../uploadUtil/SnUpload';\r\nimport { UPLOAD_SOURCE_DEPLOY, UPLOAD_SOURCE_NEW_HOSTING, UPLOAD_SOURCE_NEW_HOSTING_IMG } from '../../utils/SnConstants';\r\nimport { DropzoneArea } from 'material-ui-dropzone';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setUploadList } from '../../redux/action-reducers-epic/SnUploadListAction';\r\nimport SnInfoModal from '../Modals/SnInfoModal';\r\nimport { getPortalList } from '../../utils/SnNewObject';\r\nimport { setLoaderDisplay } from '../../redux/action-reducers-epic/SnLoaderAction';\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nconst useStyles = makeStyles(styles)\r\nconst versionOptions = [\r\n    { value: '1.0', label: '1.0' },\r\n    { value: '1.01', label: '1.01' },\r\n    { value: '1.02', label: '1.02' },\r\n]\r\nconst optionsAge = [\r\n    { value: '17', label: '17' },\r\n    { value: '18', label: '18' },\r\n    { value: '19', label: '19' },\r\n]\r\nconst socialOption = [\r\n    { value: 'facebook', label: 'facebook' },\r\n    { value: 'Reddit', label: 'Reddit' },\r\n    { value: 'Twitter', label: 'Twitter' },\r\n]\r\n\r\nconst storageGatewayOption = getPortalList().map(portal => ({ \"value\": portal, \"label\": portal }));\r\n\r\nconst reactSelectStyles = {\r\n    control: styles => ({\r\n        ...styles, backgroundColor: 'white', height: 55, boxShadow: 0, borderColor: '#D9E1EC', color: '#000', borderRadius: 8,\r\n        '@media only screen and (max-width: 1440px)': {\r\n            height: 50,\r\n            // width: '100%',\r\n            fontSize: 16,\r\n\r\n        },\r\n        '@media only screen and (max-width: 575px)': {\r\n            height: 43,\r\n            // width: '100%',\r\n            fontSize: 14,\r\n\r\n        },\r\n        '&:hover': {\r\n            borderColor: '#1DBF73'\r\n        }\r\n    }),\r\n    option: (styles, { data, isDisabled, isFocused, isSelected }) => ({\r\n        ...styles, backgroundColor: isSelected ? '#1DBF73' : '#fff',\r\n        '&:foucs': {\r\n            backgroundColor: '#1DBF73'\r\n        }\r\n    }),\r\n};\r\n\r\nconst formikObj = {\r\n    appName: ['', Yup.string().required('This field is required')],\r\n    storageGateway: ['', Yup.string().required('This field is required')],\r\n    hns: ['', Yup.string().required('This field is required')],\r\n    skylink: ['', Yup.string().required('This field is required')],\r\n    defaultPath: ['index.html', Yup.string().required('This field is required')],\r\n    portalMinVersion: ['', Yup.string().required('This field is required')],\r\n    sourceCode: ['', Yup.string().required('This field is required')],\r\n    imgSkylink: [''],\r\n    imgThumbnailSkylink: ['']\r\n};\r\n\r\nexport default function AddNewSite() {\r\n    const [selectedOption, setSelectedOption] = useState(null);\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const uploadEleRef = createRef();\r\n    const imgUploadEleRef = createRef();\r\n    const dropZoneRef = createRef();\r\n    const snUploadListStore = useSelector((state) => state.snUploadListStore);\r\n\r\n    const [isFileUpload, setIsFileUpload] = useState(false);\r\n    const [isLogoUploaded, setIsLogoUploaded] = useState(false);\r\n\r\n    const [showInfoModal, setShowInfoModal] = useState(false);\r\n    const [infoModalTitle, setInfoModalTitle] = useState(\"\");\r\n    const [infoModalContent, setInfoModalContent] = useState(\"\");\r\n    const [infoModalShowCopyToClipboard, setInfoModalShowCopyToClipboard] = useState(false);\r\n    const [infoModalClipboardTooltip, setInfoModalClipboardTooltip] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            snUploadListStore[UPLOAD_SOURCE_NEW_HOSTING].length = 0;\r\n            snUploadListStore[UPLOAD_SOURCE_NEW_HOSTING_IMG].length = 0;\r\n            dispatch(setUploadList(snUploadListStore));\r\n        };\r\n    }, []);\r\n    \r\n    const cancelUpload = (e, formik) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        snUploadListStore[UPLOAD_SOURCE_NEW_HOSTING].length = 0;\r\n        dispatch(setUploadList(snUploadListStore));\r\n        formik.setFieldValue(\"skylink\", '', false)\r\n        formik.setFieldValue(\"sourceCode\", '', false)\r\n    }\r\n\r\n    const submitForm = async (values) => {\r\n        dispatch(setLoaderDisplay(true));\r\n        await setMyHostedApp(values);\r\n        dispatch(setLoaderDisplay(false));\r\n        const hnsSkyDBURL = await getHNSSkyDBURL(values.hns);\r\n        setInfoModalParams({\r\n            title: `HNS SkyDB URL`,\r\n            content: hnsSkyDBURL,\r\n            showClipboardCopy: true,\r\n        });\r\n    };\r\n\r\n    const setInfoModalParams = ({ title, content, showClipboardCopy = false, clipboardCopyTooltip, open = true }) => {\r\n        setInfoModalContent(content);\r\n        setInfoModalTitle(title);\r\n        setInfoModalShowCopyToClipboard(showClipboardCopy);\r\n        setInfoModalClipboardTooltip(clipboardCopyTooltip);\r\n        setShowInfoModal(open);\r\n    };\r\n\r\n    const onInfoModalClose = () => {\r\n        setInfoModalParams({ open: false });\r\n        history.push(\"/hosting\");\r\n    };\r\n\r\n\r\n    const onCancel = async (evt, formik) => {\r\n        evt.preventDefault();\r\n        evt.stopPropagation();\r\n        formik.resetForm();\r\n        snUploadListStore[UPLOAD_SOURCE_NEW_HOSTING].length = 0;\r\n        snUploadListStore[UPLOAD_SOURCE_NEW_HOSTING_IMG].length = 0;\r\n        dispatch(setUploadList(snUploadListStore));\r\n    };\r\n\r\n    const handleDropZoneClick = (evt, dropZoneRef) => {\r\n        evt.preventDefault();\r\n        evt.stopPropagation();\r\n        dropZoneRef.current.gridRef.current.click();\r\n    };\r\n\r\n    const handleImgUpload = (obj, formik) => {\r\n        formik.setFieldValue(\"imgSkylink\", obj.skylink, true);\r\n        formik.setFieldValue(\"imgThumbnailSkylink\", obj.thumbnail, true);\r\n        setIsLogoUploaded(false);\r\n    };\r\n\r\n    const copyToClipboard = (url) => {\r\n        navigator.clipboard.writeText(url);\r\n    };\r\n\r\n    const setValueOfForm = (obj, formik) => {\r\n        formik.setFieldValue(\"skylink\", obj.skylink, true)\r\n        formik.setFieldValue(\"sourceCode\", `https://siasky.net/${obj.skylink}`, true)\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <Box >\r\n                <Formik\r\n                    initialValues={getInitValAndValidationSchemaFromSnFormikObj(formikObj).initialValues}\r\n                    validationSchema={Yup.object(getInitValAndValidationSchemaFromSnFormikObj(formikObj).validationSchema)}\r\n                    validateOnChange={true}\r\n                    validateOnBlur={true}\r\n                    onSubmit={submitForm}>\r\n                    {formik => (<form onSubmit={formik.handleSubmit}>\r\n                        <Box display=\"flex\" alignItems=\"center\" justifyContent='space-between' marginTop='7px'>\r\n                            <h1 className={classes.h1}>Add New Site</h1>\r\n                            <Box className={classes.btnBox}>\r\n                                <Button className={classes.cancelBtn} onClick={(e) => onCancel(e, formik)}>Reset Form</Button>\r\n                                <Button className={classes.submitBtn} onClick={formik.handleSubmit}><Add />Submit</Button>\r\n                            </Box>\r\n                        </Box>\r\n                        <Box component=\"form\">\r\n                            <Box>\r\n                                <label className={classes.label}>Site Logo</label>\r\n                                <div className=\"d-none\">\r\n                                    <SnUpload\r\n                                        name=\"files\"\r\n                                        source={UPLOAD_SOURCE_NEW_HOSTING_IMG}\r\n                                        ref={imgUploadEleRef}\r\n                                        directoryMode={false}\r\n                                        onUpload={(obj) => handleImgUpload(obj, formik)}\r\n                                        uploadStarted={(e) => setIsLogoUploaded(e)}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.siteLogo} onClick={(evt) => handleDropZoneClick(evt, imgUploadEleRef)} >\r\n                                    {!isLogoUploaded && formik.values.imgThumbnailSkylink.trim() === \"\" && <Box style={{ flexDirection: \"column\", justifyItems: 'center' }}> \r\n                                    <Box style={{ position: \"relative\", textAlign: 'center' }}>\r\n                                        <ImgIcon />\r\n                                    </Box> \r\n                                    <Box style={{ position: \"relative\", color: \"grey\", textAlign: 'center' }}>click to upload Image</Box> \r\n                                    </Box>}\r\n                                    {!isLogoUploaded && formik.values.imgThumbnailSkylink.trim() !== \"\" && <img\r\n                                        alt=\"app\"\r\n                                        src={skylinkToUrl(formik.values.imgThumbnailSkylink)}\r\n                                        style={{\r\n                                            width: \"250px\",\r\n                                            height: \"150px\",\r\n                                            // border: props.arrSelectedAps.indexOf(app) > -1 ? \"2px solid #1ed660\" : null,\r\n                                        }}\r\n                                        onClick={(evt) => handleDropZoneClick(evt, imgUploadEleRef)}\r\n                                        name=\"1\"\r\n                                    />}\r\n                                    {isLogoUploaded ? <Loader type=\"Oval\" color=\"#57C074\" height={50}  width={50} /> : null}\r\n                                </div>\r\n                                <div className={classes.inputGuide}>\r\n                                    Max. size of 5 MB in: JPG or PNG. 300x500 or larger recommended\r\n                                </div>\r\n                                <input type=\"text\" hidden />\r\n                            </Box>\r\n                            <Box display='flex' className={`${classes.formRow} formSiteRow`}>\r\n                                <Box className={`${classes.inputContainer}`} flex={1} style={{ maxWidth: 700 }}>\r\n                                    <SnTextInput\r\n                                        label={<span>App Name <Tooltip className=\"iconLablel\" title=\"site logo\"><HelpOutline /></Tooltip></span>}\r\n                                        name=\"appName\"\r\n                                        className={classes.input}\r\n                                        type=\"text\" />\r\n                                </Box>\r\n                                <Box className={classes.inputContainer} flex={1}>\r\n                                    <SnTextInput\r\n                                        label={<span>Default Path <Tooltip className=\"iconLablel\" title=\"site logo\"><HelpOutline  /></Tooltip></span>}\r\n                                        name=\"defaultPath\"\r\n                                        className={classes.input}\r\n                                        type=\"text\" />\r\n                                </Box>\r\n                            </Box>\r\n                            <Box display='flex' className={`${classes.formRow} formSiteRow`}>\r\n                                <Box className={`${classes.inputContainer}`} flex={1}>\r\n                                    <SnTextInput\r\n                                        label={<span>HNS Domain <Tooltip className=\"iconLablel\" title=\"site logo\"><HelpOutline  /></Tooltip></span>}\r\n                                        name=\"hns\"\r\n                                        className={classes.input}\r\n                                        type=\"text\" />\r\n                                </Box>\r\n                                <Box className={`${classes.inputContainer}`} flex={1} >\r\n                                    <label>Skynet Portal <Tooltip className=\"iconLablel\" title=\"site logo\"><HelpOutline  /></Tooltip></label>\r\n                                    <Box>\r\n                                        <SnSelect\r\n                                            label=\"Storage Gateway\"\r\n                                            name=\"storageGateway\"\r\n                                            options={storageGatewayOption}\r\n                                        />\r\n                                    </Box>\r\n                                </Box>\r\n                            \r\n                                <Box className={`${classes.inputContainer}`} flex={1} >\r\n                                    <SnTextInput\r\n                                        label={<span>App Version <Tooltip className=\"iconLablel\" title=\"site logo\"><HelpOutline  /></Tooltip></span>}\r\n                                        name=\"portalMinVersion\"\r\n                                        className={classes.input}\r\n                                        type=\"text\" />\r\n                                </Box>\r\n                            </Box>\r\n\r\n\r\n                            <Box display='flex' className={`${classes.formRow} formSiteRow`}>\r\n                                <Box className={classes.inputContainer} flex={1} position=\"relative\">\r\n                                    <SnTextInput\r\n                                        label={<span>Deployed Code Skylink <Tooltip className=\"iconLablel\" title=\"site logo\"><HelpOutline  /></Tooltip></span>}\r\n                                        name=\"sourceCode\"\r\n                                        className={classes.input}\r\n                                        type=\"text\" />\r\n                                </Box>\r\n                            </Box>\r\n                            <div className={classes.OneRowInput}>\r\n                                <div className=\"d-none temp\">\r\n                                    <FormGroup>\r\n                                        <FormControlLabel style={{ color: '#5A607F', marginBottom: 5 }}\r\n                                            label={`Upload ${isFileUpload ? \"File\" : \"Folder\"}`}\r\n                                            control={<IOSSwitch\r\n                                                onChange={(evt) => setIsFileUpload(evt.target.checked)}\r\n                                                name=\"toggleFileUpload\" />}\r\n\r\n                                        />\r\n                                    </FormGroup>\r\n                                </div>\r\n\r\n                                <Grid container spacing={2}>\r\n                                    <Grid item md={12} sm={12} xs={12}>\r\n                                        <Box>\r\n                                            <div className=\"d-none\">\r\n                                                <SnUpload\r\n                                                    name=\"files\"\r\n                                                    source={UPLOAD_SOURCE_NEW_HOSTING}\r\n                                                    ref={uploadEleRef}\r\n                                                    directoryMode={!isFileUpload}\r\n                                                    onUpload={(obj) => setValueOfForm(obj, formik)}\r\n                                                />\r\n\r\n                                            </div>\r\n                                            <div className={classes.previewImg} style={{ flexDirection: 'column', width: '100%', minHeight: '230px' }}>\r\n                                                {/* <div><UploadIcon /></div>\r\n\r\n                                            <div>\r\n                                                Drop file here or <span style={{ color: '#1DBF73' }}>click here to upload</span>\r\n                                            </div> */}\r\n                                                <DropzoneArea\r\n                                                    showPreviewsInDropzone={false}\r\n                                                    onDrop={(files) => {\r\n                                                        uploadEleRef.current.handleDrop(files)\r\n                                                    }}\r\n                                                    //  className={classes.dropZonArea}\r\n                                                    Icon={\"none\"}\r\n                                                    inputProps={{ webkitdirectory: true, mozdirectory: true }}\r\n                                                    ref={dropZoneRef}\r\n                                                    webkitdirectory={true}\r\n                                                    mozdirectory={true}\r\n                                                    maxFileSize={210000000}\r\n                                                    // onDelete={delImg}\r\n                                                    filesLimit={100}\r\n                                                    showAlerts={false}\r\n                                                    dropzoneText={\r\n                                                        <div id=\"dropzone-text\" onClick={(evt) => handleDropZoneClick(evt, uploadEleRef)}>\r\n                                                            {  snUploadListStore && snUploadListStore[UPLOAD_SOURCE_NEW_HOSTING] && snUploadListStore[UPLOAD_SOURCE_NEW_HOSTING].length <= 0 && \r\n                                                                <>\r\n                                                                    <div><UploadIcon /></div>\r\n                                                                    <div style={{ color: '#5C757D' }}>\r\n                                                                        Drag and drop files or folder here\r\n                                                                    </div>\r\n                                                                    <Button className={classes.uploadBtn}>\r\n                                                                        Select {isFileUpload ? \"Files\" : \"Folder\"}\r\n                                                                    </Button>\r\n                                                                </>\r\n                                                            }\r\n                                                            {snUploadListStore && snUploadListStore[UPLOAD_SOURCE_NEW_HOSTING] && snUploadListStore[UPLOAD_SOURCE_NEW_HOSTING].length > 0 && snUploadListStore[UPLOAD_SOURCE_NEW_HOSTING]\r\n                                                                .filter((fileObj, idx) => idx === 0)\r\n                                                                .map((fileObj) => (\r\n                                                                    <Grid\r\n                                                                        item\r\n                                                                        xs={12}\r\n                                                                        className={classes.show_img_title_grid}\r\n                                                                        style={{ paddingTop: \"20px\", paddingBottom: \"20px\" }}\r\n                                                                    >\r\n                                                                        <div\r\n                                                                            style={{\r\n                                                                                display: \"flex\",\r\n                                                                                justifyContent: \"center\",\r\n                                                                                width: \"100%\",\r\n                                                                                minHeight: 150,\r\n                                                                                flexDirection: 'column'\r\n                                                                            }}\r\n                                                                        >\r\n                                                                            <div >\r\n\r\n                                                                                <Typography className={classes.linkName}>\r\n                                                                                    <span>\r\n                                                                                        <DescriptionIcon className={classes.descIcon} />\r\n                                                                                    </span>\r\n                                                                                    {fileObj?.file?.path || fileObj?.file?.name}\r\n                                                                                </Typography>\r\n                                                                                {fileObj?.status && fileObj?.status === 'complete' && (<Typography className={classes.linkName}>\r\n                                                                                    Skylink: {fileObj?.url}\r\n                                                                                </Typography>)}\r\n                                                                                {fileObj?.status && fileObj?.status !== 'complete' && (<Typography className={classes.linkName}>\r\n                                                                                    <><Loader type=\"Oval\" color=\"#57C074\" height={50}  width={50} /></> \r\n                                                                                    {fileObj?.status.toUpperCase()} {fileObj?.status === 'uploading' && !isNaN(fileObj.progress) && `${(Math.trunc(fileObj.progress * 100))} %`}\r\n                                                                                </Typography>)}\r\n                                                                                <Button className={classes.uploadBtn} style={{ zIndex: 100 }} onClick={(e)=> cancelUpload(e, formik)}>\r\n                                                                                    Cancel\r\n                                                                                </Button>\r\n                                                                            </div>\r\n                                                                            {/* <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                                                                            {fileObj?.status === 'complete' && <FileCopyIcon\r\n                                                                                className={classes.descIcon}\r\n                                                                                style={{\r\n                                                                                    cursor: \"pointer\",\r\n                                                                                }}\r\n                                                                                onClick={() => copyToClipboard(fileObj?.url)}\r\n                                                                            />}\r\n                                                                        </div> */}\r\n                                                                        </div>\r\n                                                                    </Grid>))}\r\n\r\n                                                        </div>\r\n                                                    }\r\n                                                />\r\n                                            </div>\r\n                                            <input type=\"text\" hidden />\r\n                                        </Box>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </div>\r\n                        </Box>\r\n\r\n\r\n                    </form>)}\r\n                </Formik>\r\n            </Box>\r\n            <SnInfoModal\r\n                open={showInfoModal}\r\n                onClose={onInfoModalClose}\r\n                title={infoModalTitle}\r\n                content={infoModalContent}\r\n                showClipboardCopy={infoModalShowCopyToClipboard}\r\n            />\r\n\r\n        </>\r\n    )\r\n};","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\Auth\\Login.js",["827","828","829","830","831","832","833","834","835","836","837"],"import { Button, makeStyles } from '@material-ui/core'\r\nimport React, { useState, useEffect } from \"react\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { Paper, withStyles, Grid, Link, Typography } from '@material-ui/core';\r\nimport { ReactComponent as Logo1 } from '../../assets/img/icons/logo1.svg'\r\nimport { ReactComponent as SiteLogoWhite } from '../../assets/img/icons/siteLogoWhite.svg'\r\nimport SnDisclaimer from \"../Utils/SnDisclaimer\";\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { setLoaderDisplay } from '../../redux/action-reducers-epic/SnLoaderAction';\r\nimport { initMySky } from '../../service/skynet-api';\r\nimport { getProfile, getPreferences } from '../../service/SnSkappService';\r\nimport { setUserProfileAction } from '../../redux/action-reducers-epic/SnUserProfileAction';\r\nimport { setUserPreferencesAction } from '../../redux/action-reducers-epic/SnUserPreferencesAction';\r\nimport { getMyFollowersAction } from \"../../redux/action-reducers-epic/SnMyFollowerAction\"\r\nimport { getMyFollowingsAction } from \"../../redux/action-reducers-epic/SnMyFollowingAction\"\r\nimport { setUserSession } from \"../../redux/action-reducers-epic/SnUserSessionAction\"\r\n\r\nconst useStyles = makeStyles({\r\n    input: {\r\n        '&:focus': {\r\n            outline: 'none',\r\n            borderColor: '#1DBF73'\r\n        },\r\n        background: '#fff',\r\n        border: '1px solid #D9E1EC',\r\n        borderRadius: 8,\r\n        height: 45,\r\n        width: '100%',\r\n        fontSize: 18,\r\n        padding: 20,\r\n        '@media only screen and (max-width: 1440px)': {\r\n            height: 45,\r\n            // width: '100%',\r\n            fontSize: 16,\r\n            padding: 15,\r\n        },\r\n        '@media only screen and (max-width: 575px)': {\r\n            height: 45,\r\n            // width: '100%',\r\n            fontSize: '14px !important',\r\n            padding: 10,\r\n        }\r\n\r\n    },\r\n    loginFormContainer: {\r\n        display: 'flex',\r\n        height: '100%',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        \r\n    },\r\n    poweredBy: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        '& span': {\r\n            color: '#fff'\r\n        },\r\n        marginTop: '2.5rem',\r\n        marginBottom: '3.5rem'\r\n    }\r\n})\r\nconst Login = () => {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const userSession = useSelector((state) => state.userSession)\r\n\r\n    const [userID, setUserID] = useState();\r\n    // choose a data domain for saving files in MySky\r\n    const { installedAppsStoreForLogin } = useSelector((state) => state.snInstalledAppsStore);\r\n\r\n    useEffect(() => {\r\n        console.log(\"##### checkActiveLogin :: userSession = \" + userSession);\r\n        if (userSession?.mySky != null) {\r\n            if (installedAppsStoreForLogin) {\r\n                history.push('/');\r\n            } else {\r\n                history.push('/apps');\r\n            }\r\n        }\r\n    }, [userSession]);\r\n    const handleLogin = async () => {\r\n        let result = null;\r\n        try {\r\n            dispatch(setLoaderDisplay(true));\r\n            //console.log(\"BEFORE: userSession\" + userSession);\r\n            // if user session and mysky is present and user is already logged in\r\n            if (userSession != null && userSession?.mySky != null) {\r\n                const loggedIn = await userSession.mySky.checkLogin();\r\n                if (!loggedIn) {\r\n                    await userSession.mySky.requestLoginAccess();\r\n                }\r\n                return;\r\n            }\r\n            else {\r\n                result = await initMySky();\r\n                if (!result.loggedIn) {\r\n                    await result.userSession.mySky.requestLoginAccess();\r\n                    let userID = await result.userSession.mySky.userID();\r\n                    result.userSession.userID = userID;\r\n                }\r\n            }\r\n            //innocent motherly hull focus gnaw elapse custom sipped dazed eden sifting jump lush inkling\r\n            dispatch(setUserSession(result.userSession));\r\n            // on success do following\r\n            //alert(\"handleLogin: newSession \" + result.userSession);\r\n            //alert(\"handleLogin: newSession \" + result.userSession.userID);\r\n            const userProfile = await getProfile();\r\n            dispatch(setUserProfileAction(userProfile));\r\n            const userPrefrences = await getPreferences();\r\n            dispatch(setUserPreferencesAction(userPrefrences));\r\n            //const userProfileObj = await getUserProfile(result.userSession);// dont proceed without pulling profile\r\n            //newSession = { ...newSession, userProfile: userProfileObj};\r\n            //alert(\"AFTER: userSession(old)\" + userSession);\r\n            //history.push('/apps');\r\n            // get userFollowers\r\n            //await dispatch(getMyFollowersAction(null));\r\n            // get userFollowings\r\n            //await dispatch(getMyFollowingsAction(null));\r\n            //window.history.pushState({}, '', '/appdetail')\r\n            dispatch(setLoaderDisplay(false));\r\n        } catch (error) {\r\n            console.log(error);\r\n            dispatch(setLoaderDisplay(false));\r\n        }\r\n    }\r\n    return (\r\n        <div className={classes.loginFormContainer}>\r\n            <form className='login-form'>\r\n                <div>\r\n                    <Logo1 />\r\n                    <h3>Sign In to Skapp</h3>\r\n                    <Button onClick={handleLogin}> Login using MySky\r\n                    </Button>\r\n                    <div className={classes.poweredBy}>\r\n                        <span>Powered by </span><SiteLogoWhite />\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default Login\r\n","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\DescoverDev\\DescoverDev.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\utils\\SnConstants.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\service\\SnIndexedDB.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\hooks\\useWindowDimensions.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\assets\\jss\\sidebar\\SidebarStyle.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\SnActionConstants.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\Setting\\Profile.js",["838","839","840","841","842","843","844","845","846"],"\r\nimport React, { createRef, useEffect, useState } from 'react'\r\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline'\r\nimport { Box, Button, makeStyles, Typography, Snackbar } from '@material-ui/core';\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { Formik } from 'formik';\r\nimport { SnTextInput, SnTextInputTag, SnTextArea, SnInputWithIcon } from '../Utils/SnFormikControlls';\r\nimport SnUpload from '../../uploadUtil/SnUpload';\r\nimport { UPLOAD_SOURCE_NEW_HOSTING_IMG } from '../../utils/SnConstants';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setLoaderDisplay } from '../../redux/action-reducers-epic/SnLoaderAction';\r\n\r\nimport * as Yup from 'yup';\r\nimport { Add, Search, GitHub, Facebook, Reddit, Twitter, Telegram } from '@material-ui/icons';\r\nimport { skylinkToUrl } from \"../../utils/SnUtility\";\r\nimport { getInitValAndValidationSchemaFromSnFormikObj } from '../../service/SnFormikUtilService';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getProfile, setProfile } from '../../service/SnSkappService';\r\nimport { setUserProfileAction } from \"../../redux/action-reducers-epic/SnUserProfileAction\"\r\nimport Loader from \"react-loader-spinner\";\r\n// import './index.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    ProfileRoot: {\r\n        // backgroundColor: '#fff',\r\n        backgroundColor: '#12141D',\r\n        boxShadow: '0px 2px 5px #15223214',\r\n        borderRadius: 6,\r\n        padding: '50px 30px',\r\n        '@media only screen and (max-width: 575px)': {\r\n            padding: '20px 10px',\r\n        },\r\n        '& h2': {\r\n            // color: '#242F57',\r\n            color: '#fff',\r\n            marginBottom: '1rem',\r\n            '@media only screen and (max-width: 575px)': {\r\n                fontSize: 22,\r\n            },\r\n        }\r\n    },\r\n    textInfo: {\r\n        color: 'rgba(255, 255, 255, 0.5)',\r\n        fontSize: 14,\r\n        '@media only screen and (max-width: 575px)': {\r\n            fontSize: 13,\r\n        },\r\n    },\r\n    submitBtn: {\r\n        background: '#1DBF73!important',\r\n        color: '#fff',\r\n        paddingLeft: '1rem',\r\n        paddingRight: '1rem',\r\n        display: 'inlin-flex',\r\n        alignItems: 'center',\r\n        float: 'right',\r\n        minWidth: 130,\r\n        '& svg': {\r\n            fontSize: '19px',\r\n            marginRight: '5px'\r\n        },\r\n        '@media only screen and (max-width: 575px)': {\r\n            fontSize: '12px',\r\n\r\n            paddingLeft: '.5rem',\r\n            paddingRight: '.5rem',\r\n            minWidth: 70,\r\n        }\r\n    },\r\n    siteLogo: {\r\n        background: '#fff',\r\n        cursor: 'pointer',\r\n        height: 150,\r\n        width: 150,\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        border: '1px solid #D9E1EC',\r\n        borderRadius: '50%',\r\n        marginBottom: 10,\r\n        marginTop: 10,\r\n        '@media only screen and (max-width: 575px)': {\r\n            width: 75,\r\n            height: 75,\r\n            // maxWidth: 340,\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n        }\r\n    },\r\n    label: {\r\n        display: 'block',\r\n        color: '#5A607F',\r\n        marginBottom: 8,\r\n        fontSize: 18,\r\n        '@media only screen and (max-width: 575px)': {\r\n            fontSize: 16,\r\n        }\r\n    },\r\n    profilePlaceholder: {\r\n        width: 150,\r\n        height: 150,\r\n        // background: '#EFF5F7',\r\n        background: '#2A2C34',\r\n        display: 'flex',\r\n        borderRadius: '50%',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        overflow: 'hidden',\r\n        '& svg': {\r\n            fontSize: 89,\r\n            // marginTop: '2.9rem',\r\n            color: '#B4C6CC'\r\n        },\r\n        '@media only screen and (max-width: 575px)': {\r\n            width: 75,\r\n            height: 75,\r\n            '& svg': {\r\n                fontSize: 45,\r\n                // marginTop: '2.9rem',\r\n                color: '#B4C6CC'\r\n            },\r\n        }\r\n    },\r\n    btnUpload: {\r\n        backgroundColor: '#869EA6!important',\r\n        color: '#fff',\r\n        fontSize: 14,\r\n        minWidth: 150,\r\n        '@media only screen and (max-width: 575px)': {\r\n            fontSize: 12,\r\n            height: 40\r\n        },\r\n        '& svg': {\r\n            marginRight: 7\r\n        }\r\n    },\r\n    textHelper: {\r\n        fontSize: 13,\r\n        color: '#5C757D',\r\n        marginTop: 5,\r\n        '@media only screen and (max-width: 575px)': {\r\n            fontSize: 12,\r\n        },\r\n    },\r\n    form: {\r\n        marginTop: 20\r\n    },\r\n    label: {\r\n        display: 'block',\r\n        marginTop: 10,\r\n        marginBottom: 8,\r\n        fontWeight: 600,\r\n        fontSize: 14,\r\n        '@media only screen and (max-width: 575px)': {\r\n            marginTop: 0,\r\n            marginBottom: 5,\r\n        },\r\n    },\r\n    inputGuide: {\r\n        color: '#5C757D',\r\n        '@media only screen and (max-width: 575px)': {\r\n            fontSize: 12,\r\n        }\r\n    },\r\n    input: {\r\n        // background: '#fff',\r\n        color: '#fff',\r\n        background: '#2A2C34',\r\n        // border: '1px solid #D9E1EC',\r\n        border: '1px solid rgba(0, 0, 0, 0.5)',\r\n        borderRadius: 8,\r\n        height: 55,\r\n        width: '100%',\r\n        fontSize: 18,\r\n        padding: 20,\r\n        '@media only screen and (max-width: 1440px)': {\r\n            height: 50,\r\n            // width: '100%',\r\n            fontSize: 16,\r\n            padding: 15,\r\n        },\r\n        '@media only screen and (max-width: 575px)': {\r\n            height: 43,\r\n            // width: '100%',\r\n            fontSize: '14px !important',\r\n            padding: 10,\r\n        }\r\n\r\n    },\r\n    inputContainer: {\r\n        '& > label': {\r\n            display: 'block',\r\n            color: '#5A607F',\r\n            marginBottom: 7\r\n        },\r\n        '& input:focus, & select:focus, & textarea:focus': {\r\n            outline: 'none!important',\r\n            // border: '1px solid #1DBF73',\r\n        },\r\n        marginTop: '25px',\r\n        '&': {\r\n            marginRight: '1rem'\r\n        },\r\n        '& input, & input': {\r\n            fontSize: 18,\r\n            width: '100%',\r\n            color: '#fff'\r\n        },\r\n        '@media only screen and (max-width: 575px)': {\r\n            marginTop: '16px',\r\n            marginRight: '10px'\r\n\r\n\r\n        },\r\n\r\n    },\r\n    firstInput: {\r\n        marginTop: 5,\r\n        '@media only screen and (max-width: 575px)': {\r\n            marginBottom: 10\r\n        },\r\n    }\r\n}))\r\nconst initailValueFormikObj = {\r\n        username: ['', Yup.string().required('This field is required')],\r\n        emailID: [''],\r\n        firstName: [''],\r\n        lastName: [''],\r\n        contact: [''],\r\n        aboutMe: [''],\r\n        location: [''],\r\n        topicsHidden: [[]],\r\n        topicsDiscoverable: [[]],\r\n        avatar: [{}],\r\n        facebook: [''],\r\n        twitter: [''],\r\n        github: [''],\r\n        reddit: [''],\r\n        telegram: [''],\r\n\r\n    };\r\nconst Profile = () => {\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [isSuccess, setIsSuccess] = useState(false);\r\n    const [isError, setIsError] = useState(false);\r\n\r\n    const [formikObj, setFormikObj] = useState(initailValueFormikObj);\r\n\r\n    const classes = useStyles()\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const imgUploadEleRef = createRef();\r\n    const [isLogoUploaded, setIsLogoUploaded] = useState(false);\r\n    const userProfile = useSelector((state) => state.snUserProfile);\r\n    \r\n    const handleDropZoneClick = (evt, dropZoneRef) => {\r\n        evt.preventDefault();\r\n        evt.stopPropagation();\r\n        dropZoneRef.current.gridRef.current.click();\r\n    };\r\n    \r\n    const handleImgUpload = (obj, formik) => {\r\n        formik.setFieldValue(\"avatar\", { url: `sia:${obj.thumbnail}` }, true);\r\n        setIsLogoUploaded(false);\r\n    };\r\n    useEffect(() => {\r\n            setProfileFormicObj(userProfile);\r\n    });\r\n\r\n    useEffect(() => {\r\n        setProfileFormicObj(userProfile);\r\n    }, [userProfile]);\r\n\r\n    const setProfileFormicObj = (profile) => {\r\n        if (profile) {\r\n            formikObj.username[0] = `${profile?.username}`;\r\n            formikObj.emailID[0] = `${profile?.emailID}`;\r\n            formikObj.firstName[0] = `${profile?.firstName}`;\r\n            formikObj.lastName[0] = `${profile?.lastName}`;\r\n            formikObj.contact[0] = `${profile?.contact}`;\r\n            formikObj.location[0] = `${profile?.location}`;\r\n            formikObj.aboutMe[0] = `${profile?.aboutMe}`;\r\n            formikObj.facebook[0] = `${profile?.connections?.find(({facebook}) => facebook)?.facebook?? \"\"}`;\r\n            formikObj.twitter[0] = `${profile?.connections?.find(({twitter}) => twitter)?.twitter?? \"\"}`;\r\n            formikObj.github[0] = `${profile?.connections?.find(({github}) => github)?.github?? \"\"}`;\r\n            formikObj.reddit[0] = `${profile?.connections?.find(({reddit}) => reddit)?.reddit?? \"\"}`;\r\n            formikObj.telegram[0] = `${profile?.connections?.find(({telegram}) => telegram)?.telegram ?? \"\"}`;\r\n            // formikObj.facebook[0] = profile?.connections?.facebook ?? \"\";\r\n            // formikObj.twitter[0] = profile?.connections?.twitter ?? \"\";\r\n            // formikObj.github[0] = profile?.connections?.github ?? \"\";\r\n            // formikObj.reddit[0] = profile?.connections?.reddit ?? \"\";\r\n            // formikObj.telegram[0] = profile?.connections?.telegram ?? \"\";\r\n            formikObj.topicsHidden[0] = profile?.topicsHidden;\r\n            formikObj.topicsDiscoverable[0] = profile?.topicsDiscoverable;\r\n            if (profile?.avatar[0]?.url) {\r\n                formikObj.avatar = profile.avatar;\r\n            }\r\n            setFormikObj(formikObj)\r\n        }\r\n    }\r\n    const submitProfileForm = async (values) => {\r\n        dispatch(setLoaderDisplay(true));\r\n        let profileJSON = {\r\n            username: values.username,\r\n            emailID: values.emailID,\r\n            firstName: values.firstName,\r\n            lastName: values.lastName,\r\n            contact: values.contact,\r\n            location: values.location,\r\n            aboutMe: values.aboutMe,\r\n            connections: [{ twitter: values.twitter }, { facebook: values.facebook }, { github: values.github }, { reddit: values.reddit }, { telegram: values.telegram }],\r\n            topicsHidden: values.topicsHidden,\r\n            topicsDiscoverable: values.topicsDiscoverable,\r\n            avatar: [values.avatar],\r\n        }\r\n        await setProfile(values);\r\n        dispatch(setUserProfileAction(profileJSON))\r\n        //await setProfile(profileJSON);\r\n        setIsSuccess(true);\r\n        dispatch(setLoaderDisplay(false));\r\n    };\r\n\r\n    return (\r\n\r\n        <div className={classes.ProfileRoot}>\r\n            <Box>\r\n\r\n                <Snackbar anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }} open={isSuccess} autoHideDuration={6000}>\r\n                    <Alert severity=\"success\">\r\n                        Profile Successfully Saved!\r\n                    </Alert>\r\n                </Snackbar>\r\n                <Snackbar anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }} open={isError} autoHideDuration={6000}>\r\n                    <Alert severity=\"error\">\r\n                        Error Occurred while saving profile!\r\n                    </Alert>\r\n                </Snackbar>\r\n                <Formik\r\n                    initialValues={getInitValAndValidationSchemaFromSnFormikObj(formikObj).initialValues}\r\n                    validationSchema={Yup.object(getInitValAndValidationSchemaFromSnFormikObj(formikObj).validationSchema)}\r\n                    validateOnChange={true}\r\n                    validateOnBlur={true}\r\n                    onSubmit={submitProfileForm}>\r\n                    {formik => (<form onSubmit={formik.handleSubmit}>\r\n                        <h2>Account  <Button className={classes.submitBtn} onClick={formik.handleSubmit}><Add /> Save Changes </Button>\r\n                        </h2>\r\n                        <Typography className={classes.textInfo}>\r\n                            This information can be edited from your profile page.\r\n                        </Typography>\r\n                        <Box component=\"form\">\r\n                            <Box>\r\n                                <div className=\"d-none\">\r\n                                    <SnUpload\r\n                                        name=\"files\"\r\n                                        source={UPLOAD_SOURCE_NEW_HOSTING_IMG}\r\n                                        ref={imgUploadEleRef}\r\n                                        directoryMode={false}\r\n                                        onUpload={(obj) => handleImgUpload(obj, formik)}\r\n                                        uploadStarted={(e) => setIsLogoUploaded(e)}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.siteLogo} onClick={(evt) => handleDropZoneClick(evt, imgUploadEleRef)} >\r\n                                    {!isLogoUploaded && Object.keys(formik.values.avatar).length == 0 && <div className={classes.profilePlaceholder}>\r\n                                        <PersonOutlineIcon className={classes.avatarIcon} />\r\n                                    </div>}\r\n                                    {!isLogoUploaded && Object.keys(formik.values.avatar).length > 0 && <img\r\n                                        alt=\"app\"\r\n                                        src={skylinkToUrl(formik.values.avatar.url)}\r\n                                        className={classes.siteLogo}\r\n                                        onClick={(evt) => handleDropZoneClick(evt, imgUploadEleRef)}\r\n                                        name=\"1\"\r\n                                    />}\r\n                                    {isLogoUploaded ? <Loader type=\"Oval\" color=\"#57C074\" height={50} width={50} /> : null}\r\n                                </div>\r\n                                <div className={classes.inputGuide}>\r\n                                    Max. size of 5 MB in: JPG or PNG.\r\n                                </div>\r\n                                <input type=\"text\" hidden />\r\n                            </Box>\r\n\r\n                            <Box display='flex' className={`${classes.formRow} formSiteRow`}>\r\n                                <Box className={`${classes.inputContainer}`} flex={1}>\r\n                                    <SnTextInput\r\n                                        label={<span> Username <span style={{ color: 'red' }}>*</span></span>}\r\n                                        name=\"username\"\r\n                                        className={classes.input}\r\n                                        type=\"text\"\r\n                                    />\r\n                                </Box>\r\n                                <Box className={`${classes.inputContainer}`} flex={1}>\r\n                                    <SnTextInput\r\n                                        label=\"First Name\"\r\n                                        name=\"firstName\"\r\n                                        className={classes.input}\r\n                                        type=\"text\"\r\n                                    />\r\n                                </Box>\r\n                                <Box className={`${classes.inputContainer}`} flex={1}>\r\n                                    <SnTextInput\r\n                                        label=\"Last Name\"\r\n                                        name=\"lastName\"\r\n                                        className={classes.input}\r\n                                        type=\"text\"\r\n                                    />\r\n                                </Box>\r\n                            </Box>\r\n                            <Box display='flex' className={`${classes.formRow} formSiteRow`}>\r\n                                <Box className={`${classes.inputContainer}`} flex={1}>\r\n                                    <SnTextInput\r\n                                        label=\"Location\"\r\n                                        name=\"location\"\r\n                                        className={classes.input}\r\n                                        type=\"text\"\r\n                                    />\r\n                                </Box>\r\n                                <Box className={`${classes.inputContainer}`} flex={1}>\r\n                                    <SnTextInput\r\n                                        label=\"Email\"\r\n                                        name=\"emailID\"\r\n                                        className={classes.input}\r\n                                        type=\"text\"\r\n                                    />\r\n                                </Box>\r\n                                <Box className={`${classes.inputContainer}`} flex={1}>\r\n                                    <SnTextInput\r\n                                        label=\"Contact\"\r\n                                        name=\"contact\"\r\n                                        className={classes.input}\r\n                                        type=\"text\"\r\n                                    />\r\n                                </Box>\r\n                            </Box>\r\n                            <Box display='flex' className={`${classes.formRow} formSiteRow`}>\r\n                                <Box className={`${classes.inputContainer}`} flex={1}>\r\n                                    <SnTextArea\r\n                                        label=\"About me\"\r\n                                        name=\"aboutMe\"\r\n                                        className={classes.input}\r\n                                    />\r\n                                </Box>\r\n                            </Box>\r\n                            <Box display='flex' className={`${classes.formRow} formSiteRow`}>\r\n                                <Box className={`${classes.inputContainer}`} flex={1}>\r\n                                    <SnTextInputTag\r\n                                        label=\"Topics Hidden\"\r\n                                        name=\"topicsHidden\"\r\n                                        className={classes.input}\r\n                                    />\r\n                                </Box>\r\n                                <Box className={`${classes.inputContainer}`} flex={1}>\r\n                                    <SnTextInputTag\r\n                                        label=\"Topics Discoverable\"\r\n                                        name=\"topicsDiscoverable\"\r\n                                        className={classes.input}\r\n                                    />\r\n                                </Box>\r\n                            </Box>\r\n                            <Box display='flex' className={`${classes.formRow} formSiteRow`}>\r\n                                <Box className={`${classes.inputContainer}`} flex={1}>\r\n                                    <label>Social Connections</label>\r\n                                </Box>\r\n                            </Box>\r\n                            <Box display='flex' className={`${classes.formRow} formSiteRow`}>\r\n                                <Box className={`${classes.inputContainer}`} flex={1}>\r\n                                    <SnInputWithIcon\r\n                                        icon={<GitHub />}\r\n                                        // icon={<i className=\"fa fa-github-square\"></i>}\r\n                                        label=\"Github\"\r\n                                        name=\"github\"\r\n                                        type=\"text\"\r\n                                    />\r\n                                </Box>\r\n                                <Box className={`${classes.inputContainer}`} flex={1}>\r\n                                    <SnInputWithIcon\r\n                                        icon={<Twitter />}\r\n                                        label=\"Twitter\"\r\n                                        name=\"twitter\"\r\n                                        type=\"text\"\r\n                                    />\r\n                                </Box>\r\n                            </Box>\r\n                            <Box display='flex' className={`${classes.formRow} formSiteRow`}>\r\n                                <Box className={`${classes.inputContainer}`} flex={1}>\r\n                                    <SnInputWithIcon\r\n                                        icon={<Facebook />}\r\n                                        label=\"Facebook\"\r\n                                        name=\"facebook\"\r\n                                        type=\"text\"\r\n                                    />\r\n                                </Box>\r\n                                <Box className={`${classes.inputContainer}`} flex={1}>\r\n                                    <SnInputWithIcon\r\n                                        icon={<Reddit />}\r\n                                        label=\"Reddit\"\r\n                                        name=\"reddit\"\r\n                                        type=\"text\"\r\n                                    />\r\n                                </Box>\r\n                            </Box>\r\n                            <Box display='flex' className={`${classes.formRow} formSiteRow`}>\r\n                                <Box className={`${classes.inputContainer}`} flex={0.5}>\r\n                                    <SnInputWithIcon\r\n                                        icon={<Telegram />}\r\n                                        label=\"Telegram\"\r\n                                        name=\"telegram\"\r\n                                        type=\"text\"\r\n                                    />\r\n                                </Box>\r\n                            </Box>\r\n                        </Box>\r\n                    </form>)}\r\n                </Formik>\r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnMyFollowingAction.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnMyFollowerAction.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\DescoverDev\\DevTable.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\DescoverDev\\UserCard.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\service\\skynet-api.js",["847","848","849","850","851","852","853","854"],"import { SkynetClient } from \"skynet-js\";\r\nimport { ContentRecordDAC } from \"@skynetlabs/content-record-library\";\r\nimport { UserProfileDAC, Profile } from '@skynethub/userprofile-library';\r\nimport { FeedDAC } from \"feed-dac-library\";\r\nimport {\r\n    getJSONfromIDB,\r\n    setJSONinIDB,\r\n    IDB_STORE_SKAPP,\r\n    IDB_STORE_SKYDB_CACHE,\r\n} from \"./SnIndexedDB\"\r\nimport store from \"../redux\"\r\nimport { setUserSession } from \"../redux/action-reducers-epic/SnUserSessionAction\"\r\n\r\nconst client = new SkynetClient(\"https://siasky.net/\");\r\n//const hostApp = \"awesomeskynet.hns\";\r\nconst hostApp = \"localhost\";\r\n\r\n\r\nexport const initMySky = async () => {\r\n\r\n    let userSession = null\r\n    let loggedIn = false\r\n    try {\r\n        // Initialize MySky.\r\n        const mySky = await client.loadMySky(hostApp, { dev: true, debug: true });\r\n        //const mySky = await client.loadMySky(hostApp);\r\n        const contentDAC = new ContentRecordDAC();\r\n        const userProfileDAC = new UserProfileDAC();\r\n        const feedDAC = new FeedDAC();\r\n        await mySky.loadDacs(contentDAC, userProfileDAC, feedDAC);\r\n        //await mySky.loadDacs(userProfileDAC);\r\n        // Add additional needed permissions before checkLogin.\r\n        // Can be Permissions object or list of Permissions objects\r\n        //await mySky.addPermissions(new Permission(\"requestor.hns\", \"domain.hns/path\", PermCategory.Hidden, PermType.Write));\r\n        // Try to login silently, requesting permissions for hostApp HNS.\r\n        loggedIn = await mySky.checkLogin();// check if user is already logged-In\r\n        console.log(\"checkLogin : loggedIn status: \" + loggedIn);\r\n        userSession = { mySky, dacs: { contentDAC, userProfileDAC, feedDAC } };\r\n        //userSession = { mySky, dacs: { userProfileDAC } };\r\n        // if not logged-in\r\n        if (loggedIn) {\r\n            let userID = await mySky.userID();\r\n            userSession = { ...userSession, userID };\r\n        }\r\n    } catch (e) {\r\n        console.error(e);\r\n        return userSession;\r\n    }\r\n    return { loggedIn, userSession };\r\n}\r\n\r\nexport const handleMySkyLogin = async (userSession) => {\r\n\r\n};\r\n\r\n// export const handleMySkyLogin = async () => {\r\n//     try {\r\n//         // Initialize MySky.\r\n//         const mySky = await client.loadMySky(hostApp, { dev: true, debug: true });\r\n//         // Add additional needed permissions before checkLogin.\r\n//         // Can be Permissions object or list of Permissions objects\r\n//         //await mySky.addPermissions(new Permission(\"requestor.hns\", \"domain.hns/path\", PermCategory.Hidden, PermType.Write));\r\n//         // Try to login silently, requesting permissions for hostApp HNS.\r\n//         //await mySky.logout();\r\n//         const loggedIn = await mySky.checkLogin();// check if user is already logged-In\r\n//         console.log(\"checkLogin : loggedIn status: \"+loggedIn);\r\n//         // Add button action for login.\r\n//         if (!loggedIn) {\r\n//             const status = await mySky.requestLoginAccess();//login popup window\r\n//             console.log(\"requestLoginAccess status: \"+status);\r\n//         }\r\n//         // Initialize DAC, auto-adding permissions.\r\n//         const contentDAC = new ContentRecordDAC();\r\n//         const userProfileDAC = new UserProfileDAC();\r\n//         const feedDAC = new FeedDAC();\r\n//         await mySky.loadDacs(contentDAC,userProfileDAC,feedDAC);\r\n//         let userID = await mySky.userID();\r\n//         //await testUserProfile(userProfileDAC);\r\n//         return { mySky, dacs: {contentDAC, userProfileDAC,feedDAC}, userID };\r\n//     } catch (error) {\r\n//         console.log(error);\r\n//         return {mySky:null, dacs: {}, userID:null};\r\n//     }\r\n// }\r\n\r\nexport const getUserSession = async () => {\r\n    let session = null;\r\n    try {\r\n        const state = store.getState();\r\n        session = await state.userSession;\r\n    }\r\n    catch (e) {\r\n        return session\r\n    }\r\n    return session\r\n}\r\n\r\n\r\nexport const getUserID = async () => {\r\n    const userSession = await getUserSession();\r\n    return userSession?.userID ?? null\r\n}\r\n\r\nexport const getMySky = async () => {\r\n    const userSession = await getUserSession();\r\n    return userSession?.mySky ?? null\r\n}\r\nexport const getContentDAC = async () => {\r\n    const userSession = await getUserSession();\r\n    return userSession?.dacs?.contentDAC ?? null;\r\n}\r\nexport const getProfileDAC = async () => {\r\n    const userSession = await getUserSession();\r\n    return userSession?.dacs?.userProfileDAC ?? null;\r\n}\r\n\r\nexport const getFeedDAC = async () => {\r\n    const userSession = await getUserSession();\r\n    return userSession?.dacs?.feedDAC ?? null;\r\n}\r\nexport const testUserProfile = async (contentRecord) => {\r\n    // PREF_PATH: `${DATA_DOMAIN}/${skapp}/preferences.json`,\r\n    // PROFILE_PATH: `${DATA_DOMAIN}/${skapp}/userprofile.json`,\r\n    // INDEX_PROFILE: `${DATA_DOMAIN}/userprofileIndex.json`,\r\n    // INDEX_PREFERENCE: `${DATA_DOMAIN}/preferencesIndex.json`\r\n    try {\r\n        //const contentRecord = getUserSession().dacs.userProfileDAC;\r\n        let profp = await contentRecord.getProfile();// path -> skyuser.hns/index_profile.json\r\n        console.log(\"original Profile\", profp);\r\n        let profile = {\r\n            username: \"c3po\",\r\n            aboutMe: \"is a droid programmed for etiquette and protocol, built by the heroic Jedi Anakin Skywalker, and a constant companion to astromech R2-D2\",\r\n            location: \"Tatooine\",\r\n            topics: ['War', 'Games']\r\n        }\r\n        console.log('In the method');\r\n        await contentRecord.setProfile(profile);// Path -> skyuser.hns/localhost/user-profile.json \r\n        let prof = await contentRecord.getProfile();\r\n        console.log(\"Updated Profile\", prof);\r\n        let pref = {\r\n            darkmode: true,\r\n            portal: \"siasky.net\"\r\n        }\r\n        await contentRecord.setPreference(pref);\r\n        let prefr = await contentRecord.getPreference();\r\n        console.log(\"preferance\", prefr);\r\n        let proHist = await contentRecord.getProfileHistory();\r\n        console.log(\"profileHistory\", proHist);\r\n        let prefHist = await contentRecord.getPreferenceHistory();\r\n        console.log(\"getPreferanceHistory\", prefHist);\r\n    } catch (error) {\r\n        console.log(`error with CR DAC: ${error.message}`);\r\n    }\r\n}\r\n\r\nexport const getFile_MySky = async (dataKey, options) => {\r\n    let result = null;\r\n    try {\r\n        // Below condition means, we are fetching other user's data\r\n        if (options?.userID) {\r\n            result = await client.file.getJSON(options.userID, dataKey);\r\n        }\r\n        else {\r\n            let mySky = await getMySky();\r\n            result = await mySky.getJSON(dataKey);\r\n        }\r\n        // TODO: decrypt method\r\n        return result;\r\n    } catch (error) {\r\n        // setErrorMessage(error.message);\r\n        console.log(`error.message ${error.message}`)\r\n        return null;\r\n    }\r\n}\r\n\r\n// sets JSON file in MySky\r\nexport const putFile_MySky = async (dataKey, content, options) => {\r\n    try {\r\n        // get previous skylink \r\n        // create linked list to track history\r\n        if (options?.historyflag == true) {\r\n            content.prevSkylink = getFile_MySky(dataKey)?.dataLink ?? null;\r\n        }\r\n        // set new data in SkyDB with\r\n        let status = false\r\n        // encrypt it\r\n        if (options?.encrypt == true) {\r\n            //const cypherContent = await encryptData(privateKey, publicKey, JSON.stringify(content))\r\n            //status = await skynetClient.db.setJSON(privateKey, dataKey, cypherContent)\r\n        } else {\r\n            let mySky = await getMySky();\r\n            const result = await mySky.setJSON(dataKey, content)\r\n        }\r\n        await setJSONinIDB(dataKey, content, { store: IDB_STORE_SKAPP })\r\n        return true\r\n    } catch (error) {\r\n        // setErrorMessage(error.message);\r\n        console.log(`error.message ${error.message}`)\r\n        return false\r\n    }\r\n}","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\Utils\\SnDisclaimer.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\service\\SnSkappService.js",["855","856","857","858","859","860","861","862","863","864","865","866","867","868"],"import {\r\n  BROWSER_STORAGE,\r\n  FOLLOWER_PATH,\r\n  FOLLOWING_PATH,\r\n  DK_HOSTED_APPS,\r\n  DK_PUBLISHED_APPS,\r\n  DK_INSTALLED_APPS,\r\n  EVENT_PUBLISHED_APP,\r\n  EVENT_APP_VIEWED,\r\n  EVENT_APP_ACCESSED,\r\n  EVENT_APP_LIKED,\r\n  EVENT_APP_LIKED_REMOVED,\r\n  EVENT_APP_FAVORITE,\r\n  EVENT_APP_FAVORITE_REMOVED,\r\n  EVENT_APP_COMMENT,\r\n  FAVORITE_REMOVED,\r\n  EVENT_APP_INSTALLED,\r\n  EVENT_APP_UNINSTALLED,\r\n  ANONYMOUS,\r\n  DK_AGGREGATED_PUBLISHED_APPS_STATS,\r\n  DK_AGGREGATED_PUBLISHED_APPS\r\n} from '../utils/SnConstants';\r\nimport {\r\n  getJSONfromIDB,\r\n  setJSONinIDB,\r\n  IDB_STORE_SKAPP,\r\n  IDB_STORE_SKAPP_AGGREGATED_DATA,\r\n} from \"../service/SnIndexedDB\"\r\nimport imageCompression from \"browser-image-compression\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { emitEvent } from \"./SnSkyMQEventEmitter\";\r\nimport { getProviderKeysByType, uploadFile, getRegistryEntry, setRegistryEntry, putFile, getFile, getFile_SkyDB,getRegistryEntryURL } from './SnSkynet'\r\nimport { getUserID, putFile_MySky, getFile_MySky, getContentDAC, getFeedDAC, getProfileDAC, getUserSession } from './skynet-api'\r\nimport { createDummyUserProfileObject } from '../utils/SnNewObject'\r\nimport { userProfileDacTest } from \"./dac/userprofile-api\"\r\nvar _ = require('lodash');\r\n\r\n// TODO: implement actual logic\r\nfunction generateSkappId(prop) {\r\n  return uuidv4();\r\n}\r\n// Provider Type: GEQ Provider, Aggregator, Validator, Moderator, Blocklist Manager\r\n// This JS file will list app methods consumed by components\r\n\r\n// ### User Profile Functionality ###\r\n// null or publicKey\r\nexport const getProfile = async () => {\r\n  try {\r\n    //set options\r\n    const profileDAC = await getProfileDAC();\r\n    //return await getFile_MySky(\"userProfile\", { skydb: true })?.data\r\n    const userID = await getUserID()\r\n    return await profileDAC.getProfile(userID);\r\n    //return JSON.parse(BROWSER_STORAGE.getItem('userProfile'));\r\n  }\r\n  catch (e) {\r\n    console.log(\"profileDAC.getProfile : failed =\" + e)\r\n    return null;\r\n  }\r\n  // getFile_MySky( \"userProfile\", { skydb: true })\r\n}\r\n\r\nexport const setProfile = async (profileJSON) => {\r\n  //set options\r\n  //const resultObj = await putFile_MySky(\"userProfile\", profileJSON, { skydb: true });\r\n  //BROWSER_STORAGE.setItem('userProfile', JSON.stringify(profileJSON));\r\n  let resultObj = null;\r\n  try {\r\n    const profileDAC = await getProfileDAC();\r\n    resultObj = await profileDAC.setProfile(profileJSON);\r\n    const profile = await getProfile();\r\n    console.log(\"profileDAC.setProfile : After write : =\" + profile);\r\n    const contentDAC = await getContentDAC();\r\n    await contentDAC.recordNewContent({ skylink: resultObj.dataLink, metadata: { \"contentType\": \"userprofile\", \"action\": \"update\" } });\r\n    return profileJSON;\r\n  }\r\n  catch (e) {\r\n    console.log(\"profileDAC.setProfile : failed =\" + e)\r\n  }\r\n  return {};\r\n  // await putFile_MySky(\"userProfile\", profileJSON, { skydb: true });\r\n}\r\n\r\nexport const getPreferences = async () => {\r\n  //set options\r\n  //return JSON.parse(BROWSER_STORAGE.getItem('userPreferences'));\r\n  // return await getFile_MySky( \"userPreferences\", { skydb: true })\r\n  try {\r\n    //set options\r\n    const profileDAC = await getProfileDAC();\r\n    //return await getFile_MySky(\"userProfile\", { skydb: true })?.data\r\n    const userID = await getUserID()\r\n    return await profileDAC.getPreferences(userID);\r\n    //return JSON.parse(BROWSER_STORAGE.getItem('userProfile'));\r\n  }\r\n  catch (e) {\r\n    console.log(\"profileDAC.getPreferences : failed =\" + e)\r\n    return null;\r\n  }\r\n\r\n}\r\nexport const setPreferences = async (preferencesJSON) => {\r\n  let resultObj = null;\r\n  try {\r\n    const profileDAC = await getProfileDAC();\r\n    //set options\r\n    resultObj = await profileDAC.setPreferences(preferencesJSON);\r\n    const contentDAC = await getContentDAC();\r\n    await contentDAC.recordNewContent({ skylink: resultObj.dataLink, metadata: { \"contentType\": \"preferences\", \"action\": \"update\" } });\r\n    return preferencesJSON;\r\n  }\r\n  catch (e) {\r\n    console.log(\"profileDAC.setPreferences : failed =\" + e)\r\n  }\r\n  return {};\r\n}\r\n// ### Following/Followers Functionality ###\r\n\r\n// null or publicKey\r\nexport const getFollwers = (publicKey) => { }\r\n\r\n// list of publicKeys\r\nexport const setFollwers = (publicKeys) => { }\r\nexport const setFollowersJSON = async (followersJSON, options) => {\r\n  try {\r\n    if (followersJSON) {\r\n      const resultObj = await putFile_MySky(FOLLOWER_PATH, followersJSON, options);\r\n      const contentDAC = await getContentDAC();\r\n      await contentDAC.recordNewContent({ skylink: resultObj.dataLink, metadata: { \"contentType\": \"followers\", \"action\": \"add\" } });\r\n    }\r\n  } catch (e) {\r\n    return e\r\n  }\r\n  return \"\"\r\n}\r\n\r\n// null or publicKey\r\nexport const getFollwings = (publicKey) => { }\r\n\r\n// list of publicKeys\r\nexport const setFollwings = (publicKeys) => { }\r\nexport const setFollowingsJSON = async (followingsJSON, options) => {\r\n  try {\r\n    if (followingsJSON) {\r\n      const resultObj = await putFile_MySky(FOLLOWING_PATH, followingsJSON, options);\r\n      const contentDAC = await getContentDAC();\r\n      await contentDAC.recordNewContent({ skylink: resultObj.dataLink, metadata: { \"contentType\": \"following\", \"action\": \"add\" } });\r\n    }\r\n  } catch (e) {\r\n    return e\r\n  }\r\n  return \"\"\r\n}\r\n\r\n// ### Published Apps Functionality ###\r\n\r\nexport const getPublishedApp = async (appId) => {\r\n  let publishedAppJSON = await getJSONfromIDB(appId, { store: IDB_STORE_SKAPP, });\r\n  return publishedAppJSON;\r\n}\r\n\r\nexport const getMyPublishedApps = async () => {\r\n  //let publishedAppsMap = new Map();\r\n  let publishedAppsMap = [];\r\n  try {\r\n    let { data: publishedAppsIdList } = await getFile_MySky(DK_PUBLISHED_APPS, { store: IDB_STORE_SKAPP });\r\n    if (publishedAppsIdList) {\r\n      await Promise.all(publishedAppsIdList.map(async (appId) => {\r\n        const resultObj = await getFile_MySky(appId, { store: IDB_STORE_SKAPP });\r\n        publishedAppsMap.push(resultObj.data);\r\n        try {\r\n          const contentDAC = await getContentDAC();\r\n          await contentDAC.recordInteraction({ skylink: resultObj.dataLink, metadata: { \"contentType\": \"skapp\", \"contentSubType\": \"publishedApp\", \"skappID\": appId, \"action\": \"view\" } });\r\n        }\r\n        catch (e) {\r\n          console.log(\"content record failed: e\" + e)\r\n        }\r\n      }));\r\n      console.log(\"getMyPublishedApps: \" + publishedAppsMap);\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n    return publishedAppsMap;\r\n  }\r\n  return publishedAppsMap;\r\n}\r\n\r\n//Update published app and returns list of all Published apps by loggedin User.\r\nexport const publishApp = async (appJSON) => {\r\n  //let publishedAppsIdList = await getFile_MySky( DK_PUBLISHED_APPS, { store: IDB_STORE_SKAPP });\r\n  let { data: publishedAppsIdList } = await getFile_MySky(DK_PUBLISHED_APPS, { skydb: true });\r\n  let firstTime = false;\r\n  if (publishedAppsIdList) {\r\n    if (!publishedAppsIdList.includes(appJSON.id)) {\r\n      // update Index value\r\n      publishedAppsIdList.push(appJSON.id);\r\n      firstTime = true;\r\n    }\r\n  }\r\n  else {\r\n    publishedAppsIdList = [appJSON.id];\r\n  }\r\n  // update Index value\r\n  await putFile_MySky(DK_PUBLISHED_APPS, publishedAppsIdList, { store: IDB_STORE_SKAPP });\r\n  // update existing published app\r\n  // add additional logic to link previously published App\r\n  const resultObj = await putFile_MySky(appJSON.id, appJSON, { store: IDB_STORE_SKAPP })\r\n  try {\r\n    await emitEvent(await getUserID(), appJSON.id, EVENT_PUBLISHED_APP);\r\n  }\r\n  catch (e) {\r\n    console.log(\"emitEvent failed: e\" + e)\r\n  }\r\n  try {\r\n    const contentDAC = await getContentDAC();\r\n    if (firstTime) {\r\n      \r\n      await contentDAC.recordNewContent({ skylink: resultObj.dataLink, metadata: { \"contentType\": \"skapp\", \"contentSubType\": \"publishedApp\", \"skappID\": appJSON.id, \"action\": \"created\" } });\r\n    }\r\n    else {\r\n      await contentDAC.recordNewContent({ skylink: resultObj.dataLink, metadata: { \"contentType\": \"skapp\", \"contentSubType\": \"publishedApp\", \"skappID\": appJSON.id, \"action\": \"updated\" } });\r\n    }\r\n  }\r\n  catch (e) {\r\n    console.log(\"content record failed: e\" + e)\r\n  }\r\n  const publishedAppsMap = await getMyPublishedApps();\r\n  //await addToSkappUserFollowing(userPubKey);\r\n  //await addToSharedApps(userPubKey, appJSON.id);\r\n  return publishedAppsMap;\r\n}\r\n\r\nexport const republishApp = async (appJSON) => {\r\n  let { data: publishedAppsIdList } = await getFile_MySky(DK_PUBLISHED_APPS, { store: IDB_STORE_SKAPP });\r\n  // check if appid is present in publishedAppsIdList.\r\n  if (publishedAppsIdList && !publishedAppsIdList.includes(appJSON.id)) {\r\n    // update Index value\r\n    await putFile_MySky(DK_PUBLISHED_APPS, publishedAppsIdList, { store: IDB_STORE_SKAPP });\r\n    // update existing published app\r\n    // add additional logic to link previously published App\r\n    const resultObj = await putFile_MySky(appJSON.id, appJSON, { store: IDB_STORE_SKAPP })\r\n    try {\r\n      const contentDAC = await getContentDAC();\r\n      await contentDAC.recordNewContent({ skylink: resultObj.dataLink, metadata: { \"contentType\": \"skapp\", \"contentSubType\": \"publishedApp\", \"skappID\": appJSON.id, \"action\": \"updated\" } });\r\n    }\r\n    catch (e) {\r\n      console.log(\"content record failed: e\" + e)\r\n    }\r\n    try {\r\n      await emitEvent(await getUserID(), appJSON.id, EVENT_PUBLISHED_APP);\r\n    }\r\n    catch (e) {\r\n      console.log(\"emitEvent failed: e\" + e)\r\n    }\r\n    //await addToSkappUserFollowing(userPubKey);\r\n    //await addToSharedApps(userPubKey, appJSON.id);\r\n  }\r\n  else {\r\n    console.log(\"app is not published. first publish app, then only you can EDIT app\");\r\n  }\r\n  const publishedAppsMap = await getMyPublishedApps();\r\n  return publishedAppsMap;\r\n}\r\nexport const installApp = async (appJSON) => {\r\n  let { data: installedAppsIdList } = await getFile_MySky(DK_INSTALLED_APPS, { store: IDB_STORE_SKAPP });\r\n  let firstTime = false;\r\n  if (installedAppsIdList) {\r\n    //app should not already be installed\r\n    if (!installedAppsIdList.includes(appJSON.id)) {\r\n      installedAppsIdList.push(appJSON.id);\r\n      firstTime = true;\r\n    }\r\n    else {\r\n      const installedAppsMap = await getMyInstalledApps();\r\n      //await addToSkappUserFollowing(userPubKey);\r\n      //await addToSharedApps(userPubKey, appJSON.id);\r\n      return installedAppsMap;\r\n    }\r\n  }\r\n  else {\r\n    installedAppsIdList = [appJSON.id];\r\n  }\r\n  // update Index value\r\n  await putFile_MySky(DK_INSTALLED_APPS, installedAppsIdList, { store: IDB_STORE_SKAPP });\r\n  // update existing published app\r\n  // add additional logic to link previously published App\r\n\r\n  const resultObj = await putFile_MySky(`${appJSON.id}#installed`, appJSON, { store: IDB_STORE_SKAPP })\r\n  try {\r\n    const contentDAC = await getContentDAC();\r\n    await contentDAC.recordNewContent({ skylink: resultObj.dataLink, metadata: { \"contentType\": \"skapp\", \"contentSubType\": \"pinned\", \"skappID\": appJSON.id, \"action\": \"created\" } });\r\n  }\r\n  catch (e) {\r\n    console.log(\"content record failed: e\" + e)\r\n  }\r\n  try {\r\n    await emitEvent(await getUserID(), appJSON.id, EVENT_APP_INSTALLED);\r\n  }\r\n  catch (e) {\r\n    console.log(\"emitEvent failed: e\" + e)\r\n  }\r\n  const installedAppsMap = await getMyInstalledApps();\r\n  //await addToSkappUserFollowing(userPubKey);\r\n  //await addToSharedApps(userPubKey, appJSON.id);\r\n  return installedAppsMap;\r\n}\r\n\r\nexport const uninstallApp = async (appId) => {\r\n  let { data: installedAppsIdList } = await getFile_MySky(DK_INSTALLED_APPS, { store: IDB_STORE_SKAPP });\r\n  if (installedAppsIdList) {\r\n    //app should already be installed for uninstall\r\n    if (installedAppsIdList.includes(appId)) {\r\n      installedAppsIdList.splice(installedAppsIdList.indexOf(appId), 1);\r\n      //set updated list\r\n      await putFile_MySky(DK_INSTALLED_APPS, installedAppsIdList, { store: IDB_STORE_SKAPP });\r\n      // update existing published app\r\n      // add additional logic to link previously published App// set empty value\r\n      const resultObj = await putFile_MySky(`${appId}#installed`, {}, { store: IDB_STORE_SKAPP })\r\n      try {\r\n        const contentDAC = await getContentDAC();\r\n        await contentDAC.recordNewContent({ skylink: resultObj.dataLink, metadata: { \"contentType\": \"skapp\", \"contentSubType\": \"pinned\", \"skappID\": appId, \"action\": \"removed\" } });\r\n      }\r\n      catch (e) {\r\n        console.log(\"content record failed: e\" + e)\r\n      }\r\n      try {\r\n        await emitEvent(await getUserID(), appId, EVENT_APP_UNINSTALLED);\r\n      }\r\n      catch (e) {\r\n        console.log(\"emitEvent failed: e\" + e)\r\n      }\r\n    }\r\n  }\r\n  const installedAppsMap = await getMyInstalledApps();\r\n  //await addToSkappUserFollowing(userPubKey);\r\n  //await addToSharedApps(userPubKey, appJSON.id);\r\n  return installedAppsMap;\r\n}\r\n\r\nexport const getMyInstalledApps = async () => {\r\n  //let publishedAppsMap = new Map();\r\n  let installedAppsMap = [];\r\n  try {\r\n    let { data: installedAppsIdList } = await getFile_MySky(DK_INSTALLED_APPS, { store: IDB_STORE_SKAPP });\r\n    if (installedAppsIdList) {\r\n      await Promise.all(installedAppsIdList.map(async (appId) => {\r\n        const resultObj = await getFile_MySky(`${appId}#installed`, { store: IDB_STORE_SKAPP });\r\n        installedAppsMap.push(resultObj.data);\r\n        try {\r\n          const contentDAC = await getContentDAC();\r\n          await contentDAC.recordInteraction({ skylink: resultObj.dataLink, metadata: { \"contentType\": \"skapp\", \"contentSubType\": \"pinned\", \"skappID\": appId, \"action\": \"view\" } });\r\n        }\r\n        catch (e) {\r\n          console.log(\"content record failed: e\" + e)\r\n        }\r\n      }));\r\n      console.log(\"getMyInstalledAppsMap: \" + installedAppsMap);\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n    return installedAppsMap;\r\n  }\r\n  return installedAppsMap;\r\n}\r\n\r\n\r\nexport const setAppStatsEvent = async (statsEventType, appId) => {\r\n  let appStatsStr = \"0#0#0#0\"; // View#access#likes#fav\r\n  let userID = await getUserID() ?? ANONYMOUS; // ANONYMOUS : user is not loggedIn\r\n  let appStatsList = null;\r\n  let resultObj = null;\r\n  try {\r\n    // Get Data from IDX-DB\r\n    //appStatsJSON = await getFile_MySky(`${appId}#stats`, { store: IDB_STORE_SKAPP, });\r\n    if (userID != ANONYMOUS) {\r\n      // STEP1: get current value from Users Storage\r\n      // let appStatsEntry = await getRegistryEntry(getUserPublicKey(), `${appId}#stats`, { store: IDB_STORE_SKAPP, });\r\n      // appStatsStr = appStatsEntry?.data ?? \"0#0#0#0\";// View#access#likes#fav\r\n      resultObj = await getFile_MySky(`${appId}#stats`, { store: IDB_STORE_SKAPP, });\r\n      appStatsStr = resultObj?.data?.stats ?? \"0#0#0#0\";// View#access#likes#fav\r\n      //{ views: parseInt(appStatsList[0]), access: parseInt(appStatsList[1]), likes: parseInt(appStatsList[2]), favorites: parseInt(appStatsList[3]) }\r\n    }\r\n    appStatsList = appStatsStr.split('#');\r\n    switch (statsEventType) {\r\n      case EVENT_APP_VIEWED:\r\n        appStatsList[0] = parseInt(appStatsList[0]) + 1;\r\n        try {\r\n          const contentDAC = await getContentDAC();\r\n          await contentDAC.recordInteraction({ skylink: resultObj?.dataLink, metadata: { \"contentType\": \"skapp\", \"contentSubType\": \"published\", \"skappID\": appId, \"action\": \"viewed\" } });\r\n        }\r\n        catch (e) {\r\n          console.log(\"content record failed: e\" + e)\r\n        }\r\n        break;\r\n      case EVENT_APP_ACCESSED:\r\n        appStatsList[1] = parseInt(appStatsList[1]) + 1;\r\n        try {\r\n          const contentDAC = await getContentDAC();\r\n          await contentDAC.recordInteraction({ skylink: resultObj?.dataLink, metadata: { \"contentType\": \"skapp\", \"contentSubType\": \"published\", \"skappID\": appId, \"action\": \"accessed\" } });\r\n        }\r\n        catch (e) {\r\n          console.log(\"content record failed: e\" + e)\r\n        }\r\n        break;\r\n      case EVENT_APP_LIKED:\r\n        appStatsList[2] = 1;\r\n        try {\r\n          const contentDAC = await getContentDAC();\r\n          await contentDAC.recordInteraction({ skylink: resultObj?.dataLink, metadata: { \"contentType\": \"skapp\", \"contentSubType\": \"published\", \"skappID\": appId, \"action\": \"liked\" } });\r\n        }\r\n        catch (e) {\r\n          console.log(\"content record failed: e\" + e)\r\n        }\r\n        break;\r\n      case EVENT_APP_LIKED_REMOVED:\r\n        appStatsList[2] = 0;\r\n        try {\r\n          const contentDAC = await getContentDAC();\r\n          await contentDAC.recordInteraction({ skylink: resultObj?.dataLink, metadata: { \"contentType\": \"skapp\", \"contentSubType\": \"published\", \"skappID\": appId, \"action\": \"unliked\" } });\r\n        }\r\n        catch (e) {\r\n          console.log(\"content record failed: e\" + e)\r\n        }\r\n        break;\r\n      case EVENT_APP_FAVORITE:\r\n        appStatsList[3] = 1;\r\n        try {\r\n          const contentDAC = await getContentDAC();\r\n          await contentDAC.recordInteraction({ skylink: resultObj?.dataLink, metadata: { \"contentType\": \"skapp\", \"contentSubType\": \"published\", \"skappID\": appId, \"action\": \"favorite\" } });\r\n        }\r\n        catch (e) {\r\n          console.log(\"content record failed: e\" + e)\r\n        }\r\n        break;\r\n      case EVENT_APP_FAVORITE_REMOVED:\r\n        appStatsList[3] = 0;\r\n        try {\r\n          const contentDAC = await getContentDAC();\r\n          await contentDAC.recordInteraction({ skylink: resultObj?.dataLink, metadata: { \"contentType\": \"skapp\", \"contentSubType\": \"published\", \"skappID\": appId, \"action\": \"unfavorite\" } });\r\n        }\r\n        catch (e) {\r\n          console.log(\"content record failed: e\" + e)\r\n        }\r\n        break;\r\n      default:\r\n        console.log(\"In Dafault loop: \" + statsEventType)\r\n        break;\r\n    }\r\n    if (userID != ANONYMOUS) {\r\n      //await setRegistryEntry(`${appId}#stats`, appStatsList.join(\"#\"), { store: IDB_STORE_SKAPP, });\r\n      await putFile_MySky(`${appId}#stats`, { stats: appStatsList.join(\"#\") }, { store: IDB_STORE_SKAPP, });\r\n    }\r\n    try {\r\n      await emitEvent(await getUserID(), appId, statsEventType);\r\n    }\r\n    catch (e) {\r\n      console.log(\"emitEvent failed: e\" + e)\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n    return appStatsList;\r\n  }\r\n  return appStatsList;\r\n}\r\n\r\n// pass list of appIds to get AppStats. Fav, Viewed, liked, accessed\r\nexport const getAppStats = async (appId) => {\r\n  // Get Data from IDX-DB\r\n  //let appStatsObj = await getJSONfromIDB(`${appId}#stats`, { store: IDB_STORE_SKAPP, });\r\n  // let appStatsStr = (appStatsObj && appStatsObj[1]) ?? \"0#0#0#0\"\r\n  // let appStatsList = appStatsStr.split(\"#\"); // View#access#likes#fav\r\n  let resultObj = await getFile_MySky(`${appId}#stats`, { store: IDB_STORE_SKAPP, });\r\n  //let appStatsObj = await getRegistryEntry(getUserPublicKey(), `${appId}#stats`);\r\n  try {\r\n    const contentDAC = await getContentDAC();\r\n    await contentDAC.recordInteraction({ skylink: resultObj.dataLink, metadata: { \"contentType\": \"skapp\", \"contentSubType\": \"published\", \"skappID\": appId, \"action\": \"statsViewed\" } });\r\n  }\r\n  catch (e) {\r\n    console.log(\"content record failed: e\" + e)\r\n  }\r\n  let appStatsList = (resultObj?.data?.stats ?? \"0#0#0#0\").split(\"#\");\r\n  return appStatsList;\r\n}\r\n\r\n// get apps comments - \r\nexport const setAppComment = async (appId, comment) => {\r\n  let commentObj = {\r\n    timestamp: new Date(),\r\n    comment,\r\n  };\r\n  let appCommentsJSON = await getJSONfromIDB(`${appId}#appComments`, { store: IDB_STORE_SKAPP, });\r\n  if (appCommentsJSON === null) { //If null or empty\r\n    // TODO: create and return new empty stats object\r\n  }\r\n  appCommentsJSON.content.comments.push(commentObj);\r\n  const resultObj = await setJSONinIDB(`${appId}appComments`, appCommentsJSON, { store: IDB_STORE_SKAPP });\r\n  try {\r\n    const contentDAC = await getContentDAC();\r\n    await contentDAC.recordNewContent({ skylink: resultObj.dataLink, metadata: { \"contentType\": \"skapp\", \"contentSubType\": \"comments\", \"skappID\": appId, \"action\": \"created\" } });\r\n  }\r\n  catch (e) {\r\n    console.log(\"content record failed: e\" + e)\r\n  }\r\n}\r\n\r\n// pass list of appIds to get App Comments.\r\nexport const getAppComments = async (appId) => {\r\n  let appCommentsJSON = await getJSONfromIDB(`${appId}#appComments`, { store: IDB_STORE_SKAPP, });\r\n  return appCommentsJSON;\r\n}\r\n\r\n//action for upload videos and images\r\nexport const UploadAppLogo = async (file, setLogoUploaded, logoLoaderHandler) => {\r\n  try {\r\n    const getCompressed = await imageCompression(file, {\r\n      maxSizeMB: 1,\r\n      maxWidthOrHeight: 256,\r\n      useWebWorker: true,\r\n    });\r\n    const skylinkForCompressed = await uploadFile(getCompressed);\r\n    const skylink = await uploadFile(file);\r\n    let obj = {\r\n      thumbnail: skylinkForCompressed.skylink,\r\n      image: skylink.skylink,\r\n    };\r\n    setLogoUploaded(obj);\r\n    logoLoaderHandler(false);\r\n  } catch (err) {\r\n    logoLoaderHandler(false);\r\n  }\r\n};\r\n\r\nexport const UploadImagesAction = async (file, getUploadedFile, getFun) => {\r\n  try {\r\n    const getCompressed = await imageCompression(file, {\r\n      maxSizeMB: 1,\r\n      maxWidthOrHeight: 256,\r\n      useWebWorker: true,\r\n    });\r\n\r\n    const skylinkForCompressed = await uploadFile(getCompressed);\r\n\r\n    const skylink = await uploadFile(file);\r\n\r\n    let obj = {\r\n      thumbnail: skylinkForCompressed.skylink,\r\n      image: skylink.skylink,\r\n    };\r\n\r\n    getUploadedFile(obj);\r\n    getFun(false);\r\n  } catch (err) {\r\n    getFun(false);\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const UploadVideoAction = async (file, thumb, getUploadedFile, videoUploadLoader) => {\r\n  try {\r\n    const skylinkForCompressed = await uploadFile(thumb);\r\n\r\n    const skylink = await uploadFile(file);\r\n\r\n    let obj = {\r\n      thumbnail: skylinkForCompressed.skylink,\r\n      video: skylink.skylink,\r\n    };\r\n\r\n    getUploadedFile(obj);\r\n    videoUploadLoader(false);\r\n  } catch (err) {\r\n    videoUploadLoader(false);\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n// ### AppStore Functionality ###\r\n\r\n// Returns all Apps data(JSON) from List of Devs I am Following\r\nexport const getMyAppStore = () => { }\r\n\r\n// Returns all Apps data(JSON) from \"Skapp Developer\"\r\nexport const getDefaultAppStore = () => { }\r\n\r\n// ### Hosting Functionality ###\r\n\r\n// get my all hosted apps. Returns List of JSONS\r\n/**\r\n * \r\n * @param { Array } appIds[] Optional. Do not pass argument to get only the list of IDs. Pass a blank array to get list of all hosted apps. \r\n * Pass array with values in it get app list of the provided hosted apps.\r\n * \r\n *\r\n */\r\nexport const getMyHostedApps = async (appIds) => {\r\n  const hostedAppIdList = { appIdList: [], appDetailsList: {} }\r\n  try {\r\n    if (appIds == null || appIds.length === 0) {\r\n      let { data } = await getFile_MySky(DK_HOSTED_APPS, { store: IDB_STORE_SKAPP });\r\n      hostedAppIdList.appIdList = data;\r\n      appIds = appIds?.length === 0 ? data : appIds;\r\n    }\r\n    appIds?.length > 0 && await Promise.all(appIds.map(async (appId) => {\r\n      const resultObj = await getFile_MySky(`${appId}#hosted`, { store: IDB_STORE_SKAPP });\r\n      hostedAppIdList.appDetailsList[appId] = resultObj.data;\r\n      try {\r\n        const contentDAC = await getContentDAC();\r\n        await contentDAC.recordInteraction({ skylink: resultObj.dataLink, metadata: { \"contentType\": \"skapp\", \"contentSubType\": \"hosted\", \"skappID\": appId, \"action\": \"viewed\" } });\r\n      }\r\n      catch (e) {\r\n        console.log(\"content record failed: e\" + e)\r\n      }\r\n    }));\r\n    return hostedAppIdList;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\n//Update published app data\r\nexport const setMyHostedApp = async (appJSON, previousId) => {\r\n\r\n  const hostedAppIdList = (await getMyHostedApps())?.appIdList || [];\r\n  const ts = new Date().getTime();\r\n  let history = {};\r\n  history[ts] = appJSON.skylink;\r\n  const id = previousId ? previousId : generateSkappId();\r\n  let appVersion = \"1\";\r\n  let previousApp;\r\n  if (previousId) {\r\n    previousApp = (await getMyHostedApps([previousId])).appDetailsList[previousId];\r\n    appVersion = parseInt(previousApp.version) + 1;\r\n    history = { ...previousApp.content.history, ...history };\r\n  }\r\n  const hostedAppJSON = {\r\n    \"$type\": \"skapp\",\r\n    \"$subType\": \"hosted\",\r\n    \"createdTs\": previousApp ? previousApp.createdTs : ts,\r\n    id,\r\n    \"version\": appVersion,\r\n    \"prevSkylink\": previousApp ? previousApp.content.skylink : null,\r\n    \"content\": {\r\n      ...appJSON,\r\n      history\r\n    },\r\n    ts\r\n  };\r\n  //alert(\"previousId\" + previousId);\r\n  const resultObj = await putFile_MySky(`${id}#hosted`, hostedAppJSON, { store: IDB_STORE_SKAPP });\r\n  try {\r\n    const contentDAC = await getContentDAC();\r\n    const status = await contentDAC.recordNewContent({ skylink: resultObj.dataLink, metadata: { \"contentType\": \"skapp\", \"contentSubType\": \"hosted\", \"skappID\": appJSON.id, \"action\": \"created\" } });\r\n  }\r\n  catch (e) {\r\n    console.log(\"content record failed: e\" + e)\r\n  }\r\n  if (previousId === \"\" || previousId === null || previousId === undefined) {\r\n    //alert(\"adding in array\" + previousId);\r\n    await putFile_MySky(DK_HOSTED_APPS, [...hostedAppIdList, id], { store: IDB_STORE_SKAPP });\r\n  }\r\n  return hostedAppJSON;\r\n}\r\n\r\nexport const deleteMyHostedApp = async (appId) => {\r\n  let status = false;\r\n  try {\r\n    const hostedAppIdList = (await getMyHostedApps())?.appIdList || [];\r\n    hostedAppIdList.splice(hostedAppIdList.indexOf(appId), 1);\r\n    const resultObj = await putFile_MySky(`${appId}#hosted`, {}, { store: IDB_STORE_SKAPP });\r\n    try {\r\n      const contentDAC = await getContentDAC();\r\n      await contentDAC.recordNewContent({ skylink: resultObj.dataLink, metadata: { \"contentType\": \"skapp\", \"contentSubType\": \"hosted\", \"skappID\": appId, \"action\": \"removed\" } });\r\n    }\r\n    catch (e) {\r\n      console.log(\"content record failed: e\" + e)\r\n    }\r\n    await putFile_MySky(DK_HOSTED_APPS, [...hostedAppIdList], { store: IDB_STORE_SKAPP });\r\n    status = true;\r\n  }\r\n  catch (e) {\r\n    console.log(\"deleteMyHostedApp : Error deleting  = \" + appId)\r\n  }\r\n  return status;\r\n}\r\n\r\n//set HNS Entry. Everytime app is deployed this method must be called. else handshake name wont be updated with new skylink\r\nexport const setHNSEntry = (hnsName, skylink) => { }\r\n\r\n//get HNS URL for TXT record\r\n//export const getHNSSkyDBURL = (hnsName) => getRegistryEntryURL(getUserPublicKey(), hnsName);\r\nexport const getHNSSkyDBURL = async (hnsName) => getRegistryEntryURL(await getUserID(), hnsName);\r\n\r\nexport const initializeLocalDatabaseFromBackup = async () => {\r\n  try {\r\n  } catch (e) { }\r\n}\r\n\r\nexport const backupLocalDatabaseOnSkyDB = async () => {\r\n  try {\r\n  } catch (e) { }\r\n}\r\n\r\n// export const getUserProfile = async (userSession) => {\r\n//   await userProfileDacTest(userSession)\r\n//   /// LoadDac\r\n//   // let profileJSON = await getFile(session, SKYID_PROFILE_PATH);\r\n//   let userProfileObj = createDummyUserProfileObject();\r\n//   //userProfileObj.userID = userID;\r\n//   //await getContentDAC().recordNewContent({skylink: resultObj.dataLink,metadata: {\"contentType\":\"skapp\",\"contentSubType\":\"hosted\",\"skappID\":appJSON.id,\"action\":\"removed\"}});\r\n//   //TODO: KUSHAL - call userprofile DAC\r\n\r\n//   //const response = await getFile(session.mySky.userID, SKYID_PROFILE_PATH, { skydb: true })\r\n//   // if (response == \"\" || response == undefined) {\r\n//   //   // file not found\r\n//   //   console.log(\"Profile not found;, please check your connection and retry\")\r\n//   // } else {\r\n//   //   // success\r\n//   //   //let temp = JSON.stringify(response);\r\n//   //   let skyIdProfileObj = JSON.parse(response);\r\n//   //   const { publicKey, privateKey } = snKeyPairFromSeed(session.skyid.seed)\r\n//   //   personObj = {\r\n//   //     masterPublicKey: session.skyid.userId, // public key derived from \"master seed\". we pull profile using this public key\r\n//   //     appSeed: session.skyid.seed, // App specific seed derived from \"Master Seed\"\r\n//   //     appId: session.skyid.appId,\r\n//   //     appImg: session.skyid.appImg,\r\n//   //     appPublicKey: publicKey,\r\n//   //     appPrivateKey: privateKey,\r\n//   //     profile: {\r\n//   //       username: skyIdProfileObj.username, // user name is associated with master Key\r\n//   //       did: skyIdProfileObj.username, // this is place holder for Decentralized Id (DID)\r\n//   //       aboutme: skyIdProfileObj.aboutMe,\r\n//   //       location: skyIdProfileObj.location,\r\n//   //       avatar: skyIdProfileObj.avatar,\r\n//   //       profilePicture: skyIdProfileObj.profilePicture,\r\n//   //     },\r\n//   //   }\r\n//   // }\r\n//   return userProfileObj\r\n// }\r\n\r\n\r\n//#################### SkyDB Methods #########################\r\n// After SKAPP DAC is integrated, move this methods to DAC setter and getter methods\r\n//########################################################\r\nexport const getAllPublishedApps = async (sortOn, orderBy, resultCount) => {\r\n  // TODO: Check Sorting in App stats first and then load remaining appIDs\r\n  //let publishedAppsMap = new Map();\r\n  let allPublishedApps = [];\r\n  try {\r\n    // april 25th \r\n    // let publishedAppsIdList = await getFile(getProviderKeysByType(\"AGGREGATOR\").publicKey, DK_PUBLISHED_APPS, { store: IDB_STORE_SKAPP_AGGREGATED_DATA });\r\n    //let publishedAppsIdList = await getFile(null, DK_PUBLISHED_APPS, { store: IDB_STORE_SKAPP_AGGREGATED_DATA, publicKey: getProviderKeysByType(\"AGGREGATOR\").publicKey });\r\n    let {data : publishedAppsIdList} = await getFile_SkyDB(getProviderKeysByType(\"AGGREGATOR\").publicKey, DK_AGGREGATED_PUBLISHED_APPS);\r\n    let {data : publishedAppsStatsList} = await getFile_SkyDB(getProviderKeysByType(\"AGGREGATOR\").publicKey, DK_AGGREGATED_PUBLISHED_APPS_STATS);\r\n\r\n    if (publishedAppsIdList) {\r\n      await Promise.all(publishedAppsIdList.map(async (pubkeyAndAppId) => {\r\n        let temp = pubkeyAndAppId.split('#'); //userID#appId\r\n        //let appJSON = await getFile(null, temp[1], { store: IDB_STORE_SKAPP_AGGREGATED_DATA, publicKey: temp[0]})// TODO: need to fix IDB store\r\n        let { data: appJSON, dataLink } = await getFile_MySky(temp[1], { userID: temp[0] });\r\n        try {\r\n          const contentDAC = await getContentDAC();\r\n          await contentDAC.recordInteraction({ skylink: dataLink, metadata: { \"contentType\": \"skapp\", \"contentSubType\": \"published\", \"skappID\": temp[1], \"action\": \"viewed\" } });\r\n        }\r\n        catch (e) {\r\n          console.log(\"content record failed: e\" + e)\r\n        }\r\n        if (appJSON) { // if no appJSON found in user SkyDB, skip and move on to next appId\r\n          // Read appStats from Aggregator Storage and update AppJSON\r\n          let appStats = \"0#0#0#0\";\r\n          let appStatsList = [];\r\n          try {\r\n            //let tempEntry = await getRegistryEntry(getProviderKeysByType(\"AGGREGATOR\").publicKey, temp[1] + \"#stats\");\r\n            appStats = publishedAppsStatsList?.appStatsList[appJSON.id] ?? \"0#0#0#0\";\r\n            appStatsList = appStats.split('#');\r\n            // View#access#likes#fav\r\n            appJSON.content.appstats = { views: parseInt(appStatsList[0]), access: parseInt(appStatsList[1]), likes: parseInt(appStatsList[2]), favorites: parseInt(appStatsList[3]) };\r\n          } catch (e) {\r\n            console.log(\"getAllPublishedApps: e\" + e);\r\n          }\r\n          // let appStats = \"0#0#0#0\";\r\n          // let appStatsList = [];\r\n          // try {\r\n          //   let tempEntry = await getRegistryEntry(getProviderKeysByType(\"AGGREGATOR\").publicKey, temp[1] + \"#stats\");\r\n          //   appStats = tempEntry ? tempEntry.data : \"0#0#0#0\";\r\n          //   appStatsList = appStats.split('#');\r\n          //   // View#access#likes#fav\r\n          //   appJSON.content.appstats = { views: parseInt(appStatsList[0]), access: parseInt(appStatsList[1]), likes: parseInt(appStatsList[2]), favorites: parseInt(appStatsList[3]) };\r\n          // } catch (e) {\r\n          //   console.log(\"getAllPublishedApps: e\" + e);\r\n          // }\r\n          allPublishedApps.push(appJSON);\r\n        }\r\n      }));\r\n      // Sort list by specific parameter\r\n      let iteratees = obj => -obj.content.appstats.views;\r\n      switch (sortOn) {\r\n        case \"VIEWS\":\r\n          iteratees = obj => (orderBy === \"ASC\") ? obj.content.appstats.views : -obj.content.appstats.views;\r\n          break;\r\n        case \"ACCESS\":\r\n          iteratees = obj => (orderBy === \"ASC\") ? obj.content.appstats.access : -obj.content.appstats.access;\r\n          break;\r\n        case \"LIKES\":\r\n          iteratees = obj => (orderBy === \"ASC\") ? obj.content.appstats.likes : -obj.content.appstats.likes;\r\n          break;\r\n        case \"FAVORITES\":\r\n          iteratees = obj => (orderBy === \"ASC\") ? obj.content.appstats.favorites : -obj.content.appstats.favorites;\r\n          break;\r\n        default:\r\n          iteratees = obj => -obj.content.appstats.views;\r\n          console.log(\"In Dafault sorting 'Views Desc' \");\r\n          break;\r\n      }\r\n      allPublishedApps = _.orderBy(allPublishedApps, iteratees)\r\n      if (resultCount && resultCount != 0) {\r\n        allPublishedApps = allPublishedApps.slice(0, resultCount);\r\n      }\r\n      console.log(\"allPublishedApps: \" + allPublishedApps);\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n    return allPublishedApps;\r\n  }\r\n  return allPublishedApps;\r\n}\r\n\r\nexport const getAggregatedAppStatsByAppId = async (appId) => {\r\n  // Get Data from IDX-DB\r\n  let appStatsObj = await getRegistryEntry(getProviderKeysByType(\"AGGREGATOR\").publicKey, `${appId}#stats`);\r\n  // let appStatsObj = await getJSONfromIDB(`${appId}#stats`, { store: IDB_STORE_SKAPP_AGGREGATED_DATA, });\r\n  let appStatsList = (appStatsObj?.data?.stats ?? \"0#0#0#0\").split(\"#\"); // View#access#likes#fav\r\n  // try {\r\n  //   const contentDAC = await getContentDAC();\r\n  //   await contentDAC.recordInteraction({skylink: resultObj.dataLink,metadata: {\"contentType\":\"skapp\",\"contentSubType\":\"published\",\"skappID\":appJSON.id,\"action\":\"viewed\"}});\r\n  // }\r\n  // catch (e) {\r\n  //   console.log(\"content record failed: e\" + e)\r\n  // }\r\n  return appStatsList;\r\n}\r\n\r\nexport const getAggregatedAppStats = async (appIds) => {\r\n  let appStatsList = { appIdList: [], appStatsList: {} };\r\n  // get all appId from PublishedApp\r\n  try {\r\n    // we can improve here by pagination\r\n    // Fetch all AppStats\r\n    appStatsList = await getFile(null, DK_AGGREGATED_PUBLISHED_APPS_STATS, { store: IDB_STORE_SKAPP_AGGREGATED_DATA, publicKey: getProviderKeysByType(\"AGGREGATOR\").publicKey });\r\n\r\n    // if (appIds == null || appIds.length === 0) {\r\n    //   let publishedAppsIdList = await getFile(null, DK_AGGREGATED_PUBLISHED_APPS, { store: IDB_STORE_SKAPP_AGGREGATED_DATA, publicKey: getProviderKeysByType(\"AGGREGATOR\").publicKey });\r\n    //   //let {data} = await getFile_MySky(DK_AGGREGATED_PUBLISHED_APPS, { store: IDB_STORE_SKAPP_AGGREGATED_DATA });\r\n    //   appStatsList.appIdList = publishedAppsIdList;\r\n    //   appIds = appIds?.length === 0 ? publishedAppsIdList : appIds;\r\n    // }\r\n    // appIds?.length > 0 && await Promise.all(appIds.map(async (userIDAndAppId) => {\r\n    //   let temp = userIDAndAppId.split('#'); //userID#appId\r\n    //   const aggStatsByAppID = await getFile(null, temp[1] + \"#stats\", { store: IDB_STORE_SKAPP_AGGREGATED_DATA, publicKey: getProviderKeysByType(\"AGGREGATOR\").publicKey });\r\n    //   //appStatsList.appStatsList[temp[1]] = (await getFile_MySky( `${appId}#stats`, { store: IDB_STORE_SKAPP_AGGREGATED_DATA }))?.data;\r\n    //   appStatsList.appStatsList[temp[1]] = aggStatsByAppID;\r\n    // }));\r\n    return appStatsList;\r\n  } catch (err) {\r\n    console.log(err);\r\n    return\r\n  }\r\n}\r\n// ### Apps Stats and comments Functionality ###\r\n","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnUploadListAction.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\service\\SnFormikUtilService.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\utils\\SnUtility.js",["869","870","871"],"import imageCompression from \"browser-image-compression\";\r\nimport {DEFAULT_PORTAL} from \"./SnConstants\";\r\nimport base64 from \"base64-js\";\r\nimport base32Encode from \"base32-encode\";\r\nimport store from \"../redux\";\r\n\r\nexport function decodeBase64(input = \"\") {\r\n  return base64.toByteArray(\r\n    input.padEnd(input.length + 4 - (input.length % 4), \"=\")\r\n  );\r\n}\r\n\r\nexport function encodeBase32(input) {\r\n  return base32Encode(input, \"RFC4648-HEX\", { padding: false }).toLowerCase();\r\n}\r\n\r\nexport function getBase32Skylink(skylink) {\r\n  return encodeBase32(decodeBase64(skylink));\r\n}\r\n\r\nexport const getCompatibleTags = (resCategory) => {\r\n  let category = []\r\n  if (resCategory != null) {\r\n    if (Array.isArray(resCategory)) {\r\n      category = resCategory.map((cat) => cat.toLowerCase())\r\n    } else {\r\n      category = [resCategory.toLowerCase()]\r\n    }\r\n  }\r\n  return JSON.parse(JSON.stringify(category))\r\n}\r\n\r\nexport const getSkyspaceListForCarousalMenu = (snSkyspaceList) => {\r\n  if (snSkyspaceList != null) {\r\n    const carousalMenuObj = {}\r\n    snSkyspaceList.forEach((skyspace) => {\r\n      carousalMenuObj[skyspace] = {\r\n        label: skyspace,\r\n      }\r\n    })\r\n    return carousalMenuObj\r\n  }\r\n}\r\n/** Start : Skynet Methods * */\r\nexport const getPortal = () => {\r\n  // let skynetPortal = store.getState().snUserSetting?.setting?.portal\r\n  // skynetPortal =\r\n  //   skynetPortal && skynetPortal.trim() !== \"\" ? skynetPortal : DEFAULT_PORTAL\r\n  return \"https://siasky.net/\"\r\n}\r\n\r\n// It will generate base32 url for any Skapp\r\nconst getbase32URlForSkapp = (skylink) => {\r\n  let base32URL = null;\r\n  return base32URL;\r\n}\r\n\r\n// // I think we can use idp field in session object for this\r\n// export const getUserSessionType = (userSession) => {\r\n//   let idType = ID_PROVIDER_SKYID\r\n//   // ID_PROVIDER_BLOCKSTACK;\r\n//   if (userSession.skydbseed) {\r\n//     idType = ID_PROVIDER_SKYDB\r\n//   } else if (userSession.skyid) {\r\n//     idType = ID_PROVIDER_SKYID\r\n//   }\r\n//   return idType\r\n// }\r\n\r\n/**\r\n * Compresses Image file to Skyspace params. Returns an Object of type File\r\n * \r\n * @param {File} originalFile Original File.\r\n */\r\n\r\nexport const getCompressedImageFile = async (originalFile) => {\r\n  const compressedBlob = await imageCompression(originalFile, {\r\n    maxSizeMB: 1,\r\n    maxWidthOrHeight: 256,\r\n    useWebWorker: true,\r\n  });\r\n  return new File([compressedBlob], compressedBlob.name);\r\n};\r\n\r\n/**\r\n * Generates thumbnail image file out of the first frame of the video file.\r\n * \r\n * @param {Object} Object\r\n * @param {string?} Object.url - The video source Url.\r\n * @param {string?} Object.file - Optional video file object reference. If the Url s not provided, \r\n * then this property must have a value. If the url does have a valu then this property will be ignored.\r\n */\r\n\r\nexport const generateThumbnailFromVideo = async ({ file, url }) => {\r\n  let videoResolve = null;\r\n  const videoPromise = new Promise((resolve) => {\r\n    videoResolve = resolve;\r\n  });\r\n  let video = document.createElement('video');\r\n  video.crossOrigin = \"anonymous\";\r\n  video.src = url ? url : URL.createObjectURL(file);\r\n  video.load();\r\n  await videoPromise;\r\n  const videoThumbnail = await videoToImg(video);\r\n  return videoThumbnail;\r\n};\r\n\r\n/**\r\n * Takes a video element and that has image already loaded and returns an image file which is a thumbnail\r\n * generated out of the first frame of the video \r\n * \r\n * @param {Element} video Video Element.\r\n */\r\n\r\nexport const videoToImg = async (video) => {\r\n  let canvas = document.createElement(\"canvas\");\r\n  let w = video.videoWidth;\r\n  let h = video.videoHeight;\r\n  canvas.width = w;\r\n  canvas.height = h;\r\n  let ctx = canvas.getContext(\"2d\");\r\n  ctx.drawImage(video, 0, 0, w, h);\r\n  let file = await imageCompression.canvasToFile(canvas, \"image/jpeg\");\r\n  return file;\r\n};\r\n\r\nexport const getPortalFromUserSetting = (userSetting) => {\r\n  // TODO : extract user selected portal from store . Returning default portal for now.\r\n  return DEFAULT_PORTAL;\r\n};\r\n\r\nexport const skylinkToUrl = (skyLink, userSetting) => {\r\n  let link = \"\";\r\n  const portal = userSetting ? getPortalFromUserSetting(userSetting) : DEFAULT_PORTAL;\r\n  if (skyLink.indexOf(\"http://\") === 0 || skyLink.indexOf(\"https://\") === 0) {\r\n    link = skyLink;\r\n  } else if (skyLink.indexOf(\"sia://\") === 0) {\r\n    link = skyLink.replace(\"sia://\", portal);\r\n  } else if (skyLink.indexOf(\"sia:\") === 0) {\r\n    link = skyLink.replace(\"sia:\", getPortalFromUserSetting(userSetting));\r\n  } else if (skyLink.length === 46) {\r\n    link = portal + skyLink;\r\n  }\r\n  return link;\r\n};\r\n\r\nexport const hashFromSkylinkUploadResponse = (response) => response.skylink.replace(\"sia:\", \"\");\r\n\r\nexport const launchSkyLink = (skyLink, userSetting) => {\r\n  const link = skylinkToUrl(skyLink, userSetting);\r\n  if (link !== \"\") {\r\n    window.open(link, \"_blank\");\r\n  }\r\n};\r\n\r\nexport const flattenObject = (obj) => {\r\n  const flattened = {};\r\n  Object.keys(obj).forEach((key) => {\r\n    if (typeof obj[key] === 'object' && obj[key] !== null) {\r\n      Object.assign(flattened, flattenObject(obj[key]));\r\n    } else {\r\n      flattened[key] = obj[key]\r\n    }\r\n  });\r\n  return flattened;\r\n};\r\n\r\n/**\r\n * \r\n * @param {String} searchStr Required. The string to search for in the object\r\n * @param {Object} obj Required. The object in which the searchStr will be searched. \r\n * \r\n * @description Searches for the searchStr in the value of every leaf node of the object. \r\n * The method performs a case agnostic substring search. It returns true id searchStr in null.\r\n */\r\nexport const isStrInObj = (searchStr, obj) => {\r\n  if (obj) {\r\n    const flattenedObj = flattenObject(obj);\r\n    return (searchStr == null) || Object.keys(flattenedObj).some(key => flattenedObj[key] != null && flattenedObj[key].toString().toLowerCase().includes(searchStr.toLowerCase()));\r\n  } else {\r\n    return true;\r\n  }\r\n};\r\nexport const genHostedAppSkappUrl = (hostedAppDetail) => hostedAppDetail?.content?.hns && hostedAppDetail?.content?.storageGateway &&\r\n  `https://${hostedAppDetail.content.hns}.hns.${hostedAppDetail.content.storageGateway}`;\r\n","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\utils\\SnNewObject.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\Utils\\SnFormikControlls.js",["872","873","874","875","876","877","878","879"],"import React from 'react';\r\nimport { Formik, Form, useField, useFormikContext } from 'formik';\r\nimport Select from 'react-select';\r\nimport TagsInput from \"react-tagsinput\";\r\nimport '../SubmitApp/taginput.css';\r\nimport { TextareaAutosize, InputBase, Box, Switch  } from '@material-ui/core';\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(\"#fff\", 1),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(\"#fff\", 0.9),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    // marginLeft: 0,\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: \"auto\",\r\n    },\r\n    // color: \"#8B9DA5\",\r\n    boxShadow: \"0px 1px 2px #15223214\",\r\n    // border: \"1px solid #7070701A;\",\r\n    border: \"1px solid rgba(0, 0, 0, 0.8);\",\r\n    // hieght: '41px',\r\n    marginLeft: \"16px!important\",\r\n    \"@media (max-width: 1650px)\": {\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    // color: \"#B4C6CC\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n    width: '100%',\r\n  },\r\n  \r\n  inputInput: {\r\n    color: '#fff',\r\n    background: '#2A2C34',\r\n    // padding: theme.spacing(1, 1, 1, 0),\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"100%\",\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      width: \"100%\",\r\n    },\r\n    paddingTop: \"10px\",\r\n    paddingBottom: \"10px\",\r\n    \"@media (max-width: 1660px)\": {\r\n      width: \"100%\",\r\n    },\r\n    \"@media (max-width: 1460px)\": {\r\n      width: \"100%\",\r\n    },\r\n  },\r\n\r\n  pageHeading: {\r\n    color: \"#131523\",\r\n    fontSize: \"28px\",\r\n  },\r\n  smallText: {\r\n    alignSelf: \"flex-end\",\r\n    color: \"#5A607F\",\r\n    paddingLeft: \"1rem\",\r\n    fontWeight: \"400\",\r\n  },\r\n  Media1249: {\r\n    // width: \"calc(100% - 230px)\",\r\n    marginLeft: \"auto!important\",\r\n    marginRight: 0,\r\n    \"@media only screen and (max-width: 890px)\": {\r\n      width: \"100%\",\r\n    },\r\n  },\r\n  margnBottomMediaQuery: {\r\n    /* '& .MuiSvgIcon-root': {\r\n    background: '#fff',\r\n    }, */\r\n    \"@media only screen and (max-width: 1249px)\": {\r\n      marginBottom: \".75rem\",\r\n    },\r\n  },\r\n  // PerfectScrollbarContainer: {\r\n  //     padding: '1rem 1.4rem',\r\n  //     paddingBottom: '0',\r\n  //     height: 'calc(100vh - 64px)',\r\n  //     '@media only screen and (max-width: 575px)': {\r\n  //         padding: '.5rem',\r\n  //     },\r\n  // },\r\n  // mobileSave: {\r\n  //     padding: '1rem 1.4rem',\r\n  //     paddingBottom: '0',\r\n  //     height: 'calc(100vh - 64px)',\r\n  //     overflow: \"auto\",\r\n  //     '@media only screen and (max-width: 575px)': {\r\n  //         padding: '.5rem',\r\n  //     },\r\n  // },\r\n  secondNavRow2: {\r\n    \"@media only screen and (max-width: 890px)\": {\r\n      justifyContent: \"space-between\",\r\n    },\r\n    \"@media only screen and (max-width: 575px) and (min-width: 509px)\": {\r\n      marginBottom: \".6rem\",\r\n    },\r\n    \"@media only screen and (max-width: 510px)\": {\r\n      flexWrap: \"wrap\",\r\n      \"& > div\": {\r\n        width: \"50%\",\r\n        minWidth: \"50%\",\r\n        maxWidth: \"50%\",\r\n        marginBottom: \".75rem\",\r\n      },\r\n      \"& > div:nth-child(odd)\": {\r\n        paddingRight: \"1rem\",\r\n      },\r\n    },\r\n  },\r\n  MobileFontStyle: {\r\n    \"@media only screen and (max-width: 575px) \": {\r\n      marginBottom: \".7rem\",\r\n      marginTop: \".4rem\",\r\n      \"& h1\": {\r\n        fontSize: \"18px\",\r\n      },\r\n    },\r\n  },\r\n}))\r\n\r\nexport const SnTextInput = ({ label, className, showError, ...props }) => {\r\n  const [field, meta] = useField(props);\r\n  const { submitCount } = useFormikContext();\r\n  return (\r\n    <>\r\n      <label htmlFor={props.id || props.name}>{label}</label>\r\n      <input className={className} {...field} {...props} />\r\n      {(showError ?? true) && submitCount>0 && meta.error ? (\r\n        <div className=\"required-field\">{meta.error}</div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport const SnSwitch = ({ label, className, showError, ...props }) => {\r\n  const [field, meta] = useField(props);\r\n  const { submitCount } = useFormikContext();\r\n  return (\r\n    <>\r\n      <label htmlFor={props.id || props.name}>{label}</label>\r\n      <Switch defaultChecked={field.value} {...field} {...props} />\r\n      {(showError ?? true) && submitCount>0 && meta.error ? (\r\n        <div className=\"required-field\">{meta.error}</div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport const SnTextArea = ({ label, className, showError, ...props }) => {\r\n  const [field, meta] = useField(props);\r\n  const { submitCount } = useFormikContext();\r\n  return (\r\n    <>\r\n      <label htmlFor={props.id || props.name}>{label}</label>\r\n      <TextareaAutosize\r\n        {...field} {...props}\r\n        className={className}\r\n        rowsMin={4}\r\n      />\r\n      {(showError ?? true) && submitCount>0 && meta.error ? (\r\n        <div className=\"required-field\">{meta.error}</div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport const SnInputWithIcon = ({ icon, label, className, showError, ...props }) => {\r\n  const [field, meta] = useField(props);\r\n  const { submitCount } = useFormikContext();\r\n  const classes = useStyles();\r\n    \r\n  return (\r\n    <>\r\n      <label htmlFor={props.id || props.name}>{label}</label>\r\n      <div  className={`${classes.search} ${classes.Media1249} ${classes.margnBottomMediaQuery}`}>\r\n        <Box>\r\n          <div className={classes.searchIcon}>\r\n            {icon}\r\n          </div>\r\n        </Box>\r\n        <InputBase\r\n          {...field} {...props}\r\n          classes={{\r\n            root: classes.inputRoot,\r\n            input: classes.inputInput,\r\n          }}\r\n          inputProps={{ \"aria-label\": \"search\" }}\r\n        />\r\n      </div>\r\n      {(showError ?? true) && submitCount>0 && meta.error ? (\r\n        <div className=\"required-field\">{meta.error}</div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n          \r\nexport const SnTextInputTag = ({ label, className, showError, ...props }) => {\r\n  const [field, meta, helpers] = useField(props);\r\n  const { touched, error, value } = meta;\r\n  const { setValue } = helpers;\r\n  const { submitCount } = useFormikContext();\r\n\r\n  return (\r\n    <>\r\n      <label htmlFor={props.id || props.name}>{label}</label>\r\n      <TagsInput\r\n        {...field} {...props}\r\n          onChange={(tags) => setValue(tags)}\r\n          instanceId={props.iid}\r\n          className={className}\r\n        />\r\n        {(showError ?? true) && submitCount>0 && meta.error ? (\r\n          <div className=\"required-field\">{meta.error}</div>\r\n        ) : null}\r\n    </>  \r\n  );\r\n};\r\n\r\nconst reactSelectStyles = {\r\n  control: styles => ({\r\n      ...styles, backgroundColor: 'white', height: 55, boxShadow: 0, borderColor: '#D9E1EC', color: '#000', borderRadius: 8,\r\n      '@media only screen and (max-width: 1440px)': {\r\n          height: 50,\r\n          // width: '100%',\r\n          fontSize: 16,\r\n\r\n      },\r\n      '@media only screen and (max-width: 575px)': {\r\n          height: 43,\r\n          // width: '100%',\r\n          fontSize: 14,\r\n\r\n      },\r\n      '&:hover': {\r\n          borderColor: '#1DBF73'\r\n      }\r\n  }),\r\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => ({\r\n      ...styles, backgroundColor: isSelected ? '#1DBF73' : '#fff',\r\n      '&:foucs': {\r\n          backgroundColor: '#1DBF73'\r\n      }\r\n  }),\r\n};\r\n\r\nexport const SnSelect1 = ({ label, className, showError, options, ...props }) => {\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <>\r\n      <label htmlFor={props.id || props.name}>{label}</label>\r\n      <>\r\n      <Select {...field} {...props}\r\n        options={options}\r\n        styles={reactSelectStyles}\r\n      />\r\n      </> \r\n      {(showError ?? true) && meta.error ? (\r\n        <div className=\"required-field\">{meta.error}</div>\r\n      ) : <></>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport const SnSelect = ({ label, className, showError, options, ...props }) => {\r\n  const [field, meta, helpers] = useField(props);\r\n  const { touched, error, value } = meta;\r\n  const { setValue } = helpers;\r\n  const { submitCount } = useFormikContext();\r\n  return (\r\n\r\n    <div>\r\n      <Select\r\n        value={{ label: field.value, value: field.value } }\r\n        options={options}\r\n        name={field.name}\r\n        onChange={(option) => setValue(option.value)}\r\n        instanceId={props.iid}\r\n        styles={reactSelectStyles}\r\n      />\r\n\r\n      {(showError ?? true) && submitCount>0 && meta.error ? (\r\n        <div className=\"required-field\">{meta.error}</div>\r\n      ) : <></>}\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\Hosting\\AddNewSiteStyles.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\Hosting\\Switch.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\uploadUtil\\SnUpload.js",["880","881","882","883","884","885","886","887","888","889","890"],"import React, { useState, useEffect, useImperativeHandle, useRef } from \"react\";\nimport { BsFileEarmarkArrowUp } from \"react-icons/bs\";\nimport HttpStatus from \"http-status-codes\";\nimport bytes from \"bytes\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport classNames from \"classnames\";\nimport { setUploadList } from \"../redux/action-reducers-epic/SnUploadListAction\";\nimport imageCompression from \"browser-image-compression\";\nimport path from \"path-browserify\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { useDropzone } from \"react-dropzone\";\nimport { DEFAULT_PORTAL } from \"../utils/SnConstants\";\nimport { getCompressedImageFile, generateThumbnailFromVideo, skylinkToUrl, hashFromSkylinkUploadResponse } from \"../utils/SnUtility\";\n// import \"./sn.upload.scss\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport CloudUploadOutlinedIcon from \"@material-ui/icons/CloudUploadOutlined\";\nimport { SkynetClient, parseSkylink } from \"skynet-js\";\nimport UploadFile from \"./UploadFile\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst SnUpload = React.forwardRef((props, ref) => {\n  const dispatch = useDispatch();\n\n  const [files, setFiles] = useState([]);\n  const [uploadErr, setUploadErr] = useState(false);\n  const [isDir, setIsDir] = useState(false);\n  const snUploadListStore = useSelector((state) => state.snUploadListStore);\n  const apiUrl = props.portal != null ? props.portal : DEFAULT_PORTAL;\n  const gridRef = useRef();\n  const client = new SkynetClient(apiUrl);\n\n  const setFileToStore = ()=>{\n    if (props.source) {\n      snUploadListStore[props.source] =  files;\n      dispatch(setUploadList(snUploadListStore));\n    }\n  }\n\n  useEffect(() => {\n    setFileToStore();\n    props.onUploadProgress && props.onUploadProgress(files);\n  }, [files]);\n\n  useEffect(() => {\n    if (props.directoryMode || isDir) {\n      inputRef.current.setAttribute(\"webkitdirectory\", \"true\");\n    } else {\n      inputRef.current.removeAttribute(\"webkitdirectory\");\n    }\n  }, [props.directoryMode, isDir]);\n\n  const videoToImg = async (video) => {\n    let canvas = document.createElement(\"canvas\");\n    let w = video.videoWidth;\n    let h = video.videoHeight;\n    canvas.width = w;\n    canvas.height = h;\n    let ctx = canvas.getContext(\"2d\");\n    ctx.drawImage(video, 0, 0, w, h);\n    let file = await imageCompression.canvasToFile(canvas, \"image/jpeg\");\n    return file;\n  };\n\n  const getFilePath = (file) =>\n    file.webkitRelativePath || file.path || file.name;\n\n  const getRelativeFilePath = (file) => {\n    const filePath = getFilePath(file);\n    const { root, dir, base } = path.parse(filePath);\n    const relative = path\n      .normalize(dir)\n      .slice(root.length)\n      .split(path.sep)\n      .slice(1);\n\n    return path.join(...relative, base);\n  };\n\n  const getRootDirectory = (file) => {\n    const filePath = getFilePath(file);\n    const { root, dir } = path.parse(filePath);\n\n    return path.normalize(dir).slice(root.length).split(path.sep)[0];\n  };\n\n\n  const createUploadErrorMessage = (error) => {\n    // The request was made and the server responded with a status code that falls out of the range of 2xx\n    if (error.response) {\n      if (error.response.data.message) {\n        return `Upload failed with error: ${error.response.data.message}`;\n      }\n\n      const statusCode = error.response.status;\n      const statusText = HttpStatus.getStatusText(error.response.status);\n\n      return `Upload failed, our server received your request but failed with status code: ${statusCode} ${statusText}`;\n    }\n\n    // The request was made but no response was received. The best we can do is detect whether browser is online.\n    // This will be triggered mostly if the server is offline or misconfigured and doesn't respond to valid request.\n    if (error.request) {\n      if (!navigator.onLine) {\n        return \"You are offline, please connect to the internet and try again\";\n      }\n\n      // TODO: We should add a note \"our team has been notified\" and have some kind of notification with this error.\n      return \"Server failed to respond to your request, please try again later.\";\n    }\n\n    // TODO: We should add a note \"our team has been notified\" and have some kind of notification with this error.\n    return `Critical error, please refresh the application and try again. ${error.message}`;\n  };\n\n  const handleDrop = async (acceptedFiles) => {\n    // if (props.uploadStarted) {\n    props.uploadStarted && props.uploadStarted(true);\n    // }\n    if ((props.directoryMode || isDir) && acceptedFiles.length) {\n      const rootDir = getRootDirectory(acceptedFiles[0]); // get the file path from the first file\n\n      acceptedFiles = [\n        { name: rootDir, directory: true, files: acceptedFiles },\n      ];\n    }\n\n    setFiles((previousFiles) => [\n      ...acceptedFiles.map((file) => ({ file, status: \"uploading\" })),\n      ...previousFiles,\n    ]);\n\n    const onFileStateChange = (file, state) => {\n      setFiles((previousFiles) => {\n        const index = previousFiles.findIndex((f) => f.file === file);\n        return [\n          ...previousFiles.slice(0, index),\n          {\n            ...previousFiles[index],\n            ...state,\n          },\n          ...previousFiles.slice(index + 1),\n        ];\n      });\n    };\n\n    await acceptedFiles.reduce(async (memo, file) => {\n      await memo;\n      // Reject files larger than our hard limit of 1 GB with proper message\n      if (file.size > bytes(\"1 GB\")) {\n        onFileStateChange(file, {\n          status: \"error\",\n          error: \"This file size exceeds the maximum allowed size of 1 GB.\",\n        });\n\n        return;\n      }\n      props.onUploadStart && props.onUploadStart();\n      const fileType = file.type;\n      let resForCompressed;\n      if (fileType && fileType.startsWith(\"image\")) {\n        const compressedFile = await getCompressedImageFile(file);\n        resForCompressed = await client.uploadFile(compressedFile);\n      }\n      if (fileType && fileType.startsWith(\"video\")) {\n        const videoThumbnail = await generateThumbnailFromVideo({ file });\n        resForCompressed = await client.uploadFile(videoThumbnail);\n      }\n      const onUploadProgress = (progress) => {\n        const status = progress === 1 ? \"processing\" : \"uploading\";\n        onFileStateChange(file, { status, progress });\n      };\n\n      const upload = async () => {\n        try {\n          let response;\n          if (file.directory) {\n\n            const directory = file.files.reduce((accumulator, file) => {\n              const path = getRelativeFilePath(file);\n        \n              return { ...accumulator, [path]: file };\n            }, {});\n\n            response = await client.uploadDirectory(\n              directory,\n              getRootDirectory(file.files[0]),\n              { onUploadProgress }\n            );\n          } else {\n            response = await client.uploadFile(file, { onUploadProgress });\n          }\n          await props.onUpload({\n            skylink: hashFromSkylinkUploadResponse(response),\n            name: file.name,\n            contentType: fileType,\n            thumbnail:\n              resForCompressed != null ? hashFromSkylinkUploadResponse(resForCompressed) : null,\n            contentLength: file.size,\n          });\n          onFileStateChange(file, {\n            status: \"complete\",\n            url: await client.getSkylinkUrl(hashFromSkylinkUploadResponse(response)),\n          });\n          props.onUploadEnd && props.onUploadEnd();\n          //send event to parent\n        } catch (error) {\n          props.uploadStarted && props.uploadStarted(true);\n    \n          if (\n            error.response &&\n            error.response.status === HttpStatus.TOO_MANY_REQUESTS\n          ) {\n            onFileStateChange(file, { progress: -1 });\n\n            return new Promise((resolve) =>\n              setTimeout(() => resolve(upload()), 3000)\n            );\n          }\n          onFileStateChange(file, {\n            status: \"error\",\n            error: createUploadErrorMessage(error),\n          });\n          setUploadErr(true);\n          props.onUploadEnd && props.onUploadEnd();\n        }\n      };\n      await upload();\n    }, undefined);\n  };\n\n  useImperativeHandle(ref, () => ({\n\n    handleDrop,\n    gridRef\n\n  }));\n\n  const { getRootProps, getInputProps, isDragActive, inputRef } = useDropzone({\n    onDrop: handleDrop,\n  });\n\n  return (\n    <React.Fragment>\n      <div className=\"\">\n        {/* <div\n               className={classNames(\"home-upload-dropzone\", {\n                \"drop-active\": isDragActive,\n              })}\n              {...getRootProps()}\n              ref={gridRef}\n            > */}\n        {/* <span className=\"home-upload-text\">\n                <h3>\n                  <CloudUploadOutlinedIcon /> Upload your {(props.directoryMode || isDir) ? \"Directory\" : \"Files\"}\n                </h3>\n              </span> */}\n        <div container spacing={3} className=\"drpZone_main_grid\"\n          {...getRootProps()}\n          ref={gridRef}>\n          <Grid item xs={12} className=\"MuiDropzoneArea-root\" >\n            <div style={{ paddingTop: \"20px\", paddingBottom: \"20px\" }}>\n              <div>\n                <BsFileEarmarkArrowUp\n                  style={{\n                    fontSize: \"55px\",\n                    color: \"#c5c5c5\",\n                    marginBottom: \"10px\",\n                  }}\n                />\n              </div>\n              <span\n                style={{\n                  fontSize: 14,\n                  fontWeight: \"bold\",\n                  color: \"#c5c5c5\",\n                }}\n              >\n                Drop a {(props.directoryMode || isDir) ? \"directory\" : \"file\"} here or\n                        <span style={{ color: \"#1ed660\", marginLeft: \"3px\" }}>\n                  click here to upload\n                        </span>\n              </span>\n            </div>\n          </Grid></div>\n        {/* </div> */}\n        <input id=\"idInp\" {...getInputProps()} className=\"offscreen\" />\n      </div>\n      {files.length > 0 && (\n        <div className=\"home-uploaded-files d-none\">\n          {files.map((file, i) => {\n            return <UploadFile key={i} {...file} />;\n          })}\n        </div>\n      )}\n      <Snackbar\n        open={uploadErr}\n        autoHideDuration={4000}\n        onClose={() => setUploadErr(false)}\n      >\n        <Alert onClose={() => setUploadErr(false)} severity=\"error\">\n          Error on upload!\n        </Alert>\n      </Snackbar>\n    </React.Fragment>\n  );\n})\n\n\nexport default SnUpload;","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\Modals\\SnInfoModal.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\AppsComp\\Spiner.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\service\\SnSkyMQEventEmitter.js",["891","892","893","894","895","896","897","898"],"import { getRegistryEntry, getProviderKeysByType, setRegistryEntry } from './SnSkynet'\r\nimport {getUserID, putFile_MySky, getFile_MySky} from './skynet-api'\r\n\r\n// \"Shared Global Event Queue\" is mechanism built on SkyDB for storing EVENTS emitted by all Skapp \r\n// users in Sequence. You can think of it as MessagingQueue. \r\n// If bad actor is identified, key will be automatically rotated. \r\n// Its experimental feature and may change over time.\r\n// It used SkyDB Registry entry with max revision number. \"Sequential Immutable registry\"\r\n// In case of anonymous users, we will not have publickey. anonymous#\r\n\r\nconst GEQ_CURSOR_DATA_KEY = \"cursorPosition\"\r\nconst GEQ_HEADER_DATA_KEY = \"0\"; // registry entry - [prevSeed,lastValidatedCursorPosition]\r\nconst ANONYMOUS = \"anonymous\";\r\n\r\n// Global EVENT QUEUE (GEQ) - user Events\r\n//PublicKey#AppID#EVENT_NAME OR anonymous#AppID#EVENT_NAME\r\n\r\n// PUSH \"User Action Event\" at ( Current Cursor Position + 1)\r\n// EVENT_PUBLISHED_APP =  DK_PUBLISHED_APPS;\r\n// EVENT_APP_VIEWED =  '1';\r\n// EVENT_APP_ACCESSED =  '2';\r\n// EVENT_APP_LIKED =  '3';\r\n// EVENT_APP_FAVORITE =  '4';\r\n// EVENT_APP_COMMENT =  '5';\r\n// This method can go in ServiceWorker\r\nexport const emitEvent = async (userID, appId, eventType) => {\r\n    //DataKey -> PublicKey#AppID#EVENT_NAME OR anonymous#AppID#EVENT_NAME\r\n    //let eventData = publicKey + \"#\" + appId + \"#\" + eventType;\r\n    let eventData = userID + \"#\" + appId + \"#\" + eventType;\r\n    let isSuccess = false;\r\n    let isleqSuccess = false;\r\n    //STEP1: Get Current Cursor Position of \"GEQ\"\r\n    let cursorPositionOfGEQ = (await getCurrentCursorPosition()) ?? 0;\r\n    let revision = 0;\r\n    let coolDownCounter = 0;\r\n    while (!isSuccess && !isleqSuccess) {\r\n        cursorPositionOfGEQ++\r\n        console.log(\"getCurrentCursorPosition(): eventData= \" + eventData + \" cursorPositionOfGEQ=\" + cursorPositionOfGEQ);\r\n        //STEP2: ** MOST IMPORTANT STEP ** PUSH USER ACTION EVENT in \"GEQ\". Its important to set maxRevisionFlag = true\r\n        let result = await setRegistryEntry((cursorPositionOfGEQ).toString(), eventData, { publicKey: getProviderKeysByType(\"GEQ\").publicKey, privateKey: getProviderKeysByType(\"GEQ\").privateKey, maxRevisionFlag: true, skipIDB: true });\r\n        isSuccess = result?.resultFlag;\r\n        revision = result?.revision;\r\n        console.log(\"setRegistryEntry(): GEQ eventData= \" + eventData + \" revision=\" + revision + \" isSuccess=\" + isSuccess);\r\n        if (isSuccess == true && userID != ANONYMOUS) {\r\n            //STEP3: on GEQ PUSH success, PUSH USER ACTION EVENT in \"LEQ\". Its important to set maxRevisionFlag = true\r\n            //(with DAC this STEP 3 is not required)\r\n            // let leqResult = await setRegistryEntry((cursorPositionOfGEQ).toString(), eventData, { publicKey, privateKey, maxRevisionFlag: true, skipIDB: true });\r\n            // isleqSuccess = leqResult?.resultFlag;\r\n            // //let leqResult = await setRegistryEntry((cursorPositionOfGEQ).toString(), eventData, { publicKey, privateKey, maxRevisionFlag: true, skipIDB: true });\r\n            let leqResult = await putFile_MySky((cursorPositionOfGEQ).toString(),{e : eventData});\r\n            isleqSuccess = leqResult ? true : false ;\r\n            console.log(\"setRegistryEntry(): LEQ : eventData= \" + eventData + \" revision=\" + revision + \" isleqSuccess=\" + isleqSuccess);\r\n\r\n        } else {\r\n            console.log(\"setRegistryEntry(): ** Skipping LEQ ** : ANONYMOUS eventData= \" + eventData);\r\n        }\r\n        coolDownCounter++;\r\n        if (coolDownCounter >= 5) {\r\n            break;\r\n            console.log(\"emitEvent : Sleeping for 10 Seconds\");\r\n            sleep(10000);\r\n            coolDownCounter = 0;\r\n        }\r\n    }\r\n    //STEP3: incrementCursorPosition. If its already incremented by some other user, dont worry and \r\n    // skip update. This is becoze, entry is added by you so noone will be able to change that entry.\r\n    await incrementCursorPosition(cursorPositionOfGEQ, eventData);\r\n}\r\n\r\n// Get Current Cursor Position\r\nconst getCurrentCursorPosition = async () => {\r\n    let entry = await getRegistryEntry(getProviderKeysByType(\"GEQ\").publicKey, GEQ_CURSOR_DATA_KEY, { publicKey: getProviderKeysByType(\"GEQ\").publicKey, privateKey: getProviderKeysByType(\"GEQ\").privateKey });\r\n    let revision = entry && entry != \"undefined\" ? entry.revision : 0;\r\n    return revision;\r\n}\r\n// Increment CursorPosition in \"GEQ\"\r\nconst incrementCursorPosition = async (cursorPositionOfGEQ, eventData) => {\r\n    // get current cursor position. Match Revision# with counter value. if mismatch ask for new Key.\r\n    let { resultFlag, revision } = await setRegistryEntry(GEQ_CURSOR_DATA_KEY, cursorPositionOfGEQ, { publicKey: getProviderKeysByType(\"GEQ\").publicKey, privateKey: getProviderKeysByType(\"GEQ\").privateKey, skipIDB: true });\r\n    console.log(\"incrementCursorPosition(): eventData= \" + eventData + \" resultFlag=\" + resultFlag);\r\n}\r\nfunction sleep(milliseconds) {\r\n    let timeStart = new Date().getTime();\r\n    while (true) {\r\n        let elapsedTime = new Date().getTime() - timeStart;\r\n        if (elapsedTime > milliseconds) {\r\n            break;\r\n        }\r\n    }\r\n}","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\service\\SnSkynet.js",["899","900","901","902","903","904","905","906","907","908","909","910","911","912","913","914","915","916","917","918","919","920","921","922"],"import { ajax } from \"rxjs/ajax\"\r\nimport { map, catchError } from \"rxjs/operators\"\r\nimport { getRelativeFilePath, getRootDirectory, parseSkylink, SkynetClient, genKeyPairFromSeed } from \"skynet-js\"\r\nimport { of } from \"rxjs\"\r\nimport prettyBytes from \"pretty-bytes\"\r\nimport {\r\n  getJSONfromIDB,\r\n  setJSONinIDB,\r\n  IDB_STORE_SKAPP,\r\n  IDB_STORE_SKYDB_CACHE,\r\n} from \"./SnIndexedDB\"\r\nimport { encryptData, decryptData } from \"./SnEncryption\"\r\nimport { getPortal } from '../utils/SnUtility'\r\n/* global BigInt */\r\n//above comment is required to enable BigInt\r\n// ################################ SkyDB Methods ######################\r\n\r\n// pick skynet portal\r\nconst skynetClient = new SkynetClient(\"https://siasky.net\");\r\nlet REGISTRY_MAX_REVISION = BigInt(\"18446744073709551615\");\r\n// \"Options\"\r\n// skydb = true | false | undefined. Fetch from IndexedDB first and then SkyDB\r\n// publicKey = null | \"PubKey Value\". If it has PubKey value, that means we need to fetch data of another user. \r\n// encrypt = true|false\r\n// decrypt = true|false\r\n// contentOnly = true|false  // If true will return onlu content from SkyDB (not revision number)\r\n// store = IDB_STORE_SKAPP | IDB_STORE_SKYDB_CACHE , IDB_STORE_SKAPP =  loggedin users Key/value. IDB_STORE_SKYDB_CACHE = otehr users key/Value\r\n// export function getSkappKeys() {\r\n//   return {\r\n//       publicKey: \"01846241b88a741741445d982eff80092b105795349fa071715f451e9101ca4a\",\r\n//       privateKey: \"b1d00ff5070ad41ee67b518cc1220caeac0da5e0e2f276cc65a0a9c9549f867b01846241b88a741741445d982eff80092b105795349fa071715f451e9101ca4a\"\r\n//   };\r\n// }\r\n\r\nexport function getProviderKeysByType(keyType) {\r\n  let keys = { privateKey: null, publicKey: null };\r\n  switch (keyType) {\r\n    case \"GEQ\":\r\n      keys = {\r\n        publicKey:\"c570f61ef7482622addcdd6cfe1c00a3b08a31d7fa9ba172515cace63570042a\",\r\n        privateKey: \"57dde68330fbcf3799964d8af7dc78229856d6038e83efdf547a937f8e14c0e4c570f61ef7482622addcdd6cfe1c00a3b08a31d7fa9ba172515cace63570042a\"\r\n      };\r\n      break;\r\n    case \"AGGREGATOR\":\r\n      keys = {\r\n        publicKey:  \"96682842f92cb14f257e023e812178ca4304bf963c3758929966746154f59539\"\r\n      };\r\n      break;\r\n    default:\r\n      console.log(\"In Dafault loop: \" + keyType)\r\n      break;\r\n  }\r\n  return keys;\r\n}\r\n\r\nexport const getFile_SkyDB = async (publicKey, dataKey, options) => {\r\n  return await skynetClient.db.getJSON(publicKey, dataKey);\r\n}\r\nexport const putFile_SkyDB = async (publicKey, dataKey, content, options) => {\r\n  await skynetClient.db.setJSON(options.privateKey, dataKey, content)\r\n}\r\n// gets JSON file from SkyDB\r\nexport const getFile = async (publicKey, dataKey, options) => {\r\n  // Get User Public Key\r\n  if (publicKey == null && options?.publicKey == null) {\r\n    throw new Error(\"Invalid Keys\")\r\n  }\r\n  try {\r\n    // Fetch from local First and then SkyDB\r\n    if (options?.skydb === undefined || options?.skydb === false) {\r\n      // Below condition means, we are fetching other user's data\r\n      if (options?.publicKey) {\r\n        let tempKey = options.publicKey + \"#\" + dataKey\r\n        // Fetch value for key - [PubKey#DataKey] from IndexedDB\r\n        let result = await getJSONfromIDB(tempKey, { store: IDB_STORE_SKYDB_CACHE })\r\n        // get revision number using dataKey - getEntry method\r\n        let registryEntry = await getRegistryEntry(options.publicKey, dataKey)\r\n        const skyDBRevisionNo =\r\n          registryEntry && registryEntry != \"undefined\"\r\n            ? registryEntry.revision\r\n            : 0\r\n        //check if [PubKey#DataKey ] exist in skydb_cache and revision numbers are same.\r\n        if (\r\n          result &&\r\n          result.length === 2 &&\r\n          parseInt(result[0]) === parseInt(skyDBRevisionNo)\r\n        ) {\r\n          //if revision numbers are same, return Skylink content from IndexedDB\r\n          return result[1]\r\n        } else {\r\n          // If revision numbers are different, return Skylink content from SkyDB/Skynet\r\n          // Fetch content fromSkynet\r\n          const { data, contentType, metadata, skylink } = await skynetClient.getFileContent(registryEntry.data);\r\n          //setcontent in IndexedDB - \"SkyDB Cache\"\r\n          await setJSONinIDB(tempKey, [skyDBRevisionNo, data], {\r\n            store: IDB_STORE_SKYDB_CACHE,\r\n          })\r\n          // TODO: decrypt method\r\n          return data\r\n        }\r\n      } else { // ### Loggedin User - Fetch request ###\r\n        //step1: check if [DataKey] exist in app_metadata\r\n        //step2: if Found, fetch content\r\n        //step3: get revision number using dataKey - getEntry method\r\n        //step4: if both revision numbers are same return value obtained in step#2\r\n        //Step3: if both values are different OR dataKey does NOT exist in skydb_cache, fetch content using SkyDB method getJSON\r\n        //Step4: Update, \"IDB_STORE_SKAPP\"\r\n        //Step5: return;\r\n        // Fetch value for [DataKey] from IndexedDB\r\n        let result = await getJSONfromIDB(dataKey, { store: IDB_STORE_SKAPP })// TODO: need to fix IDB store. we cant hardcode store value. must take from options\r\n        // get revision number using dataKey - getEntry method\r\n        let registryEntry = await getRegistryEntry(publicKey, dataKey)\r\n        const skyDBRevisionNo =\r\n          registryEntry && registryEntry != \"undefined\"\r\n            ? registryEntry.revision\r\n            : 0\r\n        //check if [PubKey#DataKey ] exist in skydb_cache and revision numbers are same.\r\n        if (\r\n          result &&\r\n          result.length > 0 &&\r\n          parseInt(result[0]) === parseInt(skyDBRevisionNo)\r\n        ) {\r\n          //if revision numbers are same, return Skylink content from IndexedDB\r\n          return result[1]\r\n        } else {\r\n          // If revision numbers are different, return Skylink content from SkyDB/Skynet\r\n          // Fetch content fromSkynet\r\n          //let content = getSkylinkContent(registryEntry.data)\r\n          const { data, contentType, metadata, skylink } = await skynetClient.getFileContent(registryEntry.data);\r\n          // TODO: convert array to JSOn object\r\n          // Example:\r\n          // {\r\n          //   data: {\r\n          //     example: \"This is some example JSON data.\"\r\n          //   },\r\n          //   revision: 11\r\n          // }\r\n          await setJSONinIDB(dataKey, [skyDBRevisionNo, data], {\r\n            store: IDB_STORE_SKAPP,\r\n          }) // TODO: need to fix IDB store. we cant hardcode store value. must take from options\r\n          // TODO: decrypt method\r\n          return data\r\n        }\r\n      }\r\n    } else { //If we need to fetch directly from SkyDB\r\n      let result = null;\r\n      let entryObj = null;\r\n      // Below condition means, we are fetching other user's data\r\n      if (options?.publicKey) {\r\n        let tempKey = options.publicKey + \"#\" + dataKey\r\n        // fetch content from SkyDB\r\n        entryObj = await getContent(options?.publicKey, dataKey, { ...options, contentOnly: false });\r\n        // update IndexedDB cache\r\n        await setJSONinIDB(tempKey, result, { store: IDB_STORE_SKYDB_CACHE, })\r\n      }\r\n      else {\r\n        // fetching loggedin users data from SkyDB\r\n        entryObj = await getContent(publicKey, dataKey, { ...options, contentOnly: false });\r\n        // update IndexedDB cache\r\n        await setJSONinIDB(dataKey, entryObj, { store: IDB_STORE_SKAPP, })\r\n      }\r\n      // Return data\r\n      return entryObj?.data;\r\n    }\r\n  } catch (error) {\r\n    // setErrorMessage(error.message);\r\n    console.log(`error.message ${error.message}`)\r\n    return null\r\n  }\r\n}\r\n\r\nexport const getContent = async (publicKey, dataKey, options) => {\r\n  //TODO - get privateKey from localstorage\r\n  const privateKey = \"\";\r\n  try {\r\n    // Get User Public Key\r\n    if (publicKey == null) {\r\n      throw new Error(\"Invalid Keys\")\r\n    }\r\n    let registryEntry = await getRegistryEntry(publicKey, dataKey)\r\n    //var { data, revision } =await skynetClient.db.getJSON(publicKey, 'profile'); \r\n    const { data, contentType, metadata, skylink } = await skynetClient.getFileContent(registryEntry.data);\r\n    //const entryObj = await skynetClient.db.getJSON(publicKey, dataKey)\r\n    const entryObj = { revision: registryEntry.revision, data }\r\n    if (entryObj) {\r\n      if (options.contentOnly) {\r\n        // decrypt it\r\n        if (privateKey && options?.decrypt == true) {\r\n          // decrypt it\r\n          const fileData = await decryptData(privateKey, publicKey, entryObj.data)\r\n          // return data;\r\n          return fileData\r\n        }\r\n        return entryObj.data\r\n      }\r\n      else {\r\n        // return results;\r\n        return entryObj\r\n      }\r\n    }\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n  catch (error) {\r\n    console.log(`error.message ${error.message}`)\r\n    return null\r\n  }\r\n}\r\n\r\n// sets JSON file in SkyDB\r\nexport const putFile = async (publicKey, dataKey, content, options) => {\r\n  // fetch private key from localstorage\r\n  const privateKey = options.privateKey;\r\n  try {\r\n    // get previous skylink \r\n    // create linked list to track history\r\n    if (options.historyflag == true) {\r\n      const registryEntry = await getRegistryEntry(publicKey, dataKey)\r\n      //const revision = (registryEntry ? registryEntry.revision : 0) + 1\r\n      const skylink = registryEntry ? registryEntry.data : null\r\n      content.prevSkylink = skylink\r\n    }\r\n    // set new data in SkyDB with\r\n    let status = false\r\n    // encrypt it\r\n    if (options?.encrypt == true) {\r\n      const cypherContent = await encryptData(privateKey, publicKey, JSON.stringify(content))\r\n      status = await skynetClient.db.setJSON(privateKey, dataKey, cypherContent)\r\n    } else {\r\n      status = await skynetClient.db.setJSON(privateKey, dataKey, content)\r\n    }\r\n    await setJSONinIDB(dataKey, content, { store: IDB_STORE_SKAPP })\r\n    return true\r\n  } catch (error) {\r\n    // setErrorMessage(error.message);\r\n    console.log(`error.message ${error.message}`)\r\n    return false\r\n  }\r\n}\r\nexport const getRegistryEntry = async (publicKey, dataKey, options) => {\r\n  try {\r\n    // Get User Public Key\r\n    if (publicKey == null) {\r\n      throw new Error(\"Invalid Keys\")\r\n    }\r\n    const { entry, signature } = await skynetClient.registry.getEntry(publicKey, dataKey)\r\n    return entry\r\n  } catch (error) {\r\n    // setErrorMessage(error.message);\r\n    console.log(`error.message ${error.message}`)\r\n    return null\r\n  }\r\n  return null\r\n}\r\n\r\nexport const setRegistryEntry = async (dataKey, content, options) => {\r\n  let revision = 0;\r\n  try {\r\n    // fetch private key from localstorage\r\n    const privateKey = options.privateKey ?? getProviderKeysByType(\"AGGREGATOR\").privateKey;\r\n    const publicKey = options.publicKey ?? getProviderKeysByType(\"AGGREGATOR\").publicKey;\r\n    if (options?.maxRevisionFlag) {\r\n      revision = REGISTRY_MAX_REVISION;\r\n    }\r\n    else {\r\n      let entry = await getRegistryEntry(publicKey, dataKey, null)\r\n      revision = entry && entry != \"undefined\" && entry?.revision != NaN && entry.revision != \"undefined\" ? entry.revision : 0\r\n      revision++;\r\n    }\r\n    let entry = { dataKey: dataKey, data: content + \"\", revision: BigInt(revision) };\r\n    await skynetClient.registry.setEntry(privateKey, entry);\r\n    if (options.skipIDB && options.skipIDB != true) {\r\n      await setJSONinIDB(dataKey, [BigInt(revision), content], options)\r\n    }\r\n    return { resultFlag: true, revision }\r\n  } catch (error) {\r\n    // setErrorMessage(error.message);\r\n    console.log(`error.message ${error.message}`)\r\n    return { resultFlag: false, revision }\r\n  }\r\n}\r\n\r\nexport function getRegistryEntryURL(publicKey, dataKey) {\r\n  try {\r\n    const url = skynetClient.registry.getEntryUrl(publicKey, dataKey);\r\n    return url;\r\n  } catch (error) {\r\n    console.log(error);\r\n    return null;\r\n  }\r\n}\r\n\r\n// ################################ Skylink Methods ######################\r\n// gets Skylink Content.\r\n// TODO :  ahandling for Folder ?\r\n// client.downloadFile(skylink, { path: \"dir2/file3\" });\r\n// export const getSkylinkContent = async (skylink, options) => {\r\n\r\n//   const skynetOptions = {\r\n//       method: \"GET\",\r\n//       headers: {\r\n//         Accept: \"application/json\",\r\n//         \"Content-Type\": \"application/json\",\r\n//       },\r\n//   }\r\n//  const  url =  getPortal() + `${skylink}?format=concat`;\r\n//  return fetch(url, options)\r\n//     .then((res) => {\r\n//       res.json()\r\n//     })\r\n//     .catch((err) => err);\r\n\r\n//   // ajax({\r\n//   //   url: getPortal() + `${skylink}?format=concat`,\r\n//   //   method: \"GET\",\r\n//   //   responseType: \"\",\r\n//   // }).pipe(\r\n//   //   map((res) => {\r\n//   //     return res\r\n//   //   }),\r\n//   //   catchError((error) => {\r\n//   //     console.log(\"getSkylinkHeader::error: \", error)\r\n//   //     return of(error)\r\n//   //   })\r\n// }\r\n\r\nexport const getSkylinkMetadata = async (skylink) => {\r\n  try {\r\n    const md = await skynetClient.getMetadata(skylink);\r\n    return md;\r\n  } catch (error) {\r\n    console.log(error);\r\n    return null;\r\n  }\r\n}\r\n// TODO: below method can be removed once all functionality is implemented. From getSkylinkMetadata we shall get all data.\r\nexport const getSkylinkHeader = (skylink) => {\r\n  //TODO: create URL from Skylink\r\n  const skylinkUrl = getPortal() + skylink;\r\n  try {\r\n    ajax({\r\n      url: `${skylinkUrl}?format=concat`,\r\n      method: \"HEAD\",\r\n      responseType: \"\",\r\n    }).pipe(\r\n      map((res) => {\r\n        const headerMap = {}\r\n        const contentType = res.xhr.getResponseHeader(\"content-type\")\r\n        headerMap.contentType = contentType\r\n        console.log(`contentType:${contentType}`)\r\n        const contentLength = res.xhr.getResponseHeader(\"content-length\")\r\n        headerMap.contentLength = contentLength\r\n          ? prettyBytes(Number(contentLength))\r\n          : \"\"\r\n        console.log(`contentLength:${contentLength}`)\r\n        const skynetFileMetadata = res.xhr.getResponseHeader(\"Skynet-File-Metadata\")\r\n        headerMap.skynetFileMetadata = skynetFileMetadata\r\n        // console.log(\"skynetFileMetadata:\"+skynetFileMetadata);\r\n        // let headerParams = res.xhr.getAllResponseHeaders();\r\n        // console.log(\"headerParams\"+headerParams);\r\n        // console.log(\"headerMap: \"+headerMap);\r\n        return headerMap\r\n      }),\r\n      catchError((error) => {\r\n        console.log(\"getSkylinkHeader::error: \", error)\r\n        return of(error)\r\n      })\r\n    )\r\n  } catch (e) { }\r\n}\r\n\r\n// this method will upload content and return skylink\r\nexport const uploadFile = async (file) => {\r\n  try {\r\n    const md = await skynetClient.uploadFile(file);\r\n    return md;\r\n  } catch (error) {\r\n    console.log(error);\r\n    return null;\r\n  }\r\n}\r\n\r\n// this method will upload content and return skylink\r\nexport const uploadDirectory = async (files) => {\r\n  try {\r\n    // Get the directory name from the list of files.\r\n    // Can also be named manually, i.e. if you build the files yourself\r\n    // instead of getting them from an input form.\r\n    const filename = getRootDirectory(files[0]);\r\n\r\n    // Use reduce to build the map of files indexed by filepaths\r\n    // (relative from the directory).\r\n    const directory = files.reduce((accumulator, file) => {\r\n      const path = getRelativeFilePath(file);\r\n\r\n      return { ...accumulator, [path]: file };\r\n    }, {});\r\n\r\n    const skylink = await skynetClient.uploadDirectory(directory, filename);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\nexport const snKeyPairFromSeed = (userSeed) => genKeyPairFromSeed(userSeed)\r\n// export const getPublicApps = async (hash) =>\r\n//   await fetch(\r\n//     `${document.location.origin.indexOf(\"localhost\") === -1\r\n//       ? document.location.origin\r\n//       : DEFAULT_PORTAL\r\n//     }/${hash}`\r\n//   ).then((res) => res.json())\r\n\r\n// export const getSkylinkPublicShareFile = (arrApps) => {\r\n//   const strArrApps = JSON.stringify(arrApps)\r\n//   return new File([strArrApps], `public${new Date()}.txt`, {\r\n//     type: \"text/plain\",\r\n//     lastModified: new Date(),\r\n//   })\r\n// }\r\n","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\service\\SnEncryption.js",["923","924"],"import _sodium from 'libsodium-wrappers-sumo';\nimport { pki, pkcs5, md } from 'node-forge';\nimport randomBytes from \"randombytes\";\nimport nacl from 'tweetnacl';\nimport naclutil from 'tweetnacl-util';\n\nlet sodium: any = null;\n\n(async () => {\n  await _sodium.ready;\n  sodium = _sodium;\n})();\n\nfunction toHexString(byteArray: Uint8Array): string {\n  let s = \"\";\n  // tslint:disable-next-line:only-arrow-functions\n  byteArray.forEach(function (byte) {\n    // tslint:disable-next-line:no-bitwise\n    s += (\"0\" + (byte & 0xff).toString(16)).slice(-2);\n  });\n  return s;\n}\n\nfunction hexStringToArrayBuffer(hexString: string): Uint8Array {\n  // remove the leading 0x\n  hexString = hexString.replace(/^0x/, '');\n  \n  // ensure even number of characters\n  if (hexString.length % 2 != 0) {\n      console.log('WARNING: expecting an even number of characters in the hexString');\n  }\n  \n  // check for some non-hex characters\n  var bad = hexString.match(/[G-Z\\s]/i);\n  if (bad) {\n      console.log('WARNING: found non-hex characters', bad);    \n  }\n  \n  // split the string into pairs of octets\n  var pairs = hexString.match(/[\\dA-F]{2}/gi);\n  \n  // convert the octets to integers\n  var integers = pairs?.map(function(s) {\n      return parseInt(s, 16);\n  });\n  \n  var array = new Uint8Array(integers? integers:[]);\n  console.log(array);\n  \n  return array;\n}\n\n\nfunction genKeyPairFromSeed(seed: string): { publicKey: Uint8Array; privateKey: Uint8Array } {\n  // Get a 32-byte seed.\n  seed = pkcs5.pbkdf2(seed, \"\", 1000, 32, md.sha256.create());\n  const { publicKey, privateKey } = pki.ed25519.generateKeyPair({ seed });\n  // return { publicKey: toHexString(publicKey), privateKey: toHexString(privateKey) };\n  return { publicKey, privateKey };\n}\nfunction makeSeed(length: number): string {\n  // Cryptographically-secure random number generator. It should use the\n  // built-in crypto.getRandomValues in the browser.\n  const array = randomBytes(length);\n  return toHexString(array);\n}\nfunction genKeyPairAndSeed(length = 64): { publicKey: Uint8Array; privateKey: Uint8Array; seed: string } {\n  const seed = makeSeed(length);\n  return { ...genKeyPairFromSeed(seed), seed };\n}\n\n// ########### BOB #############\n// \"6cffb176971ad1978618c8ed2f84bd2f59a73be9c916614974ef62ef82e23fe5\"\n// ED25519 : publicKey : 9da11916898665c2b21099e827d6f19d9d466db43a57d47d48b02882cdbb1076\n// ED25519 : publicKey : base64 : naEZFomGZcKyEJnoJ9bxnZ1GbbQ6V9R9SLAogs27EHY=\n// ED25519 : privateKey : 244a06a7dd2b145b6511fa0fed9126af5a7d9ab39c30a22857612a1d6d06f8409da11916898665c2b21099e827d6f19d9d466db43a57d47d48b02882cdbb1076\n// ED25519 : privateKey : base64 : JEoGp90rFFtlEfoP7ZEmr1p9mrOcMKIoV2EqHW0G+EA=\n// X25519 : publicKey : 224530721ac618f0d98f57affb5efab5bdfd82120876875298d6f9049c901e2967ty\n// X25519 : publicKey : base64 : IkUwchrGGPDZj1ev+176tb39ghIIdodSmNb5BJyQHik=\n// X25519 : privateKey : 98aaa8f218c4250d6bccd0b6dbc9a6a499bf39d738340c272d9f29c7a412126e\n// X25519 : privateKey : base64 : mKqo8hjEJQ1rzNC228mmpJm/Odc4NAwnLZ8px6QSEm4=\n// ########### ALICE #############\n// ED25519 : publicKey : ce8fe6d1e9d258ae55abc5216a9e301341329d26b728acc500df07e6b5456902\n// ED25519 : publicKey : base64 : zo/m0enSWK5Vq8Uhap4wE0EynSa3KKzFAN8H5rVFaQI=\n// ED25519 : privateKey : 03ba0678b600f33435d75bfd7bbd49dbc7ff5dc031a52cd2428e9fe158ec3a81ce8fe6d1e9d258ae55abc5216a9e301341329d26b728acc500df07e6b5456902\n// ED25519 : privateKey : base64 : A7oGeLYA8zQ111v9e71J28f/XcAxpSzSQo6f4VjsOoE=\n// X25519 : publicKey : 21776783cceda1333eed237387f23e6f1f32d1e8283007286e0f393801007e02\n// X25519 : publicKey : base64 : IXdng8ztoTM+7SNzh/I+bx8y0egoMAcobg85OAEAfgI=\n// X25519 : privateKey : 781a5c29e486ba9f383a9a4239be53fe0974452a20ecc6f3b07b335c1f55bc6f\n// X25519 : privateKey : base64 : eBpcKeSGup84OppCOb5T/gl0RSog7MbzsHszXB9VvG8=\n\n// ### Data Encryption for loggedIn user\nexport async function encryptData(hexPrivateKey: string, hexPublicKey: string, data: string, strNonce: string): Promise<any> {\n  try {\n    //await _sodium.ready;\n    // const sodium = _sodium;\n    let publicKey: Uint8Array = hexStringToArrayBuffer(hexPublicKey);\n    let privateKey: Uint8Array = hexStringToArrayBuffer(hexPrivateKey);\n    let nonce: Uint8Array = nacl.randomBytes(nacl.box.nonceLength);\n\n    const xPublicKey = sodium.crypto_sign_ed25519_pk_to_curve25519(publicKey); // Public key is of current logged in user(ephemeralPublicKey) OR Public key of another user.\n\n    //console.log(\"xPublicKey: \" + naclutil.decodeBase64(publicKey));\n    const xPrivateKey = sodium.crypto_sign_ed25519_sk_to_curve25519(privateKey); // LoggedIn users Private Key\n    //console.log(\"xPublicKey: \" + naclutil.decodeBase64(privateKey));\n    // Bob encrypts message for Alice or Bobs encrypts his own file using ephemeral/drived publicKeys\n    const box = nacl.box(\n      naclutil.decodeUTF8(data),\n      nonce,\n      xPublicKey,\n      xPrivateKey\n    )\n    // we may add public key here\n    const cipherObject = { version: \"v1\", ciphertext: naclutil.encodeBase64(box), nonce: naclutil.encodeBase64(nonce) };\n    // tslint:disable-next-line:no-console\n    console.log(\"box: \" + cipherObject.ciphertext);\n    // tslint:disable-next-line:no-console\n    console.log(\"nonce: \" + cipherObject.nonce);\n    //return Buffer.from(message).toString('base64');\n\n    console.log(\"cipherObject\" + JSON.stringify(cipherObject));\n    return cipherObject;\n  }\n  catch (e) {\n    throw e;\n  }\n};\n//encryptData (\"P4UPEMoG1qWOfe3soMQRoQPyRZvIuL/95ByWpYBUQIa8m3WMFN3PdUgFb3PIguSV1dJPD9tamqCLX76Ag9t2Gw==\",\"gvvJpIAE27HKX40s520U8atHAx1cErQp2B/uRe2wmBo=\",\"Hello SkySpaces !!\",\"ldB22oYZh/HP46XVJCRh/J6qOsbV/v7s\");\n\n\nexport const decryptData = async (hexPrivateKey: string, hexPublicKey: string, data: any): Promise<any> => {\n  try {\n    // await _sodium.ready;\n    // const sodium = _sodium;\n\n    let publicKey: Uint8Array = hexStringToArrayBuffer(hexPublicKey);\n    let privateKey: Uint8Array = hexStringToArrayBuffer(hexPrivateKey);\n\n    const cipherObj = data;\n    const box = naclutil.decodeBase64(cipherObj.ciphertext);\n    const nonce = naclutil.decodeBase64(cipherObj.nonce);\n    const xPrivateKey = sodium.crypto_sign_ed25519_sk_to_curve25519(privateKey); // LoggedIn users Private Key\n    const xPublicKey = sodium.crypto_sign_ed25519_pk_to_curve25519(publicKey); // Public key is of current logged in user(ephemeralPublicKey) OR Public key of another user.\n    // Alice decrypts message from Bob(using her PubKey) or Alice decrypts his own file using ephemeral/drived privatekey\n    const payload = nacl.box.open(box, nonce, xPublicKey, xPrivateKey);\n\n    const plainTextMessage = payload ? naclutil.encodeUTF8(payload) : \"\";\n    // tslint:disable-next-line:no-console\n    console.log(\"Decrypted: \" + plainTextMessage);\n    return JSON.parse(plainTextMessage);\n  }\n  catch (e) {\n    throw e;\n  }\n};\n//decryptData (\"e8v2WhHuXaz2JhLhlt4ny+I0xEgKxdCzXsjQ2oZRgleC+8mkgATbscpfjSznbRTxq0cDHVwStCnYH+5F7bCYGg==\",\"vJt1jBTdz3VIBW9zyILkldXSTw/bWpqgi1++gIPbdhs=\",\"{\\\"version\\\":\\\"v1\\\",\\\"ciphertext\\\":\\\"YYFFrfY0xd6PqPNzrx5soLOtXsmkPviEzoh0ine4h6+oMQ==\\\",\\\"nonce\\\":\\\"ldB22oYZh/HP46XVJCRh/J6qOsbV/v7s\\\"}\");\nconst convertEdToCurve = async (): Promise<void> => {\n  try {\n    await _sodium.ready;\n    const sodium = _sodium;\n    // BOB\n    // tslint:disable-next-line:no-console\n    console.log(\"########### BOB #############\");\n    const bob = genKeyPairAndSeed(32);\n    // tslint:disable-next-line:no-console\n    console.log(\"ED25519 : publicKey : \" + toHexString(bob.publicKey));\n    // tslint:disable-next-line:no-console\n    console.log(\"ED25519 : publicKey : base64 : \" + Buffer.from(bob.publicKey).toString('base64'));\n    // tslint:disable-next-line:no-console\n    console.log(\"ED25519 : privateKey : \" + toHexString(bob.privateKey));\n    // tslint:disable-next-line:no-console\n    console.log(\"ED25519 : privateKey : base64 : \" + Buffer.from(bob.privateKey.slice(0, 32)).toString('base64'));\n    // function buf2hex(buffer) { // buffer is an ArrayBuffer\n    //   return Array.prototype.map.call(new Uint8Array(buffer), x => ('00' + x.toString(16)).slice(-2)).join('');\n    // }\n    // tslint:disable-next-line:variable-name\n    const bob_curve_pk = sodium.crypto_sign_ed25519_pk_to_curve25519(bob.publicKey);\n    // tslint:disable-next-line:no-console\n    console.log(\"X25519 : publicKey : \" + toHexString(bob_curve_pk));\n    // tslint:disable-next-line:no-console\n    console.log(\"X25519 : publicKey : base64 : \" + Buffer.from(bob_curve_pk).toString('base64'));\n    // tslint:disable-next-line:variable-name\n    const bob_curve_sk = sodium.crypto_sign_ed25519_sk_to_curve25519(bob.privateKey);\n    // tslint:disable-next-line:no-console\n    console.log(\"X25519 : privateKey : \" + toHexString(bob_curve_sk));\n    // tslint:disable-next-line:no-console\n    console.log(\"X25519 : privateKey : base64 : \" + Buffer.from(bob_curve_sk).toString('base64'));\n    // ALICE\n    // tslint:disable-next-line:no-console\n    console.log(\"########### ALICE #############\");\n    const alice = genKeyPairAndSeed(32);\n    // tslint:disable-next-line:no-console\n    console.log(\"ED25519 : publicKey : \" + toHexString(alice.publicKey));\n    // tslint:disable-next-line:no-console\n    console.log(\"ED25519 : publicKey : base64 : \" + Buffer.from(alice.publicKey).toString('base64'));\n    // tslint:disable-next-line:no-console\n    console.log(\"ED25519 : privateKey : \" + toHexString(alice.privateKey));\n    // tslint:disable-next-line:no-console\n    console.log(\"ED25519 : privateKey : base64 : \" + Buffer.from(alice.privateKey.slice(0, 32)).toString('base64'));\n    // function buf2hex(buffer) { // buffer is an ArrayBuffer\n    //   return Array.prototype.map.call(new Uint8Array(buffer), x => ('00' + x.toString(16)).slice(-2)).join('');\n    // }\n    // tslint:disable-next-line:variable-name\n    const alice_curve_pk = sodium.crypto_sign_ed25519_pk_to_curve25519(alice.publicKey);\n    // tslint:disable-next-line:no-console\n    console.log(\"X25519 : publicKey : \" + toHexString(alice_curve_pk));\n    // tslint:disable-next-line:no-console\n    console.log(\"X25519 : publicKey : base64 : \" + Buffer.from(alice_curve_pk).toString('base64'));\n    // tslint:disable-next-line:variable-name\n    const alice_curve_sk = sodium.crypto_sign_ed25519_sk_to_curve25519(alice.privateKey);\n    // tslint:disable-next-line:no-console\n    console.log(\"X25519 : privateKey : \" + toHexString(alice_curve_sk));\n    // tslint:disable-next-line:no-console\n    console.log(\"X25519 : privateKey : base64 : \" + Buffer.from(alice_curve_sk).toString('base64'));\n\n\n    // tslint:disable-next-line:no-console\n    console.log(\"########### STARTING ENCRYPTION #############\");\n    // generating key pairs\n    // const bob = nacl.box.keyPair()\n    // const alice = nacl.box.keyPair()\n    // generating one time nonce for encryption\n    const nonce = nacl.randomBytes(24)\n    // message for Alice\n    const utf8 = 'Hello Alice'\n    // Bob encrypts message for Alice\n    const box = nacl.box(\n      naclutil.decodeUTF8(utf8),\n      nonce,\n      alice_curve_pk,\n      bob_curve_sk\n    )\n    // somehow send this message to Alice\n    const message = { box, nonce }\n    // tslint:disable-next-line:no-console\n    console.log(\"box: \" + Buffer.from(message.box).toString('base64'));\n    // tslint:disable-next-line:no-console\n    console.log(\"nonce: \" + Buffer.from(nonce).toString('base64'));\n\n  }\n  catch (e) {\n    throw e;\n  }\n};\n//convertEdToCurve();","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\uploadUtil\\UploadFile.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\uploadUtil\\LoadingSpinner.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\svg\\index.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\svg\\Deco7.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\svg\\Deco8.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\svg\\Deco6.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\svg\\Deco3.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\svg\\Deco4.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\svg\\Deco5.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\svg\\Deco2.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\svg\\Deco1.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\svg\\Folder.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\svg\\DownArrow.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\svg\\Built.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\svg\\FooterCube.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\svg\\FooterOrb.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\svg\\Copy.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\svg\\FileError.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\svg\\Loading.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\svg\\FileCheck.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\svg\\Skynet.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\svg\\File.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\svg\\LogoSolid.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\svg\\Pyramid.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\svg\\Cylinder.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\svg\\SmallOrb.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\svg\\Arrow.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\svg\\Discord.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\svg\\DoubleRight.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\svg\\Download.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\svg\\Github.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\svg\\Logo.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\svg\\Twitter.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\hooks\\useLoadHostedAppFromUrl.js",["925","926"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { setLoaderDisplay } from '../redux/action-reducers-epic/SnLoaderAction';\nimport { getMyHostedApps } from '../service/SnSkappService';\n\n\n\nexport function useLoadHostedAppFromUrl() {\n    const [appDetail, setAppDetail] = useState();\n    let { appId } = useParams();\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        appId && loadAppDetail();\n    }, [appId]);\n\n    const loadAppDetail = async ()=> {\n        dispatch(setLoaderDisplay(true));\n        const appDetail = (await getMyHostedApps([appId])).appDetailsList[appId];\n        dispatch(setLoaderDisplay(false));\n        setAppDetail(appDetail);\n        return appDetail;\n    };\n\n\n    return [appDetail, setAppDetail];\n}","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnPublishAppAction.js",["927"],"import {ACT_TY_SET_MY_PUBLISHED_APPS,EPIC_TY_PUBLISH_APP,EPIC_TY_GET_ALL_PUBLISHED_APPS,EPIC_TY_GET_MY_PUBLISHED_APPS} from \"../SnActionConstants\";\n\nexport const publishAppAction = (data) => ({\n  type: EPIC_TY_PUBLISH_APP,\n  payload: data,\n})\n\nexport const getMyPublishedAppsAction = () => ({\n  type: EPIC_TY_GET_MY_PUBLISHED_APPS,\n  payload: null,\n})\n\n// Like, Fav, View, Access \nexport const setPublishedAppsStore = (appsJSON) => ({\n  type: ACT_TY_SET_MY_PUBLISHED_APPS,\n  payload: appsJSON,\n})","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\AppDetails\\AppInfo.js",["928","929"],"import React, { Fragment, useEffect } from \"react\";\nimport { Box, makeStyles, Typography, Button } from \"@material-ui/core\";\nimport ScreenShot from \"../../assets/img/sc.jpg\";\n// import SimilarApps from \"./SimilarApps\";\nimport AppComments from \"./AppComments\";\nimport { useHistory } from  'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  h2: {\n    fontSize: 28,\n    color: \"#131523\",\n    fontWeight: 700,\n    marginBottom: \"10px\",\n    marginTop: 15,\n    \"@media only screen and (max-width: 575px)\": {\n      fontSize: 20,\n      marginTop: 10,\n    },\n  },\n  submitBtn: {\n    background: '#1DBF73!important',\n    color: '#fff',\n    paddingLeft: '1rem',\n    paddingRight: '1rem',\n    display: 'inlin-flex',\n    alignItems: 'center',\n    minWidth: 130,\n    '& svg': {\n      fontSize: '19px',\n      marginRight: '5px'\n    },\n    '@media only screen and (max-width: 575px)': {\n      fontSize: '12px',\n\n      paddingLeft: '.5rem',\n      paddingRight: '.5rem',\n      minWidth: 70,\n    }\n  },\n  subHeading: {\n    color: \"#7E84A3\",\n    fontSize: \"16px\",\n    fontWeight: 500,\n    marginBottom: \"5px\",\n    \"@media only screen and (max-width: 575px)\": {\n      fontSize: 10,\n      marginBottom: \"3px\",\n      marginTop: \".5rem\",\n    },\n  },\n  infoText: {\n    color: \"#131523\",\n    fontSize: 20,\n    fontWeight: \"bold\",\n    \"@media only screen and (max-width: 1600px)\": {\n      fontSize: 18,\n    },\n    \"@media only screen and (max-width: 1300px)\": {\n      fontSize: 16,\n    },\n    \"@media only screen and (max-width: 575px)\": {\n      fontSize: 12,\n    },\n  },\n  descText: {\n    fontSize: 20,\n    color: \"#131523\",\n    \"@media only screen and (max-width: 1300px)\": {\n      fontSize: 16,\n    },\n    \"@media only screen and (max-width: 575px)\": {\n      fontSize: 12,\n    },\n  },\n  readMoreBtn: {\n    color: \"#1DBF73\",\n    fontSize: 16,\n    cursor: \"pointer\",\n    fontWeight: \"bold\",\n    marginLeft: \".7rem\",\n  },\n  descTextContainer: {\n    maxWidth: 1285,\n  },\n  scContainer: {\n    borderRadius: 10,\n    \"& > img\": {\n      height: \"150px\",\n    },\n    \"@media only screen and (max-width: 575px)\": {\n      maxWidth: \"50%\",\n      \"& > img\": {\n        width: \"100%\",\n        height: \"auto\",\n      },\n    },\n  },\n  infoItemsContain: {\n    \"@media only screen and (max-width: 575px)\": {\n      flexDirection: \"row\",\n      display: \"flex\",\n    },\n  },\n  informationContainer: {\n    maxWidth: \"1500px\",\n    \"@media only screen and (max-width: 575px)\": {\n      display: \"inline-block\",\n      maxWidth: \"50%\",\n      margin: 0,\n    },\n\n    \"&:last-child\": {\n      \"@media only screen and (max-width: 575px)\": {\n        paddingLeft: \"7px\",\n      },\n    },\n  },\n  mb0: {\n    \"@media only screen and (max-width: 575px)\": {\n      marginBottom: 0,\n    },\n  },\n}));\n\nconst AppInfo = ({ data, appId }) => {\n  const classes = useStyles();\n  const history = useHistory();\n  return (\n    <Fragment>\n      <Typography component=\"h2\" className={`${classes.h2} ${classes.mb0}`}>\n        App Details <Button style={{ float: 'right' }} className={classes.submitBtn} onClick={(e) => history.push(`/editpublishapp/${appId}`)}> Edit </Button>\n      </Typography>\n\n      <Box display=\"flex\" className={classes.informationContainer}>\n        <Box flex={1}>\n          <Typography className={classes.subHeading}>Version</Typography>\n\n          <Typography className={classes.infoText}>\n            {data && data.version}\n          </Typography>\n        </Box>\n        <Box flex={2}>\n          <Typography className={classes.subHeading}>\n            Interface language\n          </Typography>\n\n          <Typography className={classes.infoText}>\n            Russian, English, German, French, Spanish, Italian, Portuguese,\n            Arabic\n          </Typography>\n        </Box>\n        <Box flex={1}>\n          <Typography className={classes.subHeading}>The size</Typography>\n\n          <Typography className={classes.infoText}>183.9 MB</Typography>\n        </Box>\n      </Box>\n      <Box\n        display=\"flex\"\n        marginTop=\"1rem\"\n        marginBottom=\"15px\"\n        className={classes.informationContainer}\n      >\n        <Box flex={1}>\n          <Typography className={classes.subHeading}>Compatibility</Typography>\n\n          <Typography className={classes.infoText}>\n            OS X 10.9 or later, 64-bit processor\n          </Typography>\n        </Box>\n        <Box flex={2}>\n          <Typography className={classes.subHeading}>Verified</Typography>\n\n          <Typography className={classes.infoText}>\n            Dr.Web for Mac - No viruses\n          </Typography>\n        </Box>\n        <Box flex={1}>\n          <Typography className={classes.subHeading}>Tags</Typography>\n\n          <Typography className={classes.infoText}>\n            Programs, Utilities\n          </Typography>\n        </Box>\n      </Box>\n\n      <Box\n        marginBottom=\"10px\"\n        className={classes.descTextContainer}\n        marginTop=\"15px\"\n      >\n        <Typography component=\"h2\" className={classes.h2}>\n          Description\n        </Typography>\n        <Typography variant=\"body2\" className={classes.descText}>\n          {data && data.content.appDescription}\n          {/* Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam\n          nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat,\n          sed diam voluptua. At vero eos et accusam et.\n          <br />\n          Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam\n          nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat,\n          sed diam voluptua. At vero eos et accusam et.\n          <span className={classes.readMoreBtn}>Read More</span> */}\n        </Typography>\n      </Box>\n      <Typography component=\"h2\" className={classes.h2}>\n        Screenshots\n      </Typography>\n      <Box display=\"flex\" flexWrap=\"wrap\">\n        <Box paddingRight=\".5rem\" className={classes.scContainer}>\n          <img\n            src={\n              data &&\n              data.content.previewVideo.thumbnail &&\n              `https://siasky.net/${\n                data.content.previewVideo.thumbnail.split(\"sia:\")[1]\n              }`\n            }\n            alt=\"sc\"\n          />\n        </Box>\n        {data && data.content.previewImages.images.length\n          ? data.content.previewImages.images.map((i, index) => {\n              return (\n                <Box\n                  key={index}\n                  paddingRight=\".5rem\"\n                  className={classes.scContainer}\n                >\n                  <img\n                    src={`https://siasky.net/${i.thumbnail.split(\"sia:\")[1]}`}\n                    alt=\"sc\"\n                  />\n                </Box>\n              );\n            })\n          : null}\n\n        {/* // <Box paddingRight=\".5rem\" className={classes.scContainer}>\n        //   <img src={ScreenShot} alt=\"sc\" />\n        // </Box>\n        // <Box paddingRight=\".5rem\" className={classes.scContainer}>\n        //   <img src={ScreenShot} alt=\"sc\" />\n        // </Box>\n        // <Box className={classes.scContainer}>\n        //   <img src={ScreenShot} alt=\"sc\" />\n        // </Box> */}\n      </Box>\n      <Box className={classes.descTextContainer} marginTop=\"15px\">\n        <Typography component=\"h2\" className={classes.h2}>\n          Description\n        </Typography>\n        <Typography variant=\"body2\" className={classes.descText}>\n          What's new in iMazing 2.12.7 Licensing Server Change: iMazing will now\n          connect to https://api.imazing.com for license validation. This change\n          anticipates the upcoming retirement of our previous licensing\n          platform, Devmate. Please make sure to whitelist api.imazing.com if\n          you're experiencing activation issues. Licensing: added support for\n          new license types (imz *** license codes). Licensing: new license and\n          trial screens. Misc: added assets for new Apple devices.\n          <br />\n          <br />\n        </Typography>\n        <Typography variant=\"body2\" className={classes.descText}>\n          Fixes and improvements in 2.12.7 Licensing: fixed various activation\n          issues Fixed inactive Choose Wallpaper button in Supervision wizard\n          (macOS) Other minor fixes and stability improvements\n        </Typography>\n      </Box>\n      <Box overflow=\"hidden\" marginTop=\"15px\">\n        <Typography component=\"h2\" className={classes.h2}>\n          Similar Apps\n        </Typography>\n        {/* <SimilarApps /> */}\n      </Box>\n      <Box overflow=\"hidden\" marginTop=\"15px\">\n        <Typography component=\"h2\" className={classes.h2}>\n          Comments (65)\n        </Typography>\n\n        <AppComments uid={data && data.id} version={data && data.version} />\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default AppInfo;\n","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\hooks\\useShowHostingLinks.js",["930","931"],"import { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setShowHostingLinks } from '../redux/action-reducers-epic/SnShowHostingLinksAction';\n\nexport default function useShowHostingLinks() {\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(setShowHostingLinks(true));\n        return () => {\n            dispatch(setShowHostingLinks(false));\n        }\n    }, [])\n}","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\AppDetails\\AppDetailsHeader.js",["932","933","934","935","936","937","938","939","940","941","942","943","944","945"],"import React, { useEffect, useState } from \"react\"\r\nimport {\r\n  Box,\r\n  Button,\r\n  IconButton,\r\n  makeStyles,\r\n  Typography,\r\n} from \"@material-ui/core\"\r\n// Icons\r\nimport { ReactComponent as ShareIcon } from \"../../assets/img/icons/share.1.svg\"\r\nimport { ReactComponent as MsgIcon } from \"../../assets/img/icons/Messages, Chat.15.svg\"\r\nimport { ReactComponent as StarIcon } from \"../../assets/img/icons/star-favorite.svg\"\r\nimport { ReactComponent as StarIconOutline } from \"../../assets/img/icons/starOutlinedIcon.svg\"\r\n// icons\r\nimport VisibilityOutlinedIcon from \"@material-ui/icons/VisibilityOutlined\"\r\nimport VisibilityIcon from '@material-ui/icons/Visibility'\r\nimport ThumbUpAltOutlinedIcon from '@material-ui/icons/ThumbUpAltOutlined'\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt'\r\nimport { ReactComponent as HeartIcon } from \"../../assets/img/icons/Heart.svg\"\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\"\r\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined'\r\nimport FavoriteOutlinedIcon from '@material-ui/icons/FavoriteOutlined'\r\nimport LaunchOutlinedIcon from '@material-ui/icons/LaunchOutlined'\r\nimport LaunchIcon from '@material-ui/icons/Launch'\r\n// img import\r\nimport cubsImg from \"../../assets/img/cubs.png\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport {\r\n  setAppStatsAction, getAppStatsAction\r\n} from \"../../redux/action-reducers-epic/SnAppStatsAction\"\r\nimport { EVENT_APP_VIEWED, EVENT_APP_ACCESSED, EVENT_APP_LIKED, EVENT_APP_LIKED_REMOVED, EVENT_APP_FAVORITE, EVENT_APP_FAVORITE_REMOVED, EVENT_APP_COMMENT, EVENT_APP_COMMENT_REMOVED } from \"../../utils/SnConstants\"\r\nimport { getAppStats, getAggregatedAppStats, getAggregatedAppStatsByAppId } from \"../../service/SnSkappService\"\r\n\r\nconst useStyles = makeStyles({\r\n  AppHeaderContainer: {\r\n    paddingLeft: \"40px\",\r\n    paddingRight: \"30px\",\r\n    paddingTop: \"25px\",\r\n    background: \"#1DBF73\",\r\n    color: \"#fff\",\r\n    borderRadius: 15,\r\n    \"@media only screen and (max-width: 575px)\": {\r\n      paddingLeft: \"20px\",\r\n      paddingRight: \"20px\",\r\n      paddingTop: \"25px\",\r\n    },\r\n  },\r\n  HeartIcon: {\r\n    \"& #Path_52298\": {\r\n      stroke: \"#fff\",\r\n    },\r\n    // color: '#fff'\r\n  },\r\n  ShareIcon: {\r\n    \"& g > path\": {\r\n      stroke: \"#fff\",\r\n    },\r\n  },\r\n  MsgIcon: {\r\n    \"& path:not(:first-child)\": {\r\n      stroke: \"#fff\",\r\n    },\r\n    transform: \"scale(1.4)\",\r\n    marginRight: \"8px\",\r\n    \"@media only screen and (max-width: 575px)\": {\r\n      transform: \"scale(1.2)\",\r\n      marginRight: \"4px\",\r\n      \"& p\": {\r\n        fontSize: 14,\r\n      },\r\n    },\r\n  },\r\n  addFav: {\r\n    color: \"white\",\r\n    fontSize: 25,\r\n  },\r\n  StarIcon: {\r\n    \"& path:not(:first-child)\": {\r\n      stroke: \"#fff\",\r\n      fill: \"#fff\",\r\n    },\r\n    // cursor: \"pointer\",\r\n    transform: \"scale(1.4)\",\r\n    marginRight: \"8px\",\r\n\r\n    \"@media only screen and (max-width: 575px)\": {\r\n      transform: \"scale(1.2)\",\r\n      marginRight: \"4px\",\r\n\r\n      \"& p\": {\r\n        fontSize: 14,\r\n      },\r\n    },\r\n  },\r\n  h1: {\r\n    fontSize: \"48px\",\r\n    fontWeight: \"700\",\r\n    lineHeight: 1,\r\n    marginTop: 5,\r\n    marginBottom: 10,\r\n    \"@media only screen and (max-width: 575px)\": {\r\n      fontSize: \"25px\",\r\n    },\r\n  },\r\n  programBtn: {\r\n    background: \"rgba(255,255,255,0.7)!important\",\r\n    color: \"#1DBF73\",\r\n    paddingLeft: \"10px\",\r\n    paddingRight: \"10px\",\r\n    fontSize: 14,\r\n    fontWeight: 600,\r\n    marginTop: \".8rem\",\r\n    margin: \"22px 0\",\r\n  },\r\n  installBtn: {\r\n    background: \"#fff!important\",\r\n    minWidth: 165,\r\n    margin: \"22px 0\",\r\n    fontSize: 12,\r\n  },\r\n  text: {\r\n    fontSize: 18,\r\n    lineHeight: \"21px\",\r\n    \"@media only screen and (max-width: 575px)\": {\r\n      fontSize: \"14px\",\r\n      lineHeight: \"17px\",\r\n    },\r\n  },\r\n  box1: {\r\n    maxWidth: \"1130px\",\r\n  },\r\n  box2: {\r\n    textAlign: \"center\",\r\n    \"@media only screen and (max-width: 575px)\": {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  favrIcon: {\r\n    marginLeft: \".8rem\",\r\n\r\n    \"@media only screen and (max-width: 575px)\": {\r\n      marginLeft: \".5rem\",\r\n    },\r\n  },\r\n  sharIcon: {\r\n    marginLeft: \".5rem\",\r\n\r\n    \"@media only screen and (max-width: 575px)\": {\r\n      marginLeft: \"0\",\r\n    },\r\n  },\r\n  VisiIconContainer: {\r\n    marginRight: \"1rem\",\r\n    \"@media only screen and (max-width: 575px)\": {\r\n      marginRight: \"8px\",\r\n    },\r\n  },\r\n  msgIconContainer: {\r\n    marginLeft: \".5rem\",\r\n    marginRight: \"1rem\",\r\n    \"@media only screen and (max-width: 575px)\": {\r\n      marginRight: \"8px\",\r\n      marginLeft: \"0\",\r\n    },\r\n  },\r\n})\r\nconst AppDetailsHeader = ({ data }) => {\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n  const [appStats, setAppStats] = useState(false)\r\n  const [aggregatedAppStats, setAggregatedAppStats] = useState(false)\r\n  const appStatsStore = useSelector(\r\n    (state) => state.snAppStatsStore\r\n  )\r\n\r\n  useEffect(() => {\r\n\r\n    if (data) {\r\n      fetchMyAppStats()\r\n      fetchAggregatedAppStats()\r\n      // onload get apps stats data and load in store\r\n      //dispatch(getAppStatsAction(data.id));\r\n    }\r\n  }, [data])\r\n\r\n  // View|access|likes|fav\r\n  const fetchMyAppStats = async () => {\r\n    const result = await getAppStats(data.id)\r\n    setAppStats(result)\r\n  }\r\n\r\n  // View|access|likes|fav\r\n  const fetchAggregatedAppStats = async () => {\r\n    const result = await getAggregatedAppStatsByAppId(data.id)\r\n    setAggregatedAppStats(result)\r\n  }\r\n\r\n  const appStatsAction = async (eventType) => {\r\n    // EVENT_APP_FAVORITE, EVENT_APP_FAVORITE_REMOVED\r\n    await dispatch(setAppStatsAction(eventType, data.id))\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   if (data) {\r\n  //     // onload get apps stats data and load in store\r\n  //     //dispatch(getAppStatsAction(data.id));\r\n  //     setAppStats(getAppStats(data.id));\r\n  //   }\r\n  // }, [data,appStats]);\r\n\r\n  return (\r\n    <Box className={classes.AppHeaderContainer} display=\"flex\">\r\n      <Box className={classes.box1}>\r\n        <Box display=\"flex\" width=\"100%\">\r\n          <Box display=\"flex\" alignItems=\"center\" className={classes.VisiIconContainer}>\r\n            <VisibilityIcon />\r\n            <Typography>{aggregatedAppStats[0]}</Typography>\r\n          </Box>\r\n          <Box display=\"flex\" alignItems=\"center\" className={classes.VisiIconContainer}>\r\n            <LaunchIcon />\r\n            <Typography>{aggregatedAppStats[1]}</Typography>\r\n          </Box>\r\n          <Box display=\"flex\" alignItems=\"center\" marginRight=\"0\">\r\n            {/* <ThumbUpAltIcon/> */}\r\n            {(parseInt(appStats[2]) === parseInt(1)) ? (\r\n              <ThumbUpAltIcon\r\n                className={classes.StarIcon}\r\n                onClick={() => appStatsAction(EVENT_APP_LIKED_REMOVED)}\r\n              />\r\n            ) : (\r\n              <ThumbUpAltOutlinedIcon\r\n                className={classes.StarIcon}\r\n                onClick={() => appStatsAction(EVENT_APP_LIKED)}\r\n              />\r\n            )}\r\n            <Typography>{aggregatedAppStats[2]}</Typography>\r\n          </Box>\r\n          <Box display=\"flex\" alignItems=\"center\" className={classes.favrIcon}>\r\n            {/* <FavoriteOutlinedIcon/> */}\r\n            {(parseInt(appStats[3]) === parseInt(1)) ? (\r\n              <FavoriteOutlinedIcon\r\n                className={classes.HeartIcon}\r\n                onClick={() => appStatsAction(EVENT_APP_FAVORITE_REMOVED)}\r\n              />\r\n            ) : (\r\n              <FavoriteBorderOutlinedIcon\r\n                className={classes.addFav}\r\n                onClick={() => appStatsAction(EVENT_APP_FAVORITE)}\r\n              />\r\n            )}\r\n            <Typography>{aggregatedAppStats[3]}</Typography>\r\n          </Box>\r\n\r\n          {/* <Box display=\"flex\" alignItems=\"center\" marginRight=\"0\">\r\n            {(parseInt(appStats[2]) === parseInt(1)) ? (\r\n              <ThumbUpAltIcon\r\n                className={classes.StarIcon}\r\n                onClick={() => appStatsAction(EVENT_APP_LIKED_REMOVED)}\r\n              />\r\n            ) : (\r\n              <ThumbUpAltOutlinedIcon\r\n                style={{ height: 19 }}\r\n                className={classes.StarIcon}\r\n                onClick={() => appStatsAction(EVENT_APP_LIKED)}\r\n              />\r\n            )}\r\n            <Typography>{appStats?.content?.liked}</Typography>\r\n          </Box> */}\r\n          {/* <Box className={classes.favrIcon}>\r\n            <IconButton aria-label=\"Favourite Button\" size=\"small\">\r\n              {(parseInt(appStats[3]) === parseInt(1)) ? (\r\n                <FavoriteBorderOutlinedIcon\r\n                  className={classes.HeartIcon}\r\n                  onClick={() => appStatsAction(EVENT_APP_FAVORITE_REMOVED)}\r\n                />\r\n              ) : (\r\n                <FavoriteOutlinedIcon\r\n                  className={classes.addFav}\r\n                  onClick={() => appStatsAction(EVENT_APP_FAVORITE)}\r\n                />\r\n              )}\r\n            </IconButton>\r\n          </Box> */}\r\n          <Box\r\n            display=\"flex\"\r\n            alignItems=\"center\"\r\n            className={classes.msgIconContainer}\r\n          >\r\n            <MsgIcon className={classes.MsgIcon} />\r\n            <Typography>1.3k</Typography>\r\n          </Box>\r\n          <Box className={classes.sharIcon}>\r\n            <IconButton aria-label=\"Share Button\" size=\"small\">\r\n              <ShareIcon className={classes.ShareIcon} />\r\n            </IconButton>\r\n          </Box>\r\n        </Box>\r\n        <Box marginTop=\"10px\">\r\n          <Typography>Skapp</Typography>\r\n          <Typography component=\"h1\" className={classes.h1}>\r\n            {data && data.content.appname}\r\n          </Typography>\r\n          <Typography component=\"p\" className={classes.text}>\r\n            {/* Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam\r\n            nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam\r\n            erat, sed diam voluptua. At vero eos et accusam et. */}\r\n            {data && data.content.appDescription}\r\n          </Typography>\r\n\r\n          <Box>\r\n            <Button size=\"small\" className={classes.programBtn}>\r\n              {data && data.content.category}\r\n            </Button>\r\n            {/* <Button className={classes.installBtn}>+ Install</Button> */}\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n      <Box alignSelf=\"center\" className={classes.box2} flex={1}>\r\n        <img src={cubsImg} alt=\"igm\" />\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default AppDetailsHeader\r\n","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\Domain\\AddNewDomain.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\Domain\\AddNewDomainTXT.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\AppsComp\\SubmitBtn.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\AppsComp\\UtilitiesItem.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\Domain\\DomainTable.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\Hosting\\StorageTable.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\AppsComp\\ListFilter.js",["946","947","948","949","950"],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\assets\\jss\\no-apps\\NoAppsStyle.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\assets\\jss\\app-details\\SubmitAppStyles.js",["951"],"import GraphIcon from '../../img/icons/grahpIcon.svg'\nconst SubmitAppStyles = () => ({\n    h1: { \n        fontSize: '28px',\n        color: '#fff',\n        '@media only screen and (max-width: 575px)': {\n            fontSize: 18\n        }\n    },\n    btnBox: {\n\n    },\n    okBtn: {\n        border: '1px solid #ea052f',\n        marginRight: '10px',\n        borderRadius: '5px',\n        boxShadow: '0px 2px 5px #15223221',\n        height: 48,\n        marginTop: '2rem',\n        textTransform: 'none'\n    },\n    modalTitle: {\n        fontSize: 32,\n        color: '#333333',\n        fontWeight: 700,\n        marginBottom: '1rem'\n    },\n    shareCardContainer: {\n        // background: '#fff',\n        background: '#2A2C34',\n        boxShadow: '0px 2px 5px #15223221',\n        borderRadius: 15,\n        padding: '48px 60px',\n        '@media only screen and (max-width: 575px)': {\n            padding: '40px 20px',\n            paddingTop: '50px'\n        },\n        '&:focus': {\n            outline: 0,\n            border: 0\n        },\n        width: '90%',\n        maxWidth: 500,\n        '& p': {\n            color: '#5A607F',\n            marginBottom: '5px'\n        },\n        '& .s-links-title': {\n            marginTop: '.4rem'\n        },\n        '& a': {\n            marginRight: '1rem',\n            '&:focus': {\n                textDecoration: 'none',\n                opacity: .8,\n                transition: '.25s ease'\n            }\n        }\n\n    },\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    closeBtn: {\n        border: '1px solid #1DBF73',\n        borderRadius: '5px',\n        boxShadow: '0px 2px 5px #15223221',\n        height: 48,\n        marginTop: '2rem',\n        textTransform: 'none'\n    },\n    cancelBtn: {\n        background: '#FF6060!important',\n        color: '#fff',\n        paddingLeft: '1.5rem',\n        paddingRight: '1.5rem',\n        minWidth: 130,\n        marginRight: '1rem',\n        '@media only screen and (max-width: 575px)': {\n            fontSize: '12px',\n            marginRight: '.4rem',\n            paddingLeft: '.5rem',\n            paddingRight: '.5rem',\n            minWidth: 70,\n        }\n    },\n    submitBtn: {\n        background: '#1DBF73!important',\n        color: '#fff',\n        paddingLeft: '1rem',\n        paddingRight: '1rem',\n        display: 'inlin-flex',\n        alignItems: 'center',\n        minWidth: 130,\n        '& svg': {\n            fontSize: '19px',\n            marginRight: '5px'\n        },\n        '@media only screen and (max-width: 575px)': {\n            fontSize: '12px',\n\n            paddingLeft: '.5rem',\n            paddingRight: '.5rem',\n            minWidth: 70,\n        }\n    },\n    siteLogo: {\n        background: '#1E2029',\n        cursor: 'pointer',\n        height: 160,\n        width: 260,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        // border: '1px solid #D9E1EC',\n        border: '1px solid #48494E',\n        borderRadius: 8,\n        marginBottom: 10,\n        '@media only screen and (max-width: 575px)': {\n            width: \"100%\",\n            maxWidth: 340,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n\n        }\n\n    },\n    label: {\n        display: 'block',\n        color: '#5A607F',\n        marginBottom: 8,\n        fontSize: 18,\n        '@media only screen and (max-width: 575px)': {\n            fontSize: 16,\n        }\n    },\n    inputGuide: {\n        color: '#5C757D',\n        '@media only screen and (max-width: 575px)': {\n            fontSize: 12,\n        }\n    },\n    input: {\n        background: '#fff',\n        border: '1px solid #D9E1EC',\n        borderRadius: 8,\n        height: 55,\n        width: '100%',\n        fontSize: 18,\n        padding: 20,\n        '@media only screen and (max-width: 1440px)': {\n            height: 50,\n            // width: '100%',\n            fontSize: 16,\n            padding: 15,\n        },\n        '@media only screen and (max-width: 575px)': {\n            height: 43,\n            // width: '100%',\n            fontSize: '14px !important',\n            padding: 10,\n        }\n\n    },\n    inputTag: {\n        background: '#fff',\n        border: '1px solid #D9E1EC',\n        borderRadius: 8,\n        height: 55,\n        width: '100%',\n        fontSize: 18,\n        padding: 10,\n        '@media only screen and (max-width: 1440px)': {\n            height: 50,\n            // width: '100%',\n            fontSize: 16,\n            padding: 10,\n        },\n        '@media only screen and (max-width: 575px)': {\n            height: 43,\n            // width: '100%',\n            fontSize: '14px !important',\n            padding: 10,\n        }\n\n    },\n    inputContainer: {\n        '& > label': {\n            display: 'block',\n            color: '#5A607F',\n            marginBottom: 7\n        },\n        '& input, input:focus, & select:focus': {\n            outline: 'none!important',\n            // border: '1px solid #1DBF73',\n            color: '#fff',\n            border: '1px solid #48494E',\n            background: '#1E2029',\n        },\n        marginTop: '25px',\n        '&': {\n            marginRight: '1rem'\n        },\n        '& input, & input': {\n            fontSize: 18\n        },\n        '@media only screen and (max-width: 575px)': {\n            marginTop: '16px',\n            marginRight: '10px'\n\n\n        },\n\n    },\n    '.css-h0f0jv-control': {\n        background: '#1E2029'\n    },\n    inputContainerTag: {\n        '& > label': {\n            display: 'block',\n            color: '#5A607F',\n            marginBottom: 7\n        },\n        '& input:focus, & select:focus': {\n            outline: 'none!important',\n        },\n        marginTop: '25px',\n        '&': {\n            marginRight: '1rem'\n        },\n        '& input, & input': {\n            fontSize: 16\n        },\n        '@media only screen and (max-width: 575px)': {\n            marginTop: '16px',\n            marginRight: '10px'\n        },\n    },\n    max33: {\n        maxWidth: 'calc(33.33% - 1rem)',\n\n    },\n    '@media only screen and (max-width: 575px)': {\n\n        maxWidth: 'calc(33.33% - 10px)',\n\n    },\n    select: {\n        // background: '#fff',\n        // border: '1px solid #D9E1EC',\n        // borderRadius: 8,\n        // height: 55,\n        // // width: '100%',\n        // fontSize: 18,\n        // padding: 20,\n        // paddingRight: 40,\n        // '@media only screen and (max-width: 1440px)': {\n        //     height: 50,\n        //     // width: '100%',\n        //     fontSize: 16,\n        //     padding: 15,\n        // },\n        // '@media only screen and (max-width: 575px)': {\n        //     height: 40,\n        //     // width: '100%',\n        //     fontSize: 14,\n        //     padding: 10,\n        // },\n        // '-webkit-appearance': 'none',\n        // '-moz-appearance': 'none',\n        // 'appearance': 'none',\n        // textIndent: 1,\n        // textOverflow: '',\n        // minWidth: '160px',\n        // position: 'relative',\n        // '&::after': {\n        //     content: '',\n        //     position: 'absolute',\n        //     right: 15,\n        //     top: '50%',\n        //     transform: 'translateY(-50%)',\n\n    },\n    reactSelect: {\n        // '& .css-yk16xz-control, & .css-1pahdxg-control': {\n        //     background: '#fff',\n        //     border: '1px solid #D9E1EC',\n        //     borderRadius: 8,\n        //     height: 55,\n        //     boxShadow: 'none',\n\n        // },\n        // '& .css-yk16xz-control:focus, & .css-1pahdxg-control:focus, & .css-yk16xz-control:hover, & .css-1pahdxg-control:hover': {\n        //     background: '#fff',\n        //     border: '1px solid #D9E1EC',\n        //     borderRadius: 8,\n        //     height: 55,\n        //     boxShadow: '1px solid #D9E1EC'\n        // },\n    },\n    selectVersion: {\n        maxWidth: '150px',\n        minWidth: '150px'\n    },\n    formRow: {\n        maxWidth: '1500px',\n        marginRight: '-1rem',\n        // '@media only screen and (max-width: 575px)': {\n        //     flexWrap: \"wrap\",\n        //     '& > div:first-child, & > div:nth-child(3)': {\n        //         maxWidth: '100%',\n        //         flex: '100%'\n        //     }\n        //     ,\n        //     '& > div:nth-child(3)': {\n        //         order: 4,\n\n        //     },\n        //     '& > div:nth-child(2), & > div:nth-child(4)': {\n        //         maxWidth: 'calc(50% - 1rem)',\n        //         flex: 'calc(50% - 1rem)'\n        //     }\n        // }\n        // },\n        // '@media only screen and (max-width: 575px)': {\n        //     '&:first-child':\n        // }\n    },\n    formRow1: {\n        '@media only screen and (max-width: 575px)': {\n            flexWrap: \"wrap\",\n            '& > div': {\n                maxWidth: 'calc(100% - 1rem)',\n                flex: 'calc(100% - 1rem)'\n            }\n        }\n    },\n    formRow2: {\n        '@media only screen and (max-width: 575px)': {\n            flexWrap: \"wrap\",\n            '& > div': {\n                maxWidth: 'calc(100% - 1rem)',\n                flex: 'calc(100% - 1rem)'\n            }\n\n        }\n    },\n    formRow4: {\n        '@media only screen and (max-width: 575px)': {\n            flexWrap: \"wrap\",\n            '& > div': {\n                maxWidth: 'calc(100% - 1rem)',\n                flex: 'calc(100% - 1rem)'\n            },\n            '& > div:last-child': {\n                order: -1\n            }\n\n        }\n    },\n    previewImgLabel: {\n        display: 'block',\n        color: '#5A607F',\n        marginBottom: 8,\n        fontSize: '18px',\n        '& > span': {\n            color: '#1DBF73',\n            fontSize: '16px'\n        },\n        '@media only screen and (max-width: 575px)': {\n            fontSize: '16px',\n            '& > span': {\n\n                fontSize: '12px'\n            },\n\n        }\n    },\n    placeholderImg: {\n        // background: '#ffff',\n        background: '#1E2029',\n        width: '100%',\n        height: '160px',\n        borderRadius: '8px',\n        // border: '1px dashed #5C5D5E',\n        border: '1px dashed rgba(0, 0, 0, 0.6)',\n        '@media only screen and (max-width: 575px)': {\n            height: '150px'\n        }\n    },\n    previewImg: {\n        background: '#1E2029',\n        cursor: 'pointer',\n        height: 160,\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        // border: '1px solid #D9E1EC',\n        border: '1px solid #1E2029',\n        borderRadius: 8,\n        marginBottom: 0,\n        '& .MuiDropzoneArea-root': {\n            background: '#1E2029'\n        },\n        '@media only screen and (max-width: 575px)': {\n            height: '150px'\n        }\n    },\n    textarea: {\n        // background: '#fff',\n        background: '#1E2029',\n        boxShadow: '0px 1px 2px #15223214',\n        // border: '1px solid #7070701A',\n        color: '#fff !important',\n        border: '1px solid #48494E',\n        borderRadius: '8px',\n        // minHeight: '90px',\n        width: `100%`,\n        maxWidth: '100%',\n        resize: 'none',\n        padding: \"1rem\",\n        color: '#000',\n        '&:focus': {\n            color: '#fff',\n            outline: 'none!important',\n            border: '1px solid #48494E',\n        },\n        '&:placeholder': {\n            color: 'rgba(126, 132, 163 , .32)'\n        },\n        '&::-webkit-input-placeholder': {\n            color: 'rgba(126, 132, 163 , .32)'\n        }\n        ,\n        \"&:-moz-placeholder\": { /* Firefox 18- */\n            color: 'rgba(126, 132, 163 , .32)'\n        }\n        ,\n        \"&::-moz-placeholder\": {  /* Firefox 19+ */\n            color: 'rgba(126, 132, 163 , .32)'\n        }\n        ,\n        \" &:-ms-input-placeholder\": {\n            color: 'rgba(126, 132, 163 , .32)'\n        }\n        ,\n        \"&::placeholder\": {\n            color: 'rgba(126, 132, 163 , .32)'\n        },\n        marginTop: '0',\n        '@media only screen and (max-width: 575px)': {\n            padding: \"10px\"\n        }\n    },\n    textareaLabel: {\n        display: 'block',\n        color: '#5A607F',\n        marginBottom: 8,\n        fontSize: '18px',\n        '& > span': {\n            opacity: '.52',\n            fontSize: '12px',\n            paddingLeft: '8px'\n        }\n    },\n    maxChar: {\n        position: 'absolute',\n        right: 14,\n        bottom: 14,\n        fontSize: 12,\n        letterSpacing: 0,\n        color: '#5A607F',\n        opacity: 0.84,\n        '@media only screen and (max-width: 575px)': {\n            display: 'none'\n        }\n    },\n    OneRowInput: {\n        marginTop: '25px',\n        '@media only screen and (max-width: 575px)': {\n            marginTop: '16px',\n        }\n    },\n    socilaMediaSelect: {\n        maxWidth: 120,\n        minWidth: 120,\n        '& .socialMedia__control, & ~ input': {\n            border: 0,\n            borderRadius: 8,\n            height: '100%'\n        },\n        '& ~ input': {\n            width: '100%',\n            paddingRight: 10\n\n        },\n        '& ~ input:hover, & ~ input:focus': {\n            border: 0,\n            outline: 0\n        },\n        '& .socialMedia__indicator-separator': {\n            display: 'none'\n        },\n        '@media only screen and (max-width: 575px)': {\n            margin: 'auto',\n            maxWidth: 100,\n            minWidth: 100,\n        },\n    },\n    socialOptionContainer: {\n        // background: '#fff',\n        background: '#2A2C34',\n        border: '1px solid #D9E1EC',\n        borderRadius: 8,\n        height: 55,\n        width: '100%',\n        fontSize: 18,\n        '@media only screen and (max-width: 1440px)': {\n            fontSize: 16,\n            height: 50,\n            background: '#2A2C34!important',\n            border: '1px solid rgba(0, 0, 0, 0.4)'\n        },\n        '@media only screen and (max-width: 575px)': {\n            fontSize: 14,\n            height: 43,\n            background: '#2A2C34!important',\n            border: '1px solid rgba(0, 0, 0, 0.4)'\n        },\n    },\n\n    button: {\n        background: '#1DBF73!important',\n        boxShadow: '0px 1px 2px #00000029',\n        borderRadius: 4,\n        color: '#fff',\n        display: 'block',\n        minWidth: 180,\n        maxWidth: 200,\n        paddingTop: 7,\n        paddingBottom: 7,\n        fontSize: '16px',\n\n        '@media only screen and (max-width: 575px)': {\n            margin: 'auto',\n\n        },\n    },\n    settingBtn: {\n        background: '#fff!important',\n        color: '#1DBF73',\n        paddingLeft: '1rem',\n        paddingRight: '1rem',\n        minWidth: 130,\n        border: '1px solid #7070701a',\n        fontSize: 16,\n        '& svg': {\n            marginRight: 7\n        }\n    },\n    uploadBtn: {\n        border: '1px solid #4E4E4E',\n        color: '#4E4E4E',\n        minWidth: 250,\n        marginTop: '1rem',\n        height: 45\n    },\n    h4: {\n        color: '#5A607F',\n        fontWeight: 'normal',\n        marginBottom: 7\n\n    },\n    GridContainer: {\n        marginTop: 15\n    },\n    DNSContainer: {\n        background: '#1E2029',\n        // border: '1px solid #D9E1EC',\n        border: '1px solid rgba(0, 0, 0, 0.4)',\n        borderRadius: 8,\n        padding: '45px 35px',\n        '@media only screen and (max-width: 1440px)': {\n            padding: '35px 25px',\n        },\n        '@media only screen and (max-width: 575px)': {\n            padding: '20px 15px'\n        },\n        minHeight: 190,\n    },\n    ContentItemTitle: {\n        color: '#7E84A3',\n        fontSize: 16,\n        '@media only screen and (max-width: 575px)': {\n            fontSize: 14,\n        }\n\n    },\n    siteLink: {\n        fontWeight: 'bold',\n        color: '#131523',\n        marginTop: 2,\n        wordBreak: 'break-word'\n    },\n    changeBtnLink: {\n        color: '#1DBF73',\n        cursor: 'pointer'\n    },\n    DevelopmentsContainer: {\n        minHeight: 190,\n        height: 200,\n        overflowY: 'auto',\n        // background: '#FFFFFF',\n        background: '#1E2029',\n        // border: '1px solid #D9E1EC',\n        border: '1px solid rgba(0, 0, 0, 0.4)',\n        borderRadius: 8,\n        padding: '15px 0',\n        '@media only screen and (max-width: 1440px)': {\n            padding: '15px 0',\n        }\n    },\n    ListRoot: {\n        // \"& .MuiListItem-button\": {\n        //     background: 'rgba(0, 0, 0, 0.04)'\n        // },\n        '& .MuiListItemIcon-root': {\n            height: '17px',\n            minWidth: '17px',\n            width: '17px',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: \"center\",\n            borderRadius: '50%',\n            background: '#1dbf734d'\n        },\n        '& svg': {\n            fontSize: 13,\n            color: '#1DBF73'\n        },\n        '& p': {\n            color: '#1DBF73',\n            fontSize: 15,\n            marginLeft: 10\n        },\n        \"& span\": {\n            fontSize: '15px',\n            color: '#7E84A3'\n        }\n    },\n    graphText: {\n        fontSize: 14,\n        // color: '#1DBF73'\n        color: '#fff'\n    },\n    StatValue: {\n        fontSize: 32,\n        // color: '#242F57',\n        color: '#fff',\n        fontWeight: 'bold'\n    },\n    StatTitle: {\n        color: '#97A0C3',\n        marginBottom: 10\n    },\n    statCol: {\n        background: `url(${GraphIcon})`,\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'right bottom',\n\n    },\n    StatsContainer: {\n        minHeight: 190,\n        // background: '#FFFFFF',\n        background: '#1E2029',\n        // border: '1px solid #D9E1EC',\n        border: '1px solid rgba(0, 0, 0, 0.4)',\n        borderRadius: 8,\n        padding: '30px 15px',\n        '@media only screen and (max-width: 1440px)': {\n            padding: '30px 15px',\n        },\n        '@media only screen and (max-width: 659px)': {\n            minHeight: 'auto'\n        },\n\n    },\n    paddingLeft: {\n        marginLeft: '1rem',\n        '@media only screen and (max-width: 659px)': {\n            marginLeft: 0,\n            marginTop: 15\n        },\n    }\n})\nexport default SubmitAppStyles;","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\Hosting\\AddNewSiteBtn.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\Hosting\\HostingItem.js",["952"],"import React from 'react'\nimport { Box, Button, IconButton, makeStyles } from '@material-ui/core'\nimport HostingImg from '../../assets/img/hostingSc.png'\nimport EditIcon from '@material-ui/icons/Edit'\nimport ChevronRightOutlinedIcon from '@material-ui/icons/ChevronRightOutlined'\nimport MoreVertOutlinedIcon from '@material-ui/icons/MoreVertOutlined'\nimport { ReactComponent as FolderIcon } from '../../assets/img/icons/folderIcon.svg'\nimport { ReactComponent as ShareIcon } from '../../assets/img/icons/shareSite.svg'\nimport styles from '../../assets/jss/hosting/HostingItemStyle'\nimport { skylinkToUrl } from '../../utils/SnUtility'\nimport moment from 'moment'\nimport { useHistory } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport { setSelectedHostedApp } from '../../redux/action-reducers-epic/SnSelectedHostedAppAction'\nimport { Delete } from '@material-ui/icons';\n\nconst useStyles = makeStyles(styles)\nconst HostingItem = ({ ActiveSite, app, handleOpen, id }) => {\n    const classes = useStyles();\n    let history = useHistory();\n    const dispatch = useDispatch();\n\n    const appContent = app.content;\n\n    const onManageDeployment = (evt) => {\n        dispatch(setSelectedHostedApp(app.id));\n        history.push(`/deploysite/${app.id}`);\n    };\n\n    const onPublish = (evt) => {\n        dispatch(setSelectedHostedApp(app.id));\n        history.push(`/submitapp/${app.id}`);\n    };\n\n    const onEdit = (evt) => {\n        dispatch(setSelectedHostedApp(app.id));\n        history.push(`/editsite/${app.id}`);\n    };\n\n    return (\n        <Box display=\"flex\" className={classes.root} position=\"relative\">\n            <div className={classes.HostingImgContainer}>\n                {(appContent.imgThumbnailSkylink == null || appContent.imgThumbnailSkylink.trim() === \"\") && <img src={HostingImg} alt=\"\" />}\n                {appContent.imgThumbnailSkylink != null && appContent.imgThumbnailSkylink.trim() !== \"\" &&\n                    <img alt=\"app\"\n                        src={skylinkToUrl(appContent.imgThumbnailSkylink)}\n                        style={{\n                            width: \"250px\",\n                            height: \"150px\",\n                            // border: props.arrSelectedAps.indexOf(app) > -1 ? \"2px solid #1ed660\" : null,\n                        }}\n                        name=\"1\"\n                    />}\n            </div>\n            <div className={classes.detailsCol}>\n                <h2 className={classes.h2}>{appContent.appName}</h2>\n                <Box display=\"flex\" alignItems=\"center\" className={classes.verisonAndLink}>\n                    <p>{appContent.hns}\n                        <ShareIcon />\n                    </p>\n                    <span>version:{app.version}</span>\n                </Box>\n                <Box className={classes.updateText}>\n                    Last Updated: {moment(app.ts).format(\n                    \"h:mm:ss A, MMMM D, YYYY\"\n                )}\n                </Box>\n                <Box display='flex' className={classes.btnContainer}>\n                    {\n                        ActiveSite\n                            ?\n                            <Button className={classes.ActiveBtn}>\n                                Active\n                            </Button>\n                            :\n                            <Button className={classes.inActiveBtn}>\n                                Inactive\n                            </Button>\n                    }\n                    <Button className={classes.manageBtn} onClick={onPublish}>\n                        <span>Publish</span>\n                    </Button>\n                    <Button className={classes.manageBtn} onClick={onEdit}>\n                        <span>Edit</span>\n                    </Button>\n                    <Button className={classes.trashBtn} onClick={()=> handleOpen(appContent, id)}>\n                        <Delete />\n                    </Button>\n                    <Button className={classes.manageBtn} onClick={onManageDeployment}>\n                        <FolderIcon />\n                        <span>Manage Deployment</span>\n                        <ChevronRightOutlinedIcon />\n                    </Button>\n                </Box>\n            </div>\n\n\n            {/* Button More */}\n            <IconButton className={classes.moreBtn}>\n                <MoreVertOutlinedIcon />\n            </IconButton>\n        </Box>\n    )\n}\n\nexport default HostingItem\n","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnAllPublishAppAction.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnInstalledAppAction.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\AppsComp\\SelectItem.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\AppsComp\\AppCard.js",["953","954","955","956","957","958","959","960","961","962","963","964","965","966","967","968","969","970","971"],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\AppsComp\\AppsList.js",["972","973"],"import { React, useEffect, useState } from \"react\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport { Grid } from \"@material-ui/core\"\r\nimport AppCard from \"./AppCard\"\r\nimport styles from \"../../assets/jss/apps/AppListStyle\"\r\nimport InfiniteScroll from \"react-infinite-scroll-component\"\r\nimport Spiner from './Spiner'\r\nimport { useSelector } from \"react-redux\"\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\n const AppsList = ({ newData, handleInstall, updated, installedApps, toggle }) => {\r\n const classes = useStyles();\r\n\r\n  // const [data, setData] = useState(newData);\r\n\r\n  const [items, setItems] = useState(Array.from({ length: 12 }))\r\n  const [alldata, setAlldata] = useState([])\r\n  //console.log(\"from list\", newData)\r\n  useEffect(() => {\r\n    // console.log(items.length);\r\n    if (items.length && newData) {\r\n      const indexOfLastTodo = 1 * items.length\r\n      const indexOfFirstTodo = indexOfLastTodo - items.length\r\n      const currentTodos = newData?.slice(indexOfFirstTodo, indexOfLastTodo)\r\n      setAlldata(currentTodos)\r\n    }\r\n  }, [items.length, newData])\r\n\r\n  const fetchMoreData = () => {\r\n    // a fake async api call like which sends\r\n    // 20 more records in 1.5 secs\r\n    setTimeout(() => {\r\n      setItems(items.concat(Array.from({ length: 12 })))\r\n      //   this.setState({\r\n      //     items: this.state.items.concat(Array.from({ length: 20 })),\r\n      //   });\r\n    }, 500)\r\n  }\r\n\r\n  return (\r\n    <div className={`${classes.listContain} list-grid-container`}>\r\n      <InfiniteScroll\r\n        style={{ overflow: 'none' }}\r\n        scrollableTarget=\"app-content\"\r\n        className=\"infinite\"\r\n        dataLength={items.length}\r\n        next={fetchMoreData}\r\n        hasMore={alldata.length === newData.length ? false : true}\r\n        loader={<Spiner />}\r\n      // endMessage={<h3>End of Apps</h3>}\r\n      >\r\n        <Grid container spacing={1} id=\"appsInfinteScroll\">\r\n          {alldata &&\r\n            alldata.map((item, index) => {\r\n              return (\r\n                <Grid item xs={6} sm={6} md={4} lg={3} xl={3} key={index}>\r\n                  <AppCard toggle={toggle} selectable={true} item={item} updated={installedApps.some(x => x && item && x.id == item.id) ? true : undefined } handleInstall={handleInstall}/>\r\n                </Grid>\r\n              )\r\n            })}\r\n        </Grid>\r\n      </InfiniteScroll>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AppsList\r\n","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\assets\\jss\\apps\\AppListStyle.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\slickarrows\\SlickNextArrow.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\slickarrows\\SlickPrevArrow.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\Footer\\Footer.js",["974","975","976","977","978","979","980","981"],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\assets\\jss\\error-page\\ErrorPageStyle.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\AppsComp\\SelectedAppsHeader.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\AppsComp\\CustomPagination.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnShowHostingLinksAction.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\AppDetails\\AppComments.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnAppStatsAction.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnSelectedHostedAppAction.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\assets\\jss\\hosting\\AddNewSiteBtnStyle.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\assets\\jss\\apps\\AppCardStyle.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\assets\\jss\\hosting\\HostingItemStyle.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\ShareApp\\ShareApp.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\AppDetails\\CommentForm.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\AppDetails\\AppComment.js",["982"],"import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faStar as filledStar } from \"@fortawesome/free-solid-svg-icons\";\nimport { faStar as unFilledStar } from \"@fortawesome/free-regular-svg-icons\";\nimport { Box, makeStyles, Typography } from \"@material-ui/core\";\nimport { getAppCommentAction } from \"../../redux/action-reducers-epic/SnAppCommentsAction\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport moment from \"moment\";\nimport { useParams } from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n  ratingDiv: {\n    marginLeft: \"1rem\",\n    \"& svg\": {\n      color: \"#FFD700\",\n      \"@media only screen and (max-width: 575px)\": {\n        fontSize: \"10px\",\n      },\n    },\n  },\n  AppComment: {\n    maxWidth: 715,\n    marginBottom: 10,\n  },\n  opcity60: {\n    opacity: \".60\",\n    \"@media only screen and (max-width: 575px)\": {\n      fontSize: \"10px\",\n    },\n  },\n  commenterName: {\n    \"@media only screen and (max-width: 575px)\": {\n      fontSize: \"14px\",\n    },\n  },\n  ratingAndName: {\n    marginLeft: \"1.1rem\",\n    \"@media only screen and (max-width: 575px)\": {\n      marginLeft: \"10px\",\n    },\n  },\n  commenterImg: {\n    maxWidth: 80,\n    \"@media only screen and (max-width: 575px)\": {\n      minWidth: 80,\n    },\n    \"& > img\": {\n      borderRadius: 5,\n      width: \"100%\",\n    },\n  },\n});\nconst AppComment = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { appCommentsStore } = useSelector((state) => state.snPublishedAppsStore);\n  const [data, setData] = React.useState();\n  const { id } = useParams();\n\n  React.useEffect(() => {\n    if (id) {\n      dispatch(getAppCommentAction(id));\n    }\n  }, [id]);\n\n  React.useEffect(() => {\n    if (appCommentsStore) {\n      setData(appCommentsStore);\n    }\n  }, [appCommentsStore]);\n\n  // console.log(\"=========>\", data);\n\n  return (\n    <div>\n      {data &&\n        data.map((item) => {\n         return item.content.comments.map((i, index) => {\n           return (\n             <Box key={index} display=\"flex\" className={classes.AppComment}>\n               <Box\n                 className={classes.commenterImg}\n                 borderRadius=\"5px\"\n                 overflow=\"hidden\"\n               >\n                 <img src=\"https://i.pravatar.cc/80\" alt=\"\" />\n               </Box>\n               <Box className={classes.ratingAndName}>\n                 <Box display=\"flex\" alignItems=\"center\">\n                   <h3 className={classes.commenterName}>Marquise Vasquez</h3>\n                   <Box\n                     className={classes.ratingDiv}\n                     display=\"flex\"\n                     alignItems=\"center\"\n                   >\n                     <Box marginRight=\".5rem\" display=\"flex\">\n                       <FontAwesomeIcon icon={filledStar} />\n                       <FontAwesomeIcon icon={filledStar} />\n                       <FontAwesomeIcon icon={filledStar} />\n                       <FontAwesomeIcon icon={filledStar} />\n                       <FontAwesomeIcon icon={unFilledStar} />\n                     </Box>\n                     <span className={classes.opcity60}>3.8</span>\n                   </Box>\n                 </Box>\n                 <Box>\n                   <Typography variant=\"caption\" className={classes.opcity60}>\n                     {/* October 3, 2019 */}\n                     {moment(i.timestamp).format(\"MMMM D, YYYY\")}\n                   </Typography>\n                   <Typography\n                     variant=\"caption\"\n                     component=\"div\"\n                     className={classes.opcity60}\n                   >\n                     {i.comment}\n                   </Typography>\n                 </Box>\n               </Box>\n             </Box>\n           );\n         });\n        })}\n    </div>\n  );\n};\n\nexport default AppComment;\n","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnAppCommentsAction.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnUserProfileReducer.js",["983"],"import { ACT_TY_SET_USER_PROFILE } from \"../SnActionConstants\"\nimport { STORAGE_USER_APP_PROFILE_KEY, BROWSER_STORAGE } from \"../../utils/SnConstants\"\n\nexport default (state = null, action) => {\n  switch (action.type) {\n    case ACT_TY_SET_USER_PROFILE:\n      return action.payload\n    default:\n      if (state == null) {\n        state = BROWSER_STORAGE.getItem(STORAGE_USER_APP_PROFILE_KEY)\n        if (state != null) {\n          state = JSON.parse(state)\n        }\n      }\n      return state\n  }\n}\n","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnUserPreferencesReducer.js",["984"],"import { ACT_TY_SET_USER_PREFERENCES } from \"../SnActionConstants\"\r\nimport { STORAGE_USER_PREFERENCES_KEY, BROWSER_STORAGE } from \"../../utils/SnConstants\"\r\n\r\nexport default (state = null, action) => {\r\n  switch (action.type) {\r\n    case ACT_TY_SET_USER_PREFERENCES:\r\n      return action.payload\r\n    default:\r\n      if (state == null) {\r\n        state = BROWSER_STORAGE.getItem(STORAGE_USER_PREFERENCES_KEY)\r\n        if (state != null) {\r\n          state = JSON.parse(state)\r\n        }\r\n      }\r\n      return state\r\n  }\r\n}\r\n","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnUserProfileEpic.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnUserPreferencesEpic.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnUserPreferencesAction.js",["985"],"import {\r\n  ACT_TY_SET_USER_PREFERENCES,\r\n  EPIC_TY_SET_USER_PREFERENCES,\r\n} from \"../SnActionConstants\"\r\nimport store from \"..\"\r\nimport { STORAGE_USER_PREFERENCES_KEY, BROWSER_STORAGE } from \"../../utils/SnConstants\"\r\n\r\n// get internally calls set from epic\r\nexport const setUserPreferencesEpic = (userPreferences) => {\r\n  if (userPreferences == null) {\r\n    BROWSER_STORAGE.removeItem(STORAGE_USER_PREFERENCES_KEY)\r\n  } else {\r\n    BROWSER_STORAGE.setItem(\r\n      STORAGE_USER_PREFERENCES_KEY,\r\n      JSON.stringify(userPreferences)\r\n    )\r\n  }\r\n  return {\r\n    type: EPIC_TY_SET_USER_PREFERENCES,\r\n    payload: userPreferences,\r\n  }\r\n}\r\n// This method is called during login and on Profile Page\r\nexport const setUserPreferencesAction = (userPreferences) => {\r\n  if (userPreferences == null) {\r\n    userPreferences = BROWSER_STORAGE.getItem(STORAGE_USER_PREFERENCES_KEY)\r\n    if (userPreferences != null) {\r\n      userPreferences = JSON.parse(userPreferences)\r\n    }\r\n  } else {\r\n    BROWSER_STORAGE.setItem(\r\n      STORAGE_USER_PREFERENCES_KEY,\r\n      JSON.stringify(userPreferences)\r\n    )\r\n  }\r\n  return {\r\n    type: ACT_TY_SET_USER_PREFERENCES,\r\n    payload: userPreferences,\r\n  }\r\n}\r\n","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnAggregatedAppStatsAction.js",[],"C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\components\\Setting\\globalPrefrences.js",["986","987","988","989","990","991","992","993","994","995","996","997","998","999","1000","1001","1002","1003"],"\r\nimport React, { createRef, useEffect, useState } from 'react'\r\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline'\r\nimport { Box, Button, makeStyles, Typography, Snackbar } from '@material-ui/core';\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { Formik } from 'formik';\r\nimport { SnSelect, SnSwitch } from '../Utils/SnFormikControlls';\r\nimport SnUpload from '../../uploadUtil/SnUpload';\r\nimport { UPLOAD_SOURCE_NEW_HOSTING_IMG } from '../../utils/SnConstants';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setLoaderDisplay } from '../../redux/action-reducers-epic/SnLoaderAction';\r\n\r\nimport * as Yup from 'yup';\r\nimport { Add, Search, GitHub, Facebook, Reddit, Twitter, Telegram } from '@material-ui/icons';\r\nimport { skylinkToUrl } from \"../../utils/SnUtility\";\r\nimport { getInitValAndValidationSchemaFromSnFormikObj } from '../../service/SnFormikUtilService';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getPreferences, setPreferences } from '../../service/SnSkappService';\r\nimport Loader from \"react-loader-spinner\";\r\nimport { setUserPreferencesAction } from \"../../redux/action-reducers-epic/SnUserPreferencesAction\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    ProfileRoot: {\r\n        // backgroundColor: '#fff',\r\n        // backgroundColor: '#2A2C34',\r\n        backgroundColor: '#12141D',\r\n        boxShadow: '0px 2px 5px #15223214',\r\n        borderRadius: 6,\r\n        padding: '50px 30px',\r\n        '@media only screen and (max-width: 575px)': {\r\n            padding: '20px 10px',\r\n        },\r\n        '& h2': {\r\n            // color: '#242F57',\r\n            color: '#fff',\r\n            marginBottom: '1rem',\r\n            '@media only screen and (max-width: 575px)': {\r\n                fontSize: 22,\r\n            },\r\n        }\r\n    },\r\n    textInfo: {\r\n        color: 'rgba(255, 255, 255, 0.5)',\r\n        fontSize: 14,\r\n        '@media only screen and (max-width: 575px)': {\r\n            fontSize: 13,\r\n        },\r\n    },\r\n    submitBtn: {\r\n        background: '#1DBF73!important',\r\n        color: '#fff',\r\n        paddingLeft: '1rem',\r\n        paddingRight: '1rem',\r\n        display: 'inlin-flex',\r\n        alignItems: 'center',\r\n        float: 'right',\r\n        minWidth: 130,\r\n        '& svg': {\r\n            fontSize: '19px',\r\n            marginRight: '5px'\r\n        },\r\n        '@media only screen and (max-width: 575px)': {\r\n            fontSize: '12px',\r\n\r\n            paddingLeft: '.5rem',\r\n            paddingRight: '.5rem',\r\n            minWidth: 70,\r\n        }\r\n    },\r\n    siteLogo: {\r\n        background: '#fff',\r\n        cursor: 'pointer',\r\n        height: 150,\r\n        width: 150,\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        border: '1px solid #D9E1EC',\r\n        borderRadius: '50%',\r\n        marginBottom: 10,\r\n        marginTop: 10,\r\n        '@media only screen and (max-width: 575px)': {\r\n            width: 75,\r\n            height: 75,\r\n            // maxWidth: 340,\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n        }\r\n    },\r\n    label: {\r\n        display: 'block',\r\n        color: '#5A607F',\r\n        marginBottom: 8,\r\n        fontSize: 18,\r\n        '@media only screen and (max-width: 575px)': {\r\n            fontSize: 16,\r\n        }\r\n    },\r\n    profilePlaceholder: {\r\n        width: 150,\r\n        height: 150,\r\n        background: '#EFF5F7',\r\n        display: 'flex',\r\n        borderRadius: '50%',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        overflow: 'hidden',\r\n        '& svg': {\r\n            fontSize: 89,\r\n            // marginTop: '2.9rem',\r\n            color: '#B4C6CC'\r\n        },\r\n        '@media only screen and (max-width: 575px)': {\r\n            width: 75,\r\n            height: 75,\r\n            '& svg': {\r\n                fontSize: 45,\r\n                // marginTop: '2.9rem',\r\n                color: '#B4C6CC'\r\n            },\r\n        }\r\n    },\r\n    btnUpload: {\r\n        backgroundColor: '#869EA6!important',\r\n        color: '#fff',\r\n        fontSize: 14,\r\n        minWidth: 150,\r\n        '@media only screen and (max-width: 575px)': {\r\n            fontSize: 12,\r\n            height: 40\r\n        },\r\n        '& svg': {\r\n            marginRight: 7\r\n        }\r\n    },\r\n    textHelper: {\r\n        fontSize: 13,\r\n        color: '#5C757D',\r\n        marginTop: 5,\r\n        '@media only screen and (max-width: 575px)': {\r\n            fontSize: 12,\r\n        },\r\n    },\r\n    form: {\r\n        marginTop: 20\r\n    },\r\n    label: {\r\n        display: 'block',\r\n        marginTop: 10,\r\n        marginBottom: 8,\r\n        fontWeight: 600,\r\n        fontSize: 14,\r\n        '@media only screen and (max-width: 575px)': {\r\n            marginTop: 0,\r\n            marginBottom: 5,\r\n        },\r\n    },\r\n    inputGuide: {\r\n        color: '#5C757D',\r\n        '@media only screen and (max-width: 575px)': {\r\n            fontSize: 12,\r\n        }\r\n    },\r\n    input: {\r\n        background: '#fff',\r\n        border: '1px solid #D9E1EC',\r\n        borderRadius: 8,\r\n        height: 55,\r\n        width: '100%',\r\n        fontSize: 18,\r\n        padding: 20,\r\n        '@media only screen and (max-width: 1440px)': {\r\n            height: 50,\r\n            // width: '100%',\r\n            fontSize: 16,\r\n            padding: 15,\r\n        },\r\n        '@media only screen and (max-width: 575px)': {\r\n            height: 43,\r\n            // width: '100%',\r\n            fontSize: '14px !important',\r\n            padding: 10,\r\n        }\r\n\r\n    },\r\n    inputContainer: {\r\n        '& > label': {\r\n            display: 'block',\r\n            color: '#5A607F',\r\n            marginBottom: 7\r\n        },\r\n        '& input:focus, & select:focus': {\r\n            outline: 'none!important',\r\n            border: '1px solid #1DBF73'\r\n        },\r\n        marginTop: '25px',\r\n        '&': {\r\n            marginRight: '1rem'\r\n        },\r\n        '& input, & input': {\r\n            fontSize: 18,\r\n            color: '#2A2C34'\r\n        },\r\n        '@media only screen and (max-width: 575px)': {\r\n            marginTop: '16px',\r\n            marginRight: '10px'\r\n\r\n\r\n        },\r\n\r\n    },\r\n    firstInput: {\r\n        marginTop: 5,\r\n        '@media only screen and (max-width: 575px)': {\r\n            marginBottom: 10\r\n        },\r\n    }\r\n}))\r\n\r\nconst portalOptions = [\r\n    { value: 'https://siasky.net/', label: 'https://siasky.net/' },\r\n    { value: 'https://skyportal.xyz', label: 'https://skyportal.xyz' }\r\n]\r\nconst GlobalPrefrences = () => {\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [isSuccess, setIsSuccess] = useState(false);\r\n    const [isError, setIsError] = useState(false);\r\n\r\n    const classes = useStyles();\r\n    const userPreferences = useSelector((state) => state.snUserPreferences)\r\n    const dispatch = useDispatch();\r\n    let formikObjGP = {\r\n        darkmode: [false],\r\n        portal: ['']\r\n    };\r\n\r\n    useEffect(() => {\r\n        setPreferencesFormicOb(userPreferences);\r\n    }, []);\r\n\r\n    const submitGlobalPreferencesForm = async (values) => {\r\n        dispatch(setLoaderDisplay(true));\r\n        await setPreferences(values);\r\n        dispatch(setUserPreferencesAction(values))\r\n        setIsSuccess(true);\r\n        dispatch(setLoaderDisplay(false));\r\n    };\r\n\r\n    const setPreferencesFormicOb = (profile) => {\r\n        //console.log(profile);\r\n        if (profile) {\r\n            formikObjGP.darkmode[0] = `${profile?.darkmode}`;\r\n            formikObjGP.portal[0] = `${profile?.portal}`;\r\n        }\r\n    }\r\n    return (\r\n\r\n        <div className={classes.ProfileRoot}>\r\n            <Box>\r\n\r\n                {isSuccess && <Snackbar anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }} open={isSuccess} autoHideDuration={6000}>\r\n                    <Alert severity=\"success\">\r\n                        Profile Successfully Saved!\r\n                    </Alert>\r\n                </Snackbar>\r\n                }\r\n                {isError && <Snackbar anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }} open={isError} autoHideDuration={6000}>\r\n                    <Alert severity=\"error\">\r\n                        Error Occurred while saving profile!\r\n                    </Alert>\r\n                </Snackbar>\r\n                }\r\n                {\r\n                    !isLoading ?\r\n                        <Formik\r\n                            initialValues={getInitValAndValidationSchemaFromSnFormikObj(formikObjGP).initialValues}\r\n                            validationSchema={Yup.object(getInitValAndValidationSchemaFromSnFormikObj(formikObjGP).validationSchema)}\r\n                            validateOnChange={true}\r\n                            validateOnBlur={true}\r\n                            onSubmit={submitGlobalPreferencesForm}>\r\n                            {formik => (<form onSubmit={formik.handleSubmit}>\r\n                                <h2>General Prefrences  <Button className={classes.submitBtn} onClick={formik.handleSubmit}><Add /> Save Changes </Button>\r\n                                </h2>\r\n                                <Typography className={classes.textInfo}>\r\n                                    This information can be edited from your general prefrences page.\r\n                                </Typography>\r\n                                <Box display='flex' className={`${classes.formRow} formSiteRow`}>\r\n                                    <Box className={`${classes.inputContainer}`} flex={1}>\r\n                                        <SnSwitch\r\n                                            label=\"Dark Mode\"\r\n                                            name=\"darkmode\"\r\n                                        />\r\n                                    </Box>\r\n                                    <Box className={`${classes.inputContainer}`} flex={1}>\r\n                                        <label>Skynet Portal</label>\r\n                                        <Box>\r\n                                            <SnSelect\r\n                                                label=\"Skynet Portal\"\r\n                                                name=\"portal\"\r\n                                                options={portalOptions}\r\n                                            />\r\n                                        </Box>\r\n                                    </Box>\r\n                                </Box>\r\n                            </form>)}\r\n                        </Formik>\r\n                        : null\r\n                }\r\n            </Box >\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GlobalPrefrences;\r\n","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\redux\\action-reducers-epic\\SnUserProfileAction.js",["1004"],"import {\r\n  ACT_TY_SET_USER_PROFILE,\r\n  EPIC_TY_SET_USER_PROFILE\r\n} from \"../SnActionConstants\"\r\nimport store from \"..\"\r\nimport { STORAGE_USER_APP_PROFILE_KEY, BROWSER_STORAGE } from \"../../utils/SnConstants\"\r\n\r\n// get internally calls set from epic\r\nexport const setUserProfileEpic = (userAppProfile) => {\r\n  if (userAppProfile == null) {\r\n    BROWSER_STORAGE.removeItem(STORAGE_USER_APP_PROFILE_KEY)\r\n  } else {\r\n    BROWSER_STORAGE.setItem(STORAGE_USER_APP_PROFILE_KEY,JSON.stringify(userAppProfile))\r\n  }\r\n  return {\r\n    type: EPIC_TY_SET_USER_PROFILE,\r\n    payload: userAppProfile,\r\n  }\r\n}\r\n// This method is called during login and on Profile Page\r\nexport const setUserProfileAction = (userAppProfile) => {\r\n  console.log(\"setUserProfileAction 1\");\r\n  if (userAppProfile == null) {\r\n    userAppProfile = BROWSER_STORAGE.getItem(STORAGE_USER_APP_PROFILE_KEY)\r\n    console.log(\"setUserProfileAction 2\"+userAppProfile);\r\n    if (userAppProfile != null) {\r\n      console.log(\"setUserProfileAction 3\");\r\n      userAppProfile = JSON.parse(userAppProfile)\r\n    }\r\n    \r\n  } else {\r\n    BROWSER_STORAGE.setItem(STORAGE_USER_APP_PROFILE_KEY,JSON.stringify(userAppProfile))\r\n  }\r\n  return {\r\n    type: ACT_TY_SET_USER_PROFILE,\r\n    payload: userAppProfile,\r\n  }\r\n}","C:\\Users\\Usama_Sadiq\\Documents\\React App\\2\\skapp-private\\src\\service\\dac\\userprofile-api.js",[],{"ruleId":"1005","replacedBy":"1006"},{"ruleId":"1007","replacedBy":"1008"},{"ruleId":"1009","severity":1,"message":"1010","line":26,"column":6,"nodeType":"1011","endLine":26,"endColumn":8,"suggestions":"1012"},{"ruleId":"1013","severity":1,"message":"1014","line":8,"column":8,"nodeType":"1015","messageId":"1016","endLine":8,"endColumn":21},{"ruleId":"1013","severity":1,"message":"1017","line":22,"column":5,"nodeType":"1015","messageId":"1016","endLine":22,"endColumn":13},{"ruleId":"1013","severity":1,"message":"1018","line":24,"column":10,"nodeType":"1015","messageId":"1016","endLine":24,"endColumn":41},{"ruleId":"1013","severity":1,"message":"1019","line":12,"column":8,"nodeType":"1015","messageId":"1016","endLine":12,"endColumn":25},{"ruleId":"1013","severity":1,"message":"1020","line":13,"column":26,"nodeType":"1015","messageId":"1016","endLine":13,"endColumn":39},{"ruleId":"1013","severity":1,"message":"1021","line":27,"column":28,"nodeType":"1015","messageId":"1016","endLine":27,"endColumn":40},{"ruleId":"1013","severity":1,"message":"1022","line":251,"column":11,"nodeType":"1015","messageId":"1016","endLine":251,"endColumn":21},{"ruleId":"1013","severity":1,"message":"1023","line":257,"column":11,"nodeType":"1015","messageId":"1016","endLine":257,"endColumn":20},{"ruleId":"1009","severity":1,"message":"1024","line":306,"column":8,"nodeType":"1011","endLine":306,"endColumn":10,"suggestions":"1025"},{"ruleId":"1013","severity":1,"message":"1026","line":40,"column":9,"nodeType":"1015","messageId":"1016","endLine":40,"endColumn":20},{"ruleId":"1027","severity":1,"message":"1028","line":3,"column":1,"nodeType":"1029","endLine":10,"endColumn":2},{"ruleId":"1027","severity":1,"message":"1028","line":3,"column":1,"nodeType":"1029","endLine":10,"endColumn":2},{"ruleId":"1027","severity":1,"message":"1028","line":4,"column":1,"nodeType":"1029","endLine":14,"endColumn":2},{"ruleId":"1013","severity":1,"message":"1030","line":1,"column":40,"nodeType":"1015","messageId":"1016","endLine":1,"endColumn":63},{"ruleId":"1027","severity":1,"message":"1028","line":3,"column":1,"nodeType":"1029","endLine":11,"endColumn":2},{"ruleId":"1027","severity":1,"message":"1028","line":5,"column":1,"nodeType":"1029","endLine":12,"endColumn":2},{"ruleId":"1027","severity":1,"message":"1028","line":6,"column":1,"nodeType":"1029","endLine":15,"endColumn":2},{"ruleId":"1027","severity":1,"message":"1028","line":3,"column":1,"nodeType":"1029","endLine":10,"endColumn":2},{"ruleId":"1013","severity":1,"message":"1031","line":8,"column":8,"nodeType":"1015","messageId":"1016","endLine":8,"endColumn":13},{"ruleId":"1032","severity":1,"message":"1033","line":11,"column":12,"nodeType":"1034","messageId":"1035","endLine":11,"endColumn":13,"fix":"1036"},{"ruleId":"1013","severity":1,"message":"1037","line":1,"column":9,"nodeType":"1015","messageId":"1016","endLine":1,"endColumn":34},{"ruleId":"1027","severity":1,"message":"1028","line":5,"column":1,"nodeType":"1029","endLine":12,"endColumn":2},{"ruleId":"1032","severity":1,"message":"1033","line":13,"column":12,"nodeType":"1034","messageId":"1035","endLine":13,"endColumn":13,"fix":"1038"},{"ruleId":"1027","severity":1,"message":"1028","line":3,"column":1,"nodeType":"1029","endLine":10,"endColumn":2},{"ruleId":"1027","severity":1,"message":"1028","line":4,"column":1,"nodeType":"1029","endLine":11,"endColumn":2},{"ruleId":"1032","severity":1,"message":"1033","line":14,"column":12,"nodeType":"1034","messageId":"1035","endLine":14,"endColumn":13,"fix":"1039"},{"ruleId":"1032","severity":1,"message":"1033","line":32,"column":12,"nodeType":"1034","messageId":"1035","endLine":32,"endColumn":13,"fix":"1040"},{"ruleId":"1013","severity":1,"message":"1041","line":7,"column":30,"nodeType":"1015","messageId":"1016","endLine":7,"endColumn":61},{"ruleId":"1032","severity":1,"message":"1033","line":14,"column":12,"nodeType":"1034","messageId":"1035","endLine":14,"endColumn":13,"fix":"1042"},{"ruleId":"1032","severity":1,"message":"1033","line":30,"column":12,"nodeType":"1034","messageId":"1035","endLine":30,"endColumn":13,"fix":"1043"},{"ruleId":"1032","severity":1,"message":"1033","line":46,"column":12,"nodeType":"1034","messageId":"1035","endLine":46,"endColumn":13,"fix":"1044"},{"ruleId":"1032","severity":1,"message":"1033","line":14,"column":12,"nodeType":"1034","messageId":"1035","endLine":14,"endColumn":13,"fix":"1045"},{"ruleId":"1032","severity":1,"message":"1033","line":30,"column":12,"nodeType":"1034","messageId":"1035","endLine":30,"endColumn":13,"fix":"1046"},{"ruleId":"1013","severity":1,"message":"1047","line":1,"column":37,"nodeType":"1015","messageId":"1016","endLine":1,"endColumn":46},{"ruleId":"1013","severity":1,"message":"1048","line":6,"column":8,"nodeType":"1015","messageId":"1016","endLine":6,"endColumn":17},{"ruleId":"1013","severity":1,"message":"1049","line":15,"column":8,"nodeType":"1015","messageId":"1016","endLine":15,"endColumn":18},{"ruleId":"1013","severity":1,"message":"1021","line":24,"column":28,"nodeType":"1015","messageId":"1016","endLine":24,"endColumn":40},{"ruleId":"1013","severity":1,"message":"1050","line":34,"column":10,"nodeType":"1015","messageId":"1016","endLine":34,"endColumn":21},{"ruleId":"1013","severity":1,"message":"1051","line":2,"column":3,"nodeType":"1015","messageId":"1016","endLine":2,"endColumn":18},{"ruleId":"1013","severity":1,"message":"1052","line":6,"column":8,"nodeType":"1015","messageId":"1016","endLine":6,"endColumn":21},{"ruleId":"1013","severity":1,"message":"1053","line":7,"column":8,"nodeType":"1015","messageId":"1016","endLine":7,"endColumn":18},{"ruleId":"1013","severity":1,"message":"1054","line":13,"column":8,"nodeType":"1015","messageId":"1016","endLine":13,"endColumn":24},{"ruleId":"1013","severity":1,"message":"1055","line":18,"column":10,"nodeType":"1015","messageId":"1016","endLine":18,"endColumn":20},{"ruleId":"1013","severity":1,"message":"1056","line":19,"column":10,"nodeType":"1015","messageId":"1016","endLine":19,"endColumn":26},{"ruleId":"1009","severity":1,"message":"1057","line":158,"column":13,"nodeType":"1058","endLine":164,"endColumn":4},{"ruleId":"1009","severity":1,"message":"1010","line":164,"column":6,"nodeType":"1011","endLine":164,"endColumn":8,"suggestions":"1059"},{"ruleId":"1060","severity":1,"message":"1061","line":173,"column":13,"nodeType":"1062","messageId":"1063","endLine":173,"endColumn":15},{"ruleId":"1013","severity":1,"message":"1064","line":1,"column":15,"nodeType":"1015","messageId":"1016","endLine":1,"endColumn":21},{"ruleId":"1013","severity":1,"message":"1065","line":1,"column":23,"nodeType":"1015","messageId":"1016","endLine":1,"endColumn":27},{"ruleId":"1013","severity":1,"message":"1053","line":6,"column":8,"nodeType":"1015","messageId":"1016","endLine":6,"endColumn":18},{"ruleId":"1013","severity":1,"message":"1066","line":7,"column":8,"nodeType":"1015","messageId":"1016","endLine":7,"endColumn":18},{"ruleId":"1013","severity":1,"message":"1067","line":10,"column":8,"nodeType":"1015","messageId":"1016","endLine":10,"endColumn":15},{"ruleId":"1013","severity":1,"message":"1068","line":12,"column":10,"nodeType":"1015","messageId":"1016","endLine":12,"endColumn":28},{"ruleId":"1013","severity":1,"message":"1055","line":12,"column":30,"nodeType":"1015","messageId":"1016","endLine":12,"endColumn":40},{"ruleId":"1013","severity":1,"message":"1056","line":13,"column":10,"nodeType":"1015","messageId":"1016","endLine":13,"endColumn":26},{"ruleId":"1013","severity":1,"message":"1069","line":161,"column":12,"nodeType":"1015","messageId":"1016","endLine":161,"endColumn":31},{"ruleId":"1013","severity":1,"message":"1070","line":161,"column":33,"nodeType":"1015","messageId":"1016","endLine":161,"endColumn":55},{"ruleId":"1009","severity":1,"message":"1010","line":170,"column":8,"nodeType":"1011","endLine":170,"endColumn":10,"suggestions":"1071"},{"ruleId":"1060","severity":1,"message":"1061","line":173,"column":17,"nodeType":"1062","messageId":"1063","endLine":173,"endColumn":19},{"ruleId":"1013","severity":1,"message":"1066","line":7,"column":8,"nodeType":"1015","messageId":"1016","endLine":7,"endColumn":18},{"ruleId":"1013","severity":1,"message":"1072","line":8,"column":8,"nodeType":"1015","messageId":"1016","endLine":8,"endColumn":17},{"ruleId":"1013","severity":1,"message":"1073","line":11,"column":8,"nodeType":"1015","messageId":"1016","endLine":11,"endColumn":19},{"ruleId":"1009","severity":1,"message":"1057","line":220,"column":15,"nodeType":"1058","endLine":230,"endColumn":6},{"ruleId":"1009","severity":1,"message":"1074","line":230,"column":8,"nodeType":"1011","endLine":230,"endColumn":10,"suggestions":"1075"},{"ruleId":"1013","severity":1,"message":"1076","line":258,"column":5,"nodeType":"1015","messageId":"1016","endLine":258,"endColumn":18},{"ruleId":"1060","severity":1,"message":"1061","line":265,"column":21,"nodeType":"1062","messageId":"1063","endLine":265,"endColumn":23},{"ruleId":"1060","severity":1,"message":"1061","line":271,"column":21,"nodeType":"1062","messageId":"1063","endLine":271,"endColumn":23},{"ruleId":"1060","severity":1,"message":"1061","line":357,"column":34,"nodeType":"1062","messageId":"1063","endLine":357,"endColumn":36},{"ruleId":"1060","severity":1,"message":"1061","line":366,"column":72,"nodeType":"1062","messageId":"1063","endLine":366,"endColumn":74},{"ruleId":"1060","severity":1,"message":"1061","line":382,"column":72,"nodeType":"1062","messageId":"1063","endLine":382,"endColumn":74},{"ruleId":"1013","severity":1,"message":"1077","line":406,"column":12,"nodeType":"1015","messageId":"1016","endLine":406,"endColumn":22},{"ruleId":"1078","severity":1,"message":"1079","line":436,"column":5,"nodeType":"1080","messageId":"1081","endLine":436,"endColumn":102},{"ruleId":"1013","severity":1,"message":"1082","line":215,"column":12,"nodeType":"1015","messageId":"1016","endLine":215,"endColumn":37},{"ruleId":"1009","severity":1,"message":"1083","line":219,"column":8,"nodeType":"1011","endLine":219,"endColumn":10,"suggestions":"1084"},{"ruleId":"1013","severity":1,"message":"1085","line":3,"column":10,"nodeType":"1015","messageId":"1016","endLine":3,"endColumn":14},{"ruleId":"1013","severity":1,"message":"1086","line":6,"column":10,"nodeType":"1015","messageId":"1016","endLine":6,"endColumn":28},{"ruleId":"1013","severity":1,"message":"1087","line":14,"column":11,"nodeType":"1015","messageId":"1016","endLine":14,"endColumn":24},{"ruleId":"1013","severity":1,"message":"1088","line":15,"column":19,"nodeType":"1015","messageId":"1016","endLine":15,"endColumn":29},{"ruleId":"1013","severity":1,"message":"1089","line":25,"column":3,"nodeType":"1015","messageId":"1016","endLine":25,"endColumn":16},{"ruleId":"1013","severity":1,"message":"1090","line":26,"column":3,"nodeType":"1015","messageId":"1016","endLine":26,"endColumn":18},{"ruleId":"1013","severity":1,"message":"1091","line":35,"column":10,"nodeType":"1015","messageId":"1016","endLine":35,"endColumn":33},{"ruleId":"1013","severity":1,"message":"1092","line":38,"column":32,"nodeType":"1015","messageId":"1016","endLine":38,"endColumn":57},{"ruleId":"1013","severity":1,"message":"1093","line":42,"column":7,"nodeType":"1015","messageId":"1016","endLine":42,"endColumn":21},{"ruleId":"1009","severity":1,"message":"1057","line":173,"column":13,"nodeType":"1058","endLine":224,"endColumn":4},{"ruleId":"1009","severity":1,"message":"1094","line":224,"column":6,"nodeType":"1011","endLine":224,"endColumn":8,"suggestions":"1095"},{"ruleId":"1060","severity":1,"message":"1061","line":234,"column":66,"nodeType":"1062","messageId":"1063","endLine":234,"endColumn":68},{"ruleId":"1013","severity":1,"message":"1096","line":304,"column":10,"nodeType":"1015","messageId":"1016","endLine":304,"endColumn":25},{"ruleId":"1013","severity":1,"message":"1097","line":326,"column":9,"nodeType":"1015","messageId":"1016","endLine":326,"endColumn":33},{"ruleId":"1013","severity":1,"message":"1098","line":360,"column":9,"nodeType":"1015","messageId":"1016","endLine":360,"endColumn":33},{"ruleId":"1013","severity":1,"message":"1099","line":4,"column":8,"nodeType":"1015","messageId":"1016","endLine":4,"endColumn":14},{"ruleId":"1013","severity":1,"message":"1100","line":5,"column":10,"nodeType":"1015","messageId":"1016","endLine":5,"endColumn":15},{"ruleId":"1013","severity":1,"message":"1101","line":5,"column":25,"nodeType":"1015","messageId":"1016","endLine":5,"endColumn":34},{"ruleId":"1013","severity":1,"message":"1102","line":6,"column":8,"nodeType":"1015","messageId":"1016","endLine":6,"endColumn":20},{"ruleId":"1013","severity":1,"message":"1103","line":7,"column":8,"nodeType":"1015","messageId":"1016","endLine":7,"endColumn":23},{"ruleId":"1013","severity":1,"message":"1104","line":10,"column":8,"nodeType":"1015","messageId":"1016","endLine":10,"endColumn":14},{"ruleId":"1013","severity":1,"message":"1105","line":14,"column":28,"nodeType":"1015","messageId":"1016","endLine":14,"endColumn":36},{"ruleId":"1013","severity":1,"message":"1106","line":22,"column":10,"nodeType":"1015","messageId":"1016","endLine":22,"endColumn":30},{"ruleId":"1013","severity":1,"message":"1107","line":34,"column":7,"nodeType":"1015","messageId":"1016","endLine":34,"endColumn":21},{"ruleId":"1013","severity":1,"message":"1108","line":39,"column":7,"nodeType":"1015","messageId":"1016","endLine":39,"endColumn":17},{"ruleId":"1013","severity":1,"message":"1109","line":44,"column":7,"nodeType":"1015","messageId":"1016","endLine":44,"endColumn":19},{"ruleId":"1013","severity":1,"message":"1110","line":52,"column":7,"nodeType":"1015","messageId":"1016","endLine":52,"endColumn":24},{"ruleId":"1013","severity":1,"message":"1111","line":92,"column":12,"nodeType":"1015","messageId":"1016","endLine":92,"endColumn":26},{"ruleId":"1013","severity":1,"message":"1112","line":92,"column":28,"nodeType":"1015","messageId":"1016","endLine":92,"endColumn":45},{"ruleId":"1013","severity":1,"message":"1082","line":108,"column":12,"nodeType":"1015","messageId":"1016","endLine":108,"endColumn":37},{"ruleId":"1009","severity":1,"message":"1113","line":121,"column":8,"nodeType":"1011","endLine":121,"endColumn":10,"suggestions":"1114"},{"ruleId":"1060","severity":1,"message":"1115","line":152,"column":23,"nodeType":"1062","messageId":"1063","endLine":152,"endColumn":25},{"ruleId":"1013","severity":1,"message":"1116","line":200,"column":11,"nodeType":"1015","messageId":"1016","endLine":200,"endColumn":26},{"ruleId":"1013","severity":1,"message":"1104","line":9,"column":8,"nodeType":"1015","messageId":"1016","endLine":9,"endColumn":14},{"ruleId":"1013","severity":1,"message":"1117","line":11,"column":10,"nodeType":"1015","messageId":"1016","endLine":11,"endColumn":30},{"ruleId":"1009","severity":1,"message":"1010","line":15,"column":6,"nodeType":"1011","endLine":15,"endColumn":8,"suggestions":"1118"},{"ruleId":"1013","severity":1,"message":"1089","line":26,"column":3,"nodeType":"1015","messageId":"1016","endLine":26,"endColumn":16},{"ruleId":"1013","severity":1,"message":"1090","line":27,"column":3,"nodeType":"1015","messageId":"1016","endLine":27,"endColumn":18},{"ruleId":"1013","severity":1,"message":"1119","line":34,"column":10,"nodeType":"1015","messageId":"1016","endLine":34,"endColumn":19},{"ruleId":"1013","severity":1,"message":"1092","line":39,"column":32,"nodeType":"1015","messageId":"1016","endLine":39,"endColumn":57},{"ruleId":"1013","severity":1,"message":"1093","line":46,"column":7,"nodeType":"1015","messageId":"1016","endLine":46,"endColumn":21},{"ruleId":"1013","severity":1,"message":"1120","line":124,"column":10,"nodeType":"1015","messageId":"1016","endLine":124,"endColumn":16},{"ruleId":"1013","severity":1,"message":"1121","line":124,"column":18,"nodeType":"1015","messageId":"1016","endLine":124,"endColumn":28},{"ruleId":"1013","severity":1,"message":"1122","line":133,"column":21,"nodeType":"1015","messageId":"1016","endLine":133,"endColumn":33},{"ruleId":"1009","severity":1,"message":"1123","line":184,"column":6,"nodeType":"1011","endLine":184,"endColumn":17,"suggestions":"1124"},{"ruleId":"1013","severity":1,"message":"1125","line":227,"column":9,"nodeType":"1015","messageId":"1016","endLine":227,"endColumn":27},{"ruleId":"1060","severity":1,"message":"1061","line":235,"column":66,"nodeType":"1062","messageId":"1063","endLine":235,"endColumn":68},{"ruleId":"1013","severity":1,"message":"1096","line":305,"column":10,"nodeType":"1015","messageId":"1016","endLine":305,"endColumn":25},{"ruleId":"1013","severity":1,"message":"1097","line":327,"column":9,"nodeType":"1015","messageId":"1016","endLine":327,"endColumn":33},{"ruleId":"1013","severity":1,"message":"1098","line":361,"column":9,"nodeType":"1015","messageId":"1016","endLine":361,"endColumn":33},{"ruleId":"1013","severity":1,"message":"1126","line":411,"column":9,"nodeType":"1015","messageId":"1016","endLine":411,"endColumn":24},{"ruleId":"1013","severity":1,"message":"1127","line":416,"column":9,"nodeType":"1015","messageId":"1016","endLine":416,"endColumn":26},{"ruleId":"1013","severity":1,"message":"1128","line":420,"column":9,"nodeType":"1015","messageId":"1016","endLine":420,"endColumn":27},{"ruleId":"1013","severity":1,"message":"1047","line":1,"column":27,"nodeType":"1015","messageId":"1016","endLine":1,"endColumn":36},{"ruleId":"1013","severity":1,"message":"1129","line":1,"column":38,"nodeType":"1015","messageId":"1016","endLine":1,"endColumn":46},{"ruleId":"1013","severity":1,"message":"1064","line":8,"column":10,"nodeType":"1015","messageId":"1016","endLine":8,"endColumn":16},{"ruleId":"1013","severity":1,"message":"1130","line":8,"column":18,"nodeType":"1015","messageId":"1016","endLine":8,"endColumn":26},{"ruleId":"1013","severity":1,"message":"1131","line":9,"column":8,"nodeType":"1015","messageId":"1016","endLine":9,"endColumn":13},{"ruleId":"1013","severity":1,"message":"1132","line":14,"column":10,"nodeType":"1015","messageId":"1016","endLine":14,"endColumn":21},{"ruleId":"1013","severity":1,"message":"1050","line":14,"column":23,"nodeType":"1015","messageId":"1016","endLine":14,"endColumn":34},{"ruleId":"1013","severity":1,"message":"1056","line":15,"column":10,"nodeType":"1015","messageId":"1016","endLine":15,"endColumn":26},{"ruleId":"1013","severity":1,"message":"1133","line":17,"column":13,"nodeType":"1015","messageId":"1016","endLine":17,"endColumn":16},{"ruleId":"1134","severity":1,"message":"1135","line":55,"column":9,"nodeType":"1136","messageId":"1063","endLine":55,"endColumn":24},{"ruleId":"1013","severity":1,"message":"1099","line":4,"column":8,"nodeType":"1015","messageId":"1016","endLine":4,"endColumn":14},{"ruleId":"1013","severity":1,"message":"1100","line":5,"column":10,"nodeType":"1015","messageId":"1016","endLine":5,"endColumn":15},{"ruleId":"1013","severity":1,"message":"1101","line":5,"column":25,"nodeType":"1015","messageId":"1016","endLine":5,"endColumn":34},{"ruleId":"1013","severity":1,"message":"1102","line":6,"column":8,"nodeType":"1015","messageId":"1016","endLine":6,"endColumn":20},{"ruleId":"1013","severity":1,"message":"1104","line":10,"column":8,"nodeType":"1015","messageId":"1016","endLine":10,"endColumn":14},{"ruleId":"1013","severity":1,"message":"1105","line":14,"column":28,"nodeType":"1015","messageId":"1016","endLine":14,"endColumn":36},{"ruleId":"1013","severity":1,"message":"1106","line":22,"column":10,"nodeType":"1015","messageId":"1016","endLine":22,"endColumn":30},{"ruleId":"1013","severity":1,"message":"1107","line":32,"column":7,"nodeType":"1015","messageId":"1016","endLine":32,"endColumn":21},{"ruleId":"1013","severity":1,"message":"1108","line":37,"column":7,"nodeType":"1015","messageId":"1016","endLine":37,"endColumn":17},{"ruleId":"1013","severity":1,"message":"1109","line":42,"column":7,"nodeType":"1015","messageId":"1016","endLine":42,"endColumn":19},{"ruleId":"1013","severity":1,"message":"1110","line":50,"column":7,"nodeType":"1015","messageId":"1016","endLine":50,"endColumn":24},{"ruleId":"1013","severity":1,"message":"1111","line":90,"column":12,"nodeType":"1015","messageId":"1016","endLine":90,"endColumn":26},{"ruleId":"1013","severity":1,"message":"1112","line":90,"column":28,"nodeType":"1015","messageId":"1016","endLine":90,"endColumn":45},{"ruleId":"1013","severity":1,"message":"1082","line":106,"column":12,"nodeType":"1015","messageId":"1016","endLine":106,"endColumn":37},{"ruleId":"1009","severity":1,"message":"1137","line":114,"column":8,"nodeType":"1011","endLine":114,"endColumn":10,"suggestions":"1138"},{"ruleId":"1013","severity":1,"message":"1116","line":172,"column":11,"nodeType":"1015","messageId":"1016","endLine":172,"endColumn":26},{"ruleId":"1013","severity":1,"message":"1139","line":4,"column":10,"nodeType":"1015","messageId":"1016","endLine":4,"endColumn":15},{"ruleId":"1013","severity":1,"message":"1140","line":4,"column":17,"nodeType":"1015","messageId":"1016","endLine":4,"endColumn":27},{"ruleId":"1013","severity":1,"message":"1065","line":4,"column":29,"nodeType":"1015","messageId":"1016","endLine":4,"endColumn":33},{"ruleId":"1013","severity":1,"message":"1085","line":4,"column":35,"nodeType":"1015","messageId":"1016","endLine":4,"endColumn":39},{"ruleId":"1013","severity":1,"message":"1141","line":4,"column":41,"nodeType":"1015","messageId":"1016","endLine":4,"endColumn":51},{"ruleId":"1013","severity":1,"message":"1142","line":7,"column":8,"nodeType":"1015","messageId":"1016","endLine":7,"endColumn":20},{"ruleId":"1013","severity":1,"message":"1143","line":14,"column":10,"nodeType":"1015","messageId":"1016","endLine":14,"endColumn":30},{"ruleId":"1013","severity":1,"message":"1144","line":15,"column":10,"nodeType":"1015","messageId":"1016","endLine":15,"endColumn":31},{"ruleId":"1013","severity":1,"message":"1145","line":69,"column":12,"nodeType":"1015","messageId":"1016","endLine":69,"endColumn":18},{"ruleId":"1013","severity":1,"message":"1146","line":69,"column":20,"nodeType":"1015","messageId":"1016","endLine":69,"endColumn":29},{"ruleId":"1009","severity":1,"message":"1147","line":82,"column":8,"nodeType":"1011","endLine":82,"endColumn":21,"suggestions":"1148"},{"ruleId":"1013","severity":1,"message":"1149","line":14,"column":15,"nodeType":"1015","messageId":"1016","endLine":14,"endColumn":21},{"ruleId":"1013","severity":1,"message":"1150","line":18,"column":10,"nodeType":"1015","messageId":"1016","endLine":18,"endColumn":20},{"ruleId":"1134","severity":1,"message":"1151","line":148,"column":5,"nodeType":"1136","messageId":"1063","endLine":148,"endColumn":10},{"ruleId":"1013","severity":1,"message":"1152","line":244,"column":12,"nodeType":"1015","messageId":"1016","endLine":244,"endColumn":21},{"ruleId":"1013","severity":1,"message":"1153","line":244,"column":23,"nodeType":"1015","messageId":"1016","endLine":244,"endColumn":35},{"ruleId":"1013","severity":1,"message":"1154","line":246,"column":21,"nodeType":"1015","messageId":"1016","endLine":246,"endColumn":31},{"ruleId":"1013","severity":1,"message":"1155","line":251,"column":9,"nodeType":"1015","messageId":"1016","endLine":251,"endColumn":16},{"ruleId":"1009","severity":1,"message":"1156","line":273,"column":8,"nodeType":"1011","endLine":273,"endColumn":21,"suggestions":"1157"},{"ruleId":"1060","severity":1,"message":"1061","line":364,"column":98,"nodeType":"1062","messageId":"1063","endLine":364,"endColumn":100},{"ruleId":"1013","severity":1,"message":"1158","line":3,"column":26,"nodeType":"1015","messageId":"1016","endLine":3,"endColumn":33},{"ruleId":"1013","severity":1,"message":"1159","line":6,"column":5,"nodeType":"1015","messageId":"1016","endLine":6,"endColumn":19},{"ruleId":"1013","severity":1,"message":"1160","line":9,"column":5,"nodeType":"1015","messageId":"1016","endLine":9,"endColumn":26},{"ruleId":"1013","severity":1,"message":"1161","line":12,"column":10,"nodeType":"1015","messageId":"1016","endLine":12,"endColumn":24},{"ruleId":"1060","severity":1,"message":"1061","line":181,"column":34,"nodeType":"1062","messageId":"1063","endLine":181,"endColumn":36},{"ruleId":"1013","severity":1,"message":"1162","line":185,"column":13,"nodeType":"1015","messageId":"1016","endLine":185,"endColumn":19},{"ruleId":"1060","severity":1,"message":"1061","line":187,"column":30,"nodeType":"1062","messageId":"1063","endLine":187,"endColumn":32},{"ruleId":"1013","severity":1,"message":"1163","line":192,"column":19,"nodeType":"1015","messageId":"1016","endLine":192,"endColumn":25},{"ruleId":"1013","severity":1,"message":"1051","line":2,"column":3,"nodeType":"1015","messageId":"1016","endLine":2,"endColumn":18},{"ruleId":"1013","severity":1,"message":"1164","line":15,"column":3,"nodeType":"1015","messageId":"1016","endLine":15,"endColumn":20},{"ruleId":"1013","severity":1,"message":"1165","line":16,"column":3,"nodeType":"1015","messageId":"1016","endLine":16,"endColumn":19},{"ruleId":"1013","severity":1,"message":"1166","line":32,"column":63,"nodeType":"1015","messageId":"1016","endLine":32,"endColumn":79},{"ruleId":"1013","severity":1,"message":"1167","line":32,"column":81,"nodeType":"1015","messageId":"1016","endLine":32,"endColumn":88},{"ruleId":"1013","severity":1,"message":"1168","line":33,"column":66,"nodeType":"1015","messageId":"1016","endLine":33,"endColumn":76},{"ruleId":"1013","severity":1,"message":"1169","line":33,"column":93,"nodeType":"1015","messageId":"1016","endLine":33,"endColumn":107},{"ruleId":"1013","severity":1,"message":"1170","line":34,"column":10,"nodeType":"1015","messageId":"1016","endLine":34,"endColumn":38},{"ruleId":"1013","severity":1,"message":"1086","line":35,"column":10,"nodeType":"1015","messageId":"1016","endLine":35,"endColumn":28},{"ruleId":"1013","severity":1,"message":"1171","line":271,"column":7,"nodeType":"1015","messageId":"1016","endLine":271,"endColumn":16},{"ruleId":"1060","severity":1,"message":"1115","line":375,"column":16,"nodeType":"1062","messageId":"1063","endLine":375,"endColumn":18},{"ruleId":"1060","severity":1,"message":"1115","line":449,"column":16,"nodeType":"1062","messageId":"1063","endLine":449,"endColumn":18},{"ruleId":"1013","severity":1,"message":"1162","line":652,"column":11,"nodeType":"1015","messageId":"1016","endLine":652,"endColumn":17},{"ruleId":"1060","severity":1,"message":"1115","line":816,"column":38,"nodeType":"1062","messageId":"1063","endLine":816,"endColumn":40},{"ruleId":"1013","severity":1,"message":"1031","line":5,"column":8,"nodeType":"1015","messageId":"1016","endLine":5,"endColumn":13},{"ruleId":"1013","severity":1,"message":"1172","line":53,"column":7,"nodeType":"1015","messageId":"1016","endLine":53,"endColumn":27},{"ruleId":"1013","severity":1,"message":"1173","line":95,"column":7,"nodeType":"1015","messageId":"1016","endLine":95,"endColumn":19},{"ruleId":"1013","severity":1,"message":"1174","line":2,"column":10,"nodeType":"1015","messageId":"1016","endLine":2,"endColumn":16},{"ruleId":"1013","severity":1,"message":"1175","line":2,"column":18,"nodeType":"1015","messageId":"1016","endLine":2,"endColumn":22},{"ruleId":"1013","severity":1,"message":"1176","line":226,"column":11,"nodeType":"1015","messageId":"1016","endLine":226,"endColumn":18},{"ruleId":"1013","severity":1,"message":"1177","line":226,"column":20,"nodeType":"1015","messageId":"1016","endLine":226,"endColumn":25},{"ruleId":"1013","severity":1,"message":"1178","line":226,"column":27,"nodeType":"1015","messageId":"1016","endLine":226,"endColumn":32},{"ruleId":"1013","severity":1,"message":"1176","line":293,"column":11,"nodeType":"1015","messageId":"1016","endLine":293,"endColumn":18},{"ruleId":"1013","severity":1,"message":"1177","line":293,"column":20,"nodeType":"1015","messageId":"1016","endLine":293,"endColumn":25},{"ruleId":"1013","severity":1,"message":"1178","line":293,"column":27,"nodeType":"1015","messageId":"1016","endLine":293,"endColumn":32},{"ruleId":"1013","severity":1,"message":"1104","line":6,"column":8,"nodeType":"1015","messageId":"1016","endLine":6,"endColumn":14},{"ruleId":"1013","severity":1,"message":"1179","line":7,"column":8,"nodeType":"1015","messageId":"1016","endLine":7,"endColumn":24},{"ruleId":"1013","severity":1,"message":"1180","line":8,"column":8,"nodeType":"1015","messageId":"1016","endLine":8,"endColumn":18},{"ruleId":"1013","severity":1,"message":"1181","line":15,"column":62,"nodeType":"1015","messageId":"1016","endLine":15,"endColumn":74},{"ruleId":"1013","severity":1,"message":"1182","line":18,"column":8,"nodeType":"1015","messageId":"1016","endLine":18,"endColumn":31},{"ruleId":"1013","severity":1,"message":"1183","line":19,"column":24,"nodeType":"1015","messageId":"1016","endLine":19,"endColumn":36},{"ruleId":"1013","severity":1,"message":"1184","line":32,"column":17,"nodeType":"1015","messageId":"1016","endLine":32,"endColumn":25},{"ruleId":"1009","severity":1,"message":"1185","line":48,"column":6,"nodeType":"1011","endLine":48,"endColumn":13,"suggestions":"1186"},{"ruleId":"1009","severity":1,"message":"1187","line":56,"column":6,"nodeType":"1011","endLine":56,"endColumn":34,"suggestions":"1188"},{"ruleId":"1013","severity":1,"message":"1189","line":58,"column":9,"nodeType":"1015","messageId":"1016","endLine":58,"endColumn":19},{"ruleId":"1013","severity":1,"message":"1190","line":244,"column":40,"nodeType":"1015","messageId":"1016","endLine":244,"endColumn":52},{"ruleId":"1013","severity":1,"message":"1191","line":2,"column":9,"nodeType":"1015","messageId":"1016","endLine":2,"endColumn":18},{"ruleId":"1013","severity":1,"message":"1192","line":2,"column":35,"nodeType":"1015","messageId":"1016","endLine":2,"endColumn":48},{"ruleId":"1013","severity":1,"message":"1193","line":12,"column":7,"nodeType":"1015","messageId":"1016","endLine":12,"endColumn":26},{"ruleId":"1060","severity":1,"message":"1061","line":44,"column":23,"nodeType":"1062","messageId":"1063","endLine":44,"endColumn":25},{"ruleId":"1060","severity":1,"message":"1115","line":44,"column":41,"nodeType":"1062","messageId":"1063","endLine":44,"endColumn":43},{"ruleId":"1194","severity":1,"message":"1195","line":60,"column":13,"nodeType":"1196","messageId":"1197","endLine":62,"endColumn":33},{"ruleId":"1060","severity":1,"message":"1115","line":73,"column":35,"nodeType":"1062","messageId":"1063","endLine":73,"endColumn":37},{"ruleId":"1013","severity":1,"message":"1198","line":79,"column":23,"nodeType":"1015","messageId":"1016","endLine":79,"endColumn":31},{"ruleId":"1013","severity":1,"message":"1183","line":3,"column":49,"nodeType":"1015","messageId":"1016","endLine":3,"endColumn":61},{"ruleId":"1060","severity":1,"message":"1115","line":79,"column":42,"nodeType":"1062","messageId":"1063","endLine":79,"endColumn":44},{"ruleId":"1013","severity":1,"message":"1199","line":93,"column":25,"nodeType":"1015","messageId":"1016","endLine":93,"endColumn":36},{"ruleId":"1013","severity":1,"message":"1200","line":93,"column":38,"nodeType":"1015","messageId":"1016","endLine":93,"endColumn":46},{"ruleId":"1013","severity":1,"message":"1201","line":93,"column":48,"nodeType":"1015","messageId":"1016","endLine":93,"endColumn":55},{"ruleId":"1060","severity":1,"message":"1115","line":114,"column":42,"nodeType":"1062","messageId":"1063","endLine":114,"endColumn":44},{"ruleId":"1013","severity":1,"message":"1199","line":129,"column":25,"nodeType":"1015","messageId":"1016","endLine":129,"endColumn":36},{"ruleId":"1013","severity":1,"message":"1200","line":129,"column":38,"nodeType":"1015","messageId":"1016","endLine":129,"endColumn":46},{"ruleId":"1013","severity":1,"message":"1201","line":129,"column":48,"nodeType":"1015","messageId":"1016","endLine":129,"endColumn":55},{"ruleId":"1013","severity":1,"message":"1199","line":182,"column":19,"nodeType":"1015","messageId":"1016","endLine":182,"endColumn":30},{"ruleId":"1013","severity":1,"message":"1200","line":182,"column":32,"nodeType":"1015","messageId":"1016","endLine":182,"endColumn":40},{"ruleId":"1013","severity":1,"message":"1201","line":182,"column":42,"nodeType":"1015","messageId":"1016","endLine":182,"endColumn":49},{"ruleId":"1060","severity":1,"message":"1061","line":188,"column":44,"nodeType":"1062","messageId":"1063","endLine":188,"endColumn":46},{"ruleId":"1060","severity":1,"message":"1061","line":218,"column":29,"nodeType":"1062","messageId":"1063","endLine":218,"endColumn":31},{"ruleId":"1060","severity":1,"message":"1061","line":227,"column":26,"nodeType":"1062","messageId":"1063","endLine":227,"endColumn":28},{"ruleId":"1013","severity":1,"message":"1162","line":231,"column":7,"nodeType":"1015","messageId":"1016","endLine":231,"endColumn":13},{"ruleId":"1013","severity":1,"message":"1202","line":247,"column":20,"nodeType":"1015","messageId":"1016","endLine":247,"endColumn":29},{"ruleId":"1194","severity":1,"message":"1195","line":254,"column":3,"nodeType":"1203","messageId":"1197","endLine":254,"endColumn":14},{"ruleId":"1060","severity":1,"message":"1115","line":268,"column":33,"nodeType":"1062","messageId":"1063","endLine":268,"endColumn":35},{"ruleId":"1204","severity":1,"message":"1205","line":268,"column":51,"nodeType":"1062","messageId":"1206","endLine":268,"endColumn":73},{"ruleId":"1060","severity":1,"message":"1115","line":268,"column":67,"nodeType":"1062","messageId":"1063","endLine":268,"endColumn":69},{"ruleId":"1060","severity":1,"message":"1115","line":268,"column":92,"nodeType":"1062","messageId":"1063","endLine":268,"endColumn":94},{"ruleId":"1060","severity":1,"message":"1115","line":273,"column":44,"nodeType":"1062","messageId":"1063","endLine":273,"endColumn":46},{"ruleId":"1013","severity":1,"message":"1201","line":400,"column":11,"nodeType":"1015","messageId":"1016","endLine":400,"endColumn":18},{"ruleId":"1060","severity":1,"message":"1115","line":29,"column":28,"nodeType":"1062","messageId":"1063","endLine":29,"endColumn":30},{"ruleId":"1013","severity":1,"message":"1207","line":157,"column":7,"nodeType":"1015","messageId":"1016","endLine":157,"endColumn":23},{"ruleId":"1013","severity":1,"message":"1208","line":1,"column":8,"nodeType":"1015","messageId":"1016","endLine":1,"endColumn":13},{"ruleId":"1009","severity":1,"message":"1209","line":16,"column":8,"nodeType":"1011","endLine":16,"endColumn":15,"suggestions":"1210"},{"ruleId":"1013","severity":1,"message":"1211","line":1,"column":58,"nodeType":"1015","messageId":"1016","endLine":1,"endColumn":88},{"ruleId":"1013","severity":1,"message":"1047","line":1,"column":27,"nodeType":"1015","messageId":"1016","endLine":1,"endColumn":36},{"ruleId":"1013","severity":1,"message":"1212","line":3,"column":8,"nodeType":"1015","messageId":"1016","endLine":3,"endColumn":18},{"ruleId":"1013","severity":1,"message":"1129","line":1,"column":10,"nodeType":"1015","messageId":"1016","endLine":1,"endColumn":18},{"ruleId":"1009","severity":1,"message":"1010","line":13,"column":8,"nodeType":"1011","endLine":13,"endColumn":10,"suggestions":"1213"},{"ruleId":"1013","severity":1,"message":"1214","line":12,"column":28,"nodeType":"1015","messageId":"1016","endLine":12,"endColumn":36},{"ruleId":"1013","severity":1,"message":"1215","line":13,"column":28,"nodeType":"1015","messageId":"1016","endLine":13,"endColumn":43},{"ruleId":"1013","severity":1,"message":"1216","line":15,"column":8,"nodeType":"1015","messageId":"1016","endLine":15,"endColumn":30},{"ruleId":"1013","severity":1,"message":"1217","line":19,"column":28,"nodeType":"1015","messageId":"1016","endLine":19,"endColumn":37},{"ruleId":"1013","severity":1,"message":"1218","line":20,"column":8,"nodeType":"1015","messageId":"1016","endLine":20,"endColumn":20},{"ruleId":"1013","severity":1,"message":"1219","line":23,"column":8,"nodeType":"1015","messageId":"1016","endLine":23,"endColumn":26},{"ruleId":"1013","severity":1,"message":"1220","line":29,"column":22,"nodeType":"1015","messageId":"1016","endLine":29,"endColumn":39},{"ruleId":"1013","severity":1,"message":"1221","line":31,"column":10,"nodeType":"1015","messageId":"1016","endLine":31,"endColumn":26},{"ruleId":"1013","severity":1,"message":"1222","line":31,"column":28,"nodeType":"1015","messageId":"1016","endLine":31,"endColumn":46},{"ruleId":"1013","severity":1,"message":"1164","line":31,"column":138,"nodeType":"1015","messageId":"1016","endLine":31,"endColumn":155},{"ruleId":"1013","severity":1,"message":"1223","line":31,"column":157,"nodeType":"1015","messageId":"1016","endLine":31,"endColumn":182},{"ruleId":"1013","severity":1,"message":"1224","line":32,"column":23,"nodeType":"1015","messageId":"1016","endLine":32,"endColumn":44},{"ruleId":"1013","severity":1,"message":"1225","line":172,"column":9,"nodeType":"1015","messageId":"1016","endLine":172,"endColumn":22},{"ruleId":"1009","severity":1,"message":"1226","line":184,"column":6,"nodeType":"1011","endLine":184,"endColumn":12,"suggestions":"1227"},{"ruleId":"1013","severity":1,"message":"1228","line":4,"column":10,"nodeType":"1015","messageId":"1016","endLine":4,"endColumn":20},{"ruleId":"1013","severity":1,"message":"1229","line":4,"column":22,"nodeType":"1015","messageId":"1016","endLine":4,"endColumn":32},{"ruleId":"1013","severity":1,"message":"1230","line":6,"column":28,"nodeType":"1015","messageId":"1016","endLine":6,"endColumn":38},{"ruleId":"1013","severity":1,"message":"1231","line":67,"column":13,"nodeType":"1015","messageId":"1016","endLine":67,"endColumn":18},{"ruleId":"1009","severity":1,"message":"1010","line":78,"column":8,"nodeType":"1011","endLine":78,"endColumn":19,"suggestions":"1232"},{"ruleId":"1134","severity":1,"message":"1233","line":425,"column":9,"nodeType":"1136","messageId":"1063","endLine":425,"endColumn":14},{"ruleId":"1013","severity":1,"message":"1234","line":4,"column":8,"nodeType":"1015","messageId":"1016","endLine":4,"endColumn":16},{"ruleId":"1013","severity":1,"message":"1216","line":4,"column":8,"nodeType":"1015","messageId":"1016","endLine":4,"endColumn":30},{"ruleId":"1013","severity":1,"message":"1235","line":15,"column":8,"nodeType":"1015","messageId":"1016","endLine":15,"endColumn":17},{"ruleId":"1013","severity":1,"message":"1236","line":18,"column":8,"nodeType":"1015","messageId":"1016","endLine":18,"endColumn":14},{"ruleId":"1013","severity":1,"message":"1214","line":24,"column":28,"nodeType":"1015","messageId":"1016","endLine":24,"endColumn":36},{"ruleId":"1013","severity":1,"message":"1237","line":26,"column":8,"nodeType":"1015","messageId":"1016","endLine":26,"endColumn":36},{"ruleId":"1013","severity":1,"message":"1238","line":27,"column":8,"nodeType":"1015","messageId":"1016","endLine":27,"endColumn":24},{"ruleId":"1013","severity":1,"message":"1220","line":32,"column":22,"nodeType":"1015","messageId":"1016","endLine":32,"endColumn":39},{"ruleId":"1013","severity":1,"message":"1164","line":34,"column":138,"nodeType":"1015","messageId":"1016","endLine":34,"endColumn":155},{"ruleId":"1013","severity":1,"message":"1223","line":34,"column":157,"nodeType":"1015","messageId":"1016","endLine":34,"endColumn":182},{"ruleId":"1013","severity":1,"message":"1224","line":35,"column":23,"nodeType":"1015","messageId":"1016","endLine":35,"endColumn":44},{"ruleId":"1013","severity":1,"message":"1239","line":94,"column":10,"nodeType":"1015","messageId":"1016","endLine":94,"endColumn":13},{"ruleId":"1013","severity":1,"message":"1240","line":95,"column":10,"nodeType":"1015","messageId":"1016","endLine":95,"endColumn":15},{"ruleId":"1013","severity":1,"message":"1241","line":97,"column":9,"nodeType":"1015","messageId":"1016","endLine":97,"endColumn":19},{"ruleId":"1013","severity":1,"message":"1242","line":100,"column":9,"nodeType":"1015","messageId":"1016","endLine":100,"endColumn":20},{"ruleId":"1009","severity":1,"message":"1243","line":113,"column":6,"nodeType":"1011","endLine":113,"endColumn":12,"suggestions":"1244"},{"ruleId":"1013","severity":1,"message":"1245","line":130,"column":9,"nodeType":"1015","messageId":"1016","endLine":130,"endColumn":18},{"ruleId":"1013","severity":1,"message":"1246","line":135,"column":9,"nodeType":"1015","messageId":"1016","endLine":135,"endColumn":29},{"ruleId":"1013","severity":1,"message":"1247","line":187,"column":10,"nodeType":"1015","messageId":"1016","endLine":187,"endColumn":17},{"ruleId":"1013","severity":1,"message":"1248","line":187,"column":19,"nodeType":"1015","messageId":"1016","endLine":187,"endColumn":29},{"ruleId":"1013","severity":1,"message":"1050","line":8,"column":10,"nodeType":"1015","messageId":"1016","endLine":8,"endColumn":21},{"ruleId":"1060","severity":1,"message":"1061","line":58,"column":125,"nodeType":"1062","messageId":"1063","endLine":58,"endColumn":127},{"ruleId":"1013","severity":1,"message":"1249","line":3,"column":28,"nodeType":"1015","messageId":"1016","endLine":3,"endColumn":40},{"ruleId":"1013","severity":1,"message":"1250","line":4,"column":28,"nodeType":"1015","messageId":"1016","endLine":4,"endColumn":40},{"ruleId":"1013","severity":1,"message":"1251","line":5,"column":28,"nodeType":"1015","messageId":"1016","endLine":5,"endColumn":39},{"ruleId":"1013","severity":1,"message":"1252","line":6,"column":28,"nodeType":"1015","messageId":"1016","endLine":6,"endColumn":40},{"ruleId":"1013","severity":1,"message":"1253","line":7,"column":28,"nodeType":"1015","messageId":"1016","endLine":7,"endColumn":37},{"ruleId":"1013","severity":1,"message":"1254","line":9,"column":28,"nodeType":"1015","messageId":"1016","endLine":9,"endColumn":38},{"ruleId":"1013","severity":1,"message":"1255","line":11,"column":8,"nodeType":"1015","messageId":"1016","endLine":11,"endColumn":13},{"ruleId":"1013","severity":1,"message":"1256","line":13,"column":10,"nodeType":"1015","messageId":"1016","endLine":13,"endColumn":25},{"ruleId":"1009","severity":1,"message":"1257","line":64,"column":6,"nodeType":"1011","endLine":64,"endColumn":10,"suggestions":"1258"},{"ruleId":"1027","severity":1,"message":"1028","line":4,"column":1,"nodeType":"1029","endLine":17,"endColumn":2},{"ruleId":"1027","severity":1,"message":"1028","line":4,"column":1,"nodeType":"1029","endLine":17,"endColumn":2},{"ruleId":"1013","severity":1,"message":"1031","line":5,"column":8,"nodeType":"1015","messageId":"1016","endLine":5,"endColumn":13},{"ruleId":"1013","severity":1,"message":"1259","line":2,"column":17,"nodeType":"1015","messageId":"1016","endLine":2,"endColumn":26},{"ruleId":"1013","severity":1,"message":"1019","line":3,"column":8,"nodeType":"1015","messageId":"1016","endLine":3,"endColumn":25},{"ruleId":"1013","severity":1,"message":"1260","line":8,"column":8,"nodeType":"1015","messageId":"1016","endLine":8,"endColumn":16},{"ruleId":"1013","severity":1,"message":"1261","line":9,"column":10,"nodeType":"1015","messageId":"1016","endLine":9,"endColumn":39},{"ruleId":"1013","severity":1,"message":"1149","line":14,"column":15,"nodeType":"1015","messageId":"1016","endLine":14,"endColumn":21},{"ruleId":"1013","severity":1,"message":"1262","line":14,"column":23,"nodeType":"1015","messageId":"1016","endLine":14,"endColumn":29},{"ruleId":"1013","severity":1,"message":"1263","line":14,"column":31,"nodeType":"1015","messageId":"1016","endLine":14,"endColumn":39},{"ruleId":"1013","severity":1,"message":"1264","line":14,"column":41,"nodeType":"1015","messageId":"1016","endLine":14,"endColumn":47},{"ruleId":"1013","severity":1,"message":"1265","line":14,"column":49,"nodeType":"1015","messageId":"1016","endLine":14,"endColumn":56},{"ruleId":"1013","severity":1,"message":"1266","line":14,"column":58,"nodeType":"1015","messageId":"1016","endLine":14,"endColumn":66},{"ruleId":"1013","severity":1,"message":"1181","line":15,"column":10,"nodeType":"1015","messageId":"1016","endLine":15,"endColumn":22},{"ruleId":"1013","severity":1,"message":"1267","line":17,"column":10,"nodeType":"1015","messageId":"1016","endLine":17,"endColumn":20},{"ruleId":"1013","severity":1,"message":"1268","line":18,"column":10,"nodeType":"1015","messageId":"1016","endLine":18,"endColumn":24},{"ruleId":"1013","severity":1,"message":"1269","line":19,"column":8,"nodeType":"1015","messageId":"1016","endLine":19,"endColumn":14},{"ruleId":"1134","severity":1,"message":"1151","line":147,"column":5,"nodeType":"1136","messageId":"1063","endLine":147,"endColumn":10},{"ruleId":"1013","severity":1,"message":"1153","line":226,"column":23,"nodeType":"1015","messageId":"1016","endLine":226,"endColumn":35},{"ruleId":"1013","severity":1,"message":"1154","line":228,"column":21,"nodeType":"1015","messageId":"1016","endLine":228,"endColumn":31},{"ruleId":"1009","severity":1,"message":"1270","line":240,"column":8,"nodeType":"1011","endLine":240,"endColumn":10,"suggestions":"1271"},{"ruleId":"1013","severity":1,"message":"1031","line":5,"column":8,"nodeType":"1015","messageId":"1016","endLine":5,"endColumn":13},"no-native-reassign",["1272"],"no-negated-in-lhs",["1273"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["1274"],"no-unused-vars","'SubmitNewSite' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'APPSTORE_PROVIDER_MASTER_PUBKEY' is defined but never used.","'PersonOutlineIcon' is defined but never used.","'ThemeProvider' is defined but never used.","'QuestionIcon' is defined but never used.","'LightTheme' is assigned a value but never used.","'DarkTheme' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'userPreferences', 'userProfile', and 'userSession?.mySky'. Either include them or remove the dependency array.",["1275"],"'handleClick' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'ACT_TY_SET_APP_COMMENTS' is defined but never used.","'store' is defined but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"1276","text":"1277"},"'ACT_TY_SET_PUBLISHED_APPS' is defined but never used.",{"range":"1278","text":"1277"},{"range":"1279","text":"1277"},{"range":"1280","text":"1277"},"'EPIC_TY_INSTALLED_FOR_LOGIN_APP' is defined but never used.",{"range":"1281","text":"1277"},{"range":"1282","text":"1277"},{"range":"1283","text":"1277"},{"range":"1284","text":"1277"},{"range":"1285","text":"1277"},"'useEffect' is defined but never used.","'InputBase' is defined but never used.","'SearchIcon' is defined but never used.","'useSelector' is defined but never used.","'BROWSER_STORAGE' is defined but never used.","'UtilitiesItem' is defined but never used.","'ListFilter' is defined but never used.","'CustomPagination' is defined but never used.","'installApp' is defined but never used.","'setLoaderDisplay' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression",["1286"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Button' is defined but never used.","'Grid' is defined but never used.","'SelectItem' is defined but never used.","'AppCard' is defined but never used.","'getMyInstalledApps' is defined but never used.","'installedAppListObj' is assigned a value but never used.","'setInstalledAppListObj' is assigned a value but never used.",["1287"],"'SubmitBtn' is defined but never used.","'useInterval' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'installedAppsStoreForLogin', and 'publishedAppsStore'. Either include them or remove the dependency array.",["1288"],"'tagsWithCount' is assigned a value but never used.","'showSlider' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'infoModalClipboardTooltip' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadHostedApps'. Either include it or remove the dependency array.",["1289"],"'Link' is defined but never used.","'userProfileDacTest' is defined but never used.","'stUserSession' is assigned a value but never used.","'Controller' is defined but never used.","'UploadAppLogo' is defined but never used.","'getMyHostedApps' is defined but never used.","'useLoadHostedAppFromUrl' is defined but never used.","'UPLOAD_SOURCE_NEW_HOSTING' is defined but never used.","'optionsVersion' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'appId', 'dispatch', 'publishedAppsStore', and 'setValue'. Either include them or remove the dependency array.",["1290"],"'isVideoUploaded' is assigned a value but never used.","'onChangeHandlerForImages' is assigned a value but never used.","'onChangeHandlerForVideos' is assigned a value but never used.","'Select' is defined but never used.","'Field' is defined but never used.","'useFormik' is defined but never used.","'FileCopyIcon' is defined but never used.","'DescriptionIcon' is defined but never used.","'Switch' is defined but never used.","'LinkIcon' is defined but never used.","'UPLOAD_SOURCE_DEPLOY' is defined but never used.","'versionOptions' is assigned a value but never used.","'optionsAge' is assigned a value but never used.","'socialOption' is assigned a value but never used.","'reactSelectStyles' is assigned a value but never used.","'selectedOption' is assigned a value but never used.","'setSelectedOption' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'loadHostedApp', and 'snUploadListStore'. Either include them or remove the dependency array.",["1291"],"Expected '!==' and instead saw '!='.","'copyToClipboard' is assigned a value but never used.","'BsFileEarmarkArrowUp' is defined but never used.",["1292"],"'useParams' is defined but never used.","'verson' is assigned a value but never used.","'setVersion' is assigned a value but never used.","'setAppDetail' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setValue'. Either include it or remove the dependency array.",["1293"],"'manageSubmitLoader' is assigned a value but never used.","'setLogoUploaded' is assigned a value but never used.","'logoLoaderHandler' is assigned a value but never used.","'UploadLogoFunction' is assigned a value but never used.","'useState' is defined but never used.","'Snackbar' is defined but never used.","'Alert' is defined but never used.","'useDispatch' is defined but never used.","'Yup' is defined but never used.","no-dupe-keys","Duplicate key 'backgroundColor'.","ObjectExpression","React Hook useEffect has missing dependencies: 'dispatch' and 'snUploadListStore'. Either include them or remove the dependency array.",["1294"],"'Paper' is defined but never used.","'withStyles' is defined but never used.","'Typography' is defined but never used.","'SnDisclaimer' is defined but never used.","'getMyFollowersAction' is defined but never used.","'getMyFollowingsAction' is defined but never used.","'userID' is assigned a value but never used.","'setUserID' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history' and 'installedAppsStoreForLogin'. Either include them or remove the dependency array.",["1295"],"'Search' is defined but never used.","'getProfile' is defined but never used.","Duplicate key 'label'.","'isLoading' is assigned a value but never used.","'setIsLoading' is assigned a value but never used.","'setIsError' is assigned a value but never used.","'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setProfileFormicObj'. Either include it or remove the dependency array.",["1296"],"'Profile' is defined but never used.","'getJSONfromIDB' is defined but never used.","'IDB_STORE_SKYDB_CACHE' is defined but never used.","'setUserSession' is defined but never used.","'status' is assigned a value but never used.","'result' is assigned a value but never used.","'EVENT_APP_COMMENT' is defined but never used.","'FAVORITE_REMOVED' is defined but never used.","'setRegistryEntry' is defined but never used.","'putFile' is defined but never used.","'getFeedDAC' is defined but never used.","'getUserSession' is defined but never used.","'createDummyUserProfileObject' is defined but never used.","'firstTime' is assigned a value but never used.","'getbase32URlForSkapp' is assigned a value but never used.","'videoResolve' is assigned a value but never used.","'Formik' is defined but never used.","'Form' is defined but never used.","'touched' is assigned a value but never used.","'error' is assigned a value but never used.","'value' is assigned a value but never used.","'FormControlLabel' is defined but never used.","'classNames' is defined but never used.","'skylinkToUrl' is defined but never used.","'CloudUploadOutlinedIcon' is defined but never used.","'parseSkylink' is defined but never used.","'setIsDir' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props' and 'setFileToStore'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1297"],"React Hook useEffect has a missing dependency: 'inputRef'. Either include it or remove the dependency array.",["1298"],"'videoToImg' is assigned a value but never used.","'isDragActive' is assigned a value but never used.","'getUserID' is defined but never used.","'getFile_MySky' is defined but never used.","'GEQ_HEADER_DATA_KEY' is assigned a value but never used.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","'revision' is assigned a value but never used.","'contentType' is assigned a value but never used.","'metadata' is assigned a value but never used.","'skylink' is assigned a value but never used.","'signature' is assigned a value but never used.","ReturnStatement","use-isnan","Use the isNaN function to compare with NaN.","comparisonWithNaN","'convertEdToCurve' is assigned a value but never used.","'React' is defined but never used.","React Hook useEffect has a missing dependency: 'loadAppDetail'. Either include it or remove the dependency array.",["1299"],"'EPIC_TY_GET_ALL_PUBLISHED_APPS' is defined but never used.","'ScreenShot' is defined but never used.",["1300"],"'StarIcon' is defined but never used.","'StarIconOutline' is defined but never used.","'VisibilityOutlinedIcon' is defined but never used.","'HeartIcon' is defined but never used.","'FavoriteIcon' is defined but never used.","'LaunchOutlinedIcon' is defined but never used.","'getAppStatsAction' is defined but never used.","'EVENT_APP_VIEWED' is defined but never used.","'EVENT_APP_ACCESSED' is defined but never used.","'EVENT_APP_COMMENT_REMOVED' is defined but never used.","'getAggregatedAppStats' is defined but never used.","'appStatsStore' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchAggregatedAppStats' and 'fetchMyAppStats'. Either include them or remove the dependency array.",["1301"],"'ExpandLess' is defined but never used.","'ExpandMore' is defined but never used.","'FilterIcon' is defined but never used.","'width' is assigned a value but never used.",["1302"],"Duplicate key 'color'.","'EditIcon' is defined but never used.","'CardMedia' is defined but never used.","'AppImg' is defined but never used.","'FiberManualRecordRoundedIcon' is defined but never used.","'CheckRoundedIcon' is defined but never used.","'Fav' is assigned a value but never used.","'liked' is assigned a value but never used.","'favHandler' is assigned a value but never used.","'likeHandler' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchAggregatedAppStats', 'fetchMyAppStats', and 'stUserSession'. Either include them or remove the dependency array.",["1303"],"'pushRoute' is assigned a value but never used.","'checkBoxClickHanlder' is assigned a value but never used.","'uiliked' is assigned a value but never used.","'setUiLiked' is assigned a value but never used.","'FacebookIcon' is defined but never used.","'WhatsappIcon' is defined but never used.","'YoutubeIcon' is defined but never used.","'LinkedInIcon' is defined but never used.","'InstaIcon' is defined but never used.","'RedditIcon' is defined but never used.","'axios' is defined but never used.","'FontAwesomeIcon' is defined but never used.","React Hook React.useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["1304"],"'createRef' is defined but never used.","'SnUpload' is defined but never used.","'UPLOAD_SOURCE_NEW_HOSTING_IMG' is defined but never used.","'GitHub' is defined but never used.","'Facebook' is defined but never used.","'Reddit' is defined but never used.","'Twitter' is defined but never used.","'Telegram' is defined but never used.","'useHistory' is defined but never used.","'getPreferences' is defined but never used.","'Loader' is defined but never used.","React Hook useEffect has missing dependencies: 'setPreferencesFormicOb' and 'userPreferences'. Either include them or remove the dependency array.",["1305"],"no-global-assign","no-unsafe-negation",{"desc":"1306","fix":"1307"},{"desc":"1308","fix":"1309"},[487,497],"\n        .",[488,498],[522,532],[1419,1429],[624,634],[1409,1419],[2201,2211],[505,515],[1200,1210],{"desc":"1306","fix":"1310"},{"desc":"1306","fix":"1311"},{"desc":"1312","fix":"1313"},{"desc":"1314","fix":"1315"},{"desc":"1316","fix":"1317"},{"desc":"1318","fix":"1319"},{"desc":"1306","fix":"1320"},{"desc":"1321","fix":"1322"},{"desc":"1323","fix":"1324"},{"desc":"1325","fix":"1326"},{"desc":"1327","fix":"1328"},{"desc":"1329","fix":"1330"},{"desc":"1331","fix":"1332"},{"desc":"1333","fix":"1334"},{"desc":"1306","fix":"1335"},{"desc":"1336","fix":"1337"},{"desc":"1338","fix":"1339"},{"desc":"1340","fix":"1341"},{"desc":"1342","fix":"1343"},{"desc":"1344","fix":"1345"},"Update the dependencies array to be: [dispatch]",{"range":"1346","text":"1347"},"Update the dependencies array to be: [dispatch, userPreferences, userProfile, userSession?.mySky]",{"range":"1348","text":"1349"},{"range":"1350","text":"1347"},{"range":"1351","text":"1347"},"Update the dependencies array to be: [dispatch, installedAppsStoreForLogin, publishedAppsStore]",{"range":"1352","text":"1353"},"Update the dependencies array to be: [loadHostedApps]",{"range":"1354","text":"1355"},"Update the dependencies array to be: [appId, dispatch, publishedAppsStore, setValue]",{"range":"1356","text":"1357"},"Update the dependencies array to be: [dispatch, loadHostedApp, snUploadListStore]",{"range":"1358","text":"1359"},{"range":"1360","text":"1347"},"Update the dependencies array to be: [appDetail, setValue]",{"range":"1361","text":"1362"},"Update the dependencies array to be: [dispatch, snUploadListStore]",{"range":"1363","text":"1364"},"Update the dependencies array to be: [history, installedAppsStoreForLogin, userSession]",{"range":"1365","text":"1366"},"Update the dependencies array to be: [setProfileFormicObj, userProfile]",{"range":"1367","text":"1368"},"Update the dependencies array to be: [files, props, setFileToStore]",{"range":"1369","text":"1370"},"Update the dependencies array to be: [props.directoryMode, isDir, inputRef]",{"range":"1371","text":"1372"},"Update the dependencies array to be: [appId, loadAppDetail]",{"range":"1373","text":"1374"},{"range":"1375","text":"1347"},"Update the dependencies array to be: [data, fetchAggregatedAppStats, fetchMyAppStats]",{"range":"1376","text":"1377"},"Update the dependencies array to be: [dispatch, filterVal]",{"range":"1378","text":"1379"},"Update the dependencies array to be: [fetchAggregatedAppStats, fetchMyAppStats, item, stUserSession]",{"range":"1380","text":"1381"},"Update the dependencies array to be: [dispatch, id]",{"range":"1382","text":"1383"},"Update the dependencies array to be: [setPreferencesFormicOb, userPreferences]",{"range":"1384","text":"1385"},[905,907],"[dispatch]",[10052,10054],"[dispatch, userPreferences, userProfile, userSession?.mySky]",[4784,4786],[5367,5369],[8193,8195],"[dispatch, installedAppsStoreForLogin, publishedAppsStore]",[6944,6946],"[loadHostedApps]",[9037,9039],"[appId, dispatch, publishedAppsStore, setValue]",[5239,5241],"[dispatch, loadHostedApp, snUploadListStore]",[503,505],[6797,6808],"[appDetail, setValue]",[4963,4965],"[dispatch, snUploadListStore]",[3027,3040],"[history, installedAppsStoreForLogin, userSession]",[8044,8057],"[setProfileFormicObj, userProfile]",[1981,1988],"[files, props, setFileToStore]",[2199,2227],"[props.directoryMode, isDir, inputRef]",[513,520],"[appId, loadAppDetail]",[425,427],[5078,5084],"[data, fetchAggregatedAppStats, fetchMyAppStats]",[2526,2537],"[dispatch, filterVal]",[4605,4611],"[fetchAggregatedAppStats, fetchMyAppStats, item, stUserSession]",[1699,1703],"[dispatch, id]",[6990,6992],"[setPreferencesFormicOb, userPreferences]"]